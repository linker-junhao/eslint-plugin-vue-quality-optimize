{
  "version": 3,
  "sources": ["../node_modules/vue-eslint-parser/node_modules/eslint-visitor-keys/lib/index.js", "../node_modules/lodash/_freeGlobal.js", "../node_modules/lodash/_root.js", "../node_modules/lodash/_Symbol.js", "../node_modules/lodash/_getRawTag.js", "../node_modules/lodash/_objectToString.js", "../node_modules/lodash/_baseGetTag.js", "../node_modules/lodash/isObjectLike.js", "../node_modules/lodash/isSymbol.js", "../node_modules/lodash/_baseSortedIndexBy.js", "../node_modules/lodash/identity.js", "../node_modules/lodash/_baseSortedIndex.js", "../node_modules/lodash/sortedLastIndex.js", "../node_modules/lodash/last.js", "../node_modules/lodash/_baseFindIndex.js", "../node_modules/lodash/_listCacheClear.js", "../node_modules/lodash/eq.js", "../node_modules/lodash/_assocIndexOf.js", "../node_modules/lodash/_listCacheDelete.js", "../node_modules/lodash/_listCacheGet.js", "../node_modules/lodash/_listCacheHas.js", "../node_modules/lodash/_listCacheSet.js", "../node_modules/lodash/_ListCache.js", "../node_modules/lodash/_stackClear.js", "../node_modules/lodash/_stackDelete.js", "../node_modules/lodash/_stackGet.js", "../node_modules/lodash/_stackHas.js", "../node_modules/lodash/isObject.js", "../node_modules/lodash/isFunction.js", "../node_modules/lodash/_coreJsData.js", "../node_modules/lodash/_isMasked.js", "../node_modules/lodash/_toSource.js", "../node_modules/lodash/_baseIsNative.js", "../node_modules/lodash/_getValue.js", "../node_modules/lodash/_getNative.js", "../node_modules/lodash/_Map.js", "../node_modules/lodash/_nativeCreate.js", "../node_modules/lodash/_hashClear.js", "../node_modules/lodash/_hashDelete.js", "../node_modules/lodash/_hashGet.js", "../node_modules/lodash/_hashHas.js", "../node_modules/lodash/_hashSet.js", "../node_modules/lodash/_Hash.js", "../node_modules/lodash/_mapCacheClear.js", "../node_modules/lodash/_isKeyable.js", "../node_modules/lodash/_getMapData.js", "../node_modules/lodash/_mapCacheDelete.js", "../node_modules/lodash/_mapCacheGet.js", "../node_modules/lodash/_mapCacheHas.js", "../node_modules/lodash/_mapCacheSet.js", "../node_modules/lodash/_MapCache.js", "../node_modules/lodash/_stackSet.js", "../node_modules/lodash/_Stack.js", "../node_modules/lodash/_setCacheAdd.js", "../node_modules/lodash/_setCacheHas.js", "../node_modules/lodash/_SetCache.js", "../node_modules/lodash/_arraySome.js", "../node_modules/lodash/_cacheHas.js", "../node_modules/lodash/_equalArrays.js", "../node_modules/lodash/_Uint8Array.js", "../node_modules/lodash/_mapToArray.js", "../node_modules/lodash/_setToArray.js", "../node_modules/lodash/_equalByTag.js", "../node_modules/lodash/_arrayPush.js", "../node_modules/lodash/isArray.js", "../node_modules/lodash/_baseGetAllKeys.js", "../node_modules/lodash/_arrayFilter.js", "../node_modules/lodash/stubArray.js", "../node_modules/lodash/_getSymbols.js", "../node_modules/lodash/_baseTimes.js", "../node_modules/lodash/_baseIsArguments.js", "../node_modules/lodash/isArguments.js", "../node_modules/lodash/stubFalse.js", "../node_modules/lodash/isBuffer.js", "../node_modules/lodash/_isIndex.js", "../node_modules/lodash/isLength.js", "../node_modules/lodash/_baseIsTypedArray.js", "../node_modules/lodash/_baseUnary.js", "../node_modules/lodash/_nodeUtil.js", "../node_modules/lodash/isTypedArray.js", "../node_modules/lodash/_arrayLikeKeys.js", "../node_modules/lodash/_isPrototype.js", "../node_modules/lodash/_overArg.js", "../node_modules/lodash/_nativeKeys.js", "../node_modules/lodash/_baseKeys.js", "../node_modules/lodash/isArrayLike.js", "../node_modules/lodash/keys.js", "../node_modules/lodash/_getAllKeys.js", "../node_modules/lodash/_equalObjects.js", "../node_modules/lodash/_DataView.js", "../node_modules/lodash/_Promise.js", "../node_modules/lodash/_Set.js", "../node_modules/lodash/_WeakMap.js", "../node_modules/lodash/_getTag.js", "../node_modules/lodash/_baseIsEqualDeep.js", "../node_modules/lodash/_baseIsEqual.js", "../node_modules/lodash/_baseIsMatch.js", "../node_modules/lodash/_isStrictComparable.js", "../node_modules/lodash/_getMatchData.js", "../node_modules/lodash/_matchesStrictComparable.js", "../node_modules/lodash/_baseMatches.js", "../node_modules/lodash/_isKey.js", "../node_modules/lodash/memoize.js", "../node_modules/lodash/_memoizeCapped.js", "../node_modules/lodash/_stringToPath.js", "../node_modules/lodash/_arrayMap.js", "../node_modules/lodash/_baseToString.js", "../node_modules/lodash/toString.js", "../node_modules/lodash/_castPath.js", "../node_modules/lodash/_toKey.js", "../node_modules/lodash/_baseGet.js", "../node_modules/lodash/get.js", "../node_modules/lodash/_baseHasIn.js", "../node_modules/lodash/_hasPath.js", "../node_modules/lodash/hasIn.js", "../node_modules/lodash/_baseMatchesProperty.js", "../node_modules/lodash/_baseProperty.js", "../node_modules/lodash/_basePropertyDeep.js", "../node_modules/lodash/property.js", "../node_modules/lodash/_baseIteratee.js", "../node_modules/lodash/_trimmedEndIndex.js", "../node_modules/lodash/_baseTrim.js", "../node_modules/lodash/toNumber.js", "../node_modules/lodash/toFinite.js", "../node_modules/lodash/toInteger.js", "../node_modules/lodash/findLastIndex.js", "../node_modules/ms/index.js", "../node_modules/debug/src/common.js", "../node_modules/debug/src/browser.js", "../node_modules/has-flag/index.js", "../node_modules/supports-color/index.js", "../node_modules/debug/src/node.js", "../node_modules/debug/src/index.js", "../node_modules/lodash/head.js", "../node_modules/lodash/first.js", "../node_modules/lodash/sortedIndexBy.js", "../node_modules/estraverse/estraverse.js", "../node_modules/eslint-scope/lib/reference.js", "../node_modules/eslint-scope/lib/variable.js", "../node_modules/eslint-scope/lib/definition.js", "../node_modules/eslint-scope/lib/scope.js", "../node_modules/eslint-scope/lib/scope-manager.js", "../node_modules/esrecurse/node_modules/estraverse/estraverse.js", "../node_modules/esrecurse/esrecurse.js", "../node_modules/eslint-scope/lib/pattern-visitor.js", "../node_modules/eslint-scope/lib/referencer.js", "../node_modules/eslint-scope/lib/index.js", "../node_modules/vue-eslint-parser/node_modules/semver/semver.js", "../node_modules/acorn/dist/acorn.js", "../node_modules/acorn-jsx/xhtml.js", "../node_modules/acorn-jsx/index.js", "../node_modules/vue-eslint-parser/node_modules/espree/lib/ast-node-types.js", "../node_modules/vue-eslint-parser/node_modules/espree/lib/token-translator.js", "../node_modules/vue-eslint-parser/node_modules/espree/lib/options.js", "../node_modules/vue-eslint-parser/node_modules/espree/lib/espree.js", "../node_modules/vue-eslint-parser/node_modules/espree/espree.js", "../node_modules/lodash/sortedLastIndexBy.js", "../node_modules/esquery/node_modules/estraverse/estraverse.js", "../node_modules/esquery/parser.js", "../node_modules/esquery/esquery.js", "../node_modules/lodash/_isFlattenable.js", "../node_modules/lodash/_baseFlatten.js", "../node_modules/lodash/_apply.js", "../node_modules/lodash/_overRest.js", "../node_modules/lodash/constant.js", "../node_modules/lodash/_defineProperty.js", "../node_modules/lodash/_baseSetToString.js", "../node_modules/lodash/_shortOut.js", "../node_modules/lodash/_setToString.js", "../node_modules/lodash/_baseRest.js", "../node_modules/lodash/_baseIsNaN.js", "../node_modules/lodash/_strictIndexOf.js", "../node_modules/lodash/_baseIndexOf.js", "../node_modules/lodash/_arrayIncludes.js", "../node_modules/lodash/_arrayIncludesWith.js", "../node_modules/lodash/noop.js", "../node_modules/lodash/_createSet.js", "../node_modules/lodash/_baseUniq.js", "../node_modules/lodash/isArrayLikeObject.js", "../node_modules/lodash/union.js", "../node_modules/lodash/_baseIntersection.js", "../node_modules/lodash/_castArrayLikeObject.js", "../node_modules/lodash/intersection.js", "../node_modules/vue-eslint-parser/.temp/ast/src/ast/errors.ts", "../node_modules/vue-eslint-parser/.temp/ast/src/ast/nodes.ts", "../node_modules/vue-eslint-parser/.temp/ast/src/ast/traverse.ts", "../node_modules/vue-eslint-parser/.temp/common/src/common/lines-and-columns.ts", "../node_modules/vue-eslint-parser/.temp/common/src/common/location-calculator.ts", "../node_modules/vue-eslint-parser/.temp/common/src/common/debug.ts", "../node_modules/vue-eslint-parser/.temp/common/src/common/ast-utils.ts", "../node_modules/vue-eslint-parser/.temp/common/src/common/parser-options.ts", "../node_modules/vue-eslint-parser/.temp/common/src/common/create-require.ts", "../node_modules/vue-eslint-parser/.temp/common/src/common/linter-require.ts", "../node_modules/vue-eslint-parser/.temp/common/src/common/eslint-scope.ts", "../node_modules/vue-eslint-parser/.temp/common/src/common/espree.ts", "../node_modules/vue-eslint-parser/.temp/script/src/script/scope-analyzer.ts", "../node_modules/vue-eslint-parser/.temp/common/src/common/fix-locations.ts", "../node_modules/vue-eslint-parser/.temp/script-setup/src/script-setup/parser-options.ts", "../node_modules/vue-eslint-parser/.temp/script/src/script/index.ts", "../node_modules/vue-eslint-parser/.temp/common/src/common/token-utils.ts", "../node_modules/vue-eslint-parser/.temp/common/src/common/error-utils.ts", "../node_modules/vue-eslint-parser/.temp/template/src/template/index.ts", "../node_modules/vue-eslint-parser/.temp/html/util/src/html/util/attribute-names.ts", "../node_modules/vue-eslint-parser/.temp/html/util/src/html/util/tag-names.ts", "../node_modules/vue-eslint-parser/.temp/html/src/html/intermediate-tokenizer.ts", "../node_modules/vue-eslint-parser/.temp/html/src/html/parser.ts", "../node_modules/vue-eslint-parser/.temp/html/util/src/html/util/alternative-cr.ts", "../node_modules/vue-eslint-parser/.temp/html/util/src/html/util/entities.ts", "../node_modules/vue-eslint-parser/.temp/html/util/src/html/util/unicode.ts", "../node_modules/vue-eslint-parser/.temp/html/src/html/tokenizer.ts", "../node_modules/vue-eslint-parser/.temp/external/src/external/node-event-generator.ts", "../node_modules/vue-eslint-parser/.temp/external/token-store/src/external/token-store/utils.ts", "../node_modules/vue-eslint-parser/.temp/external/token-store/cursors/src/external/token-store/cursors/cursor.ts", "../node_modules/vue-eslint-parser/.temp/external/token-store/cursors/src/external/token-store/cursors/backward-token-comment-cursor.ts", "../node_modules/vue-eslint-parser/.temp/external/token-store/cursors/src/external/token-store/cursors/backward-token-cursor.ts", "../node_modules/vue-eslint-parser/.temp/external/token-store/cursors/src/external/token-store/cursors/decorative-cursor.ts", "../node_modules/vue-eslint-parser/.temp/external/token-store/cursors/src/external/token-store/cursors/filter-cursor.ts", "../node_modules/vue-eslint-parser/.temp/external/token-store/cursors/src/external/token-store/cursors/forward-token-comment-cursor.ts", "../node_modules/vue-eslint-parser/.temp/external/token-store/cursors/src/external/token-store/cursors/forward-token-cursor.ts", "../node_modules/vue-eslint-parser/.temp/external/token-store/cursors/src/external/token-store/cursors/limit-cursor.ts", "../node_modules/vue-eslint-parser/.temp/external/token-store/cursors/src/external/token-store/cursors/skip-cursor.ts", "../node_modules/vue-eslint-parser/.temp/external/token-store/cursors/src/external/token-store/cursors/index.ts", "../node_modules/vue-eslint-parser/.temp/external/token-store/cursors/src/external/token-store/cursors/padded-token-cursor.ts", "../node_modules/vue-eslint-parser/.temp/external/token-store/src/external/token-store/index.ts", "../node_modules/vue-eslint-parser/.temp/sfc/custom-block/src/sfc/custom-block/index.ts", "../node_modules/vue-eslint-parser/.temp/src/parser-services.ts", "../node_modules/vue-eslint-parser/.temp/script-setup/src/script-setup/index.ts", "../node_modules/vue-eslint-parser/.temp/style/src/style/index.ts", "../node_modules/vue-eslint-parser/.temp/src/index.ts", "../src/index.ts", "../src/rules/vif-condition-repeated-trim.ts"],
  "sourcesContent": ["/**\n * @author Toru Nagashima <https://github.com/mysticatea>\n * See LICENSE file in root directory for full license.\n */\n\"use strict\";\n\nconst KEYS = require(\"./visitor-keys.json\");\n\n// Types.\nconst NODE_TYPES = Object.freeze(Object.keys(KEYS));\n\n// Freeze the keys.\nfor (const type of NODE_TYPES) {\n    Object.freeze(KEYS[type]);\n}\nObject.freeze(KEYS);\n\n// List to ignore keys.\nconst KEY_BLACKLIST = new Set([\n    \"parent\",\n    \"leadingComments\",\n    \"trailingComments\"\n]);\n\n/**\n * Check whether a given key should be used or not.\n * @param {string} key The key to check.\n * @returns {boolean} `true` if the key should be used.\n */\nfunction filterKey(key) {\n    return !KEY_BLACKLIST.has(key) && key[0] !== \"_\";\n}\n\n//------------------------------------------------------------------------------\n// Public interfaces\n//------------------------------------------------------------------------------\n\nmodule.exports = Object.freeze({\n\n    /**\n     * Visitor keys.\n     * @type {{ [type: string]: string[] | undefined }}\n     */\n    KEYS,\n\n    /**\n     * Get visitor keys of a given node.\n     * @param {Object} node The AST node to get keys.\n     * @returns {string[]} Visitor keys of the node.\n     */\n    getKeys(node) {\n        return Object.keys(node).filter(filterKey);\n    },\n\n    // Disable valid-jsdoc rule because it reports syntax error on the type of @returns.\n    // eslint-disable-next-line valid-jsdoc\n    /**\n     * Make the union set with `KEYS` and given keys.\n     * @param {Object} additionalKeys The additional keys.\n     * @returns {{ [type: string]: string[] | undefined }} The union set.\n     */\n    unionWith(additionalKeys) {\n        const retv = Object.assign({}, KEYS);\n\n        for (const type of Object.keys(additionalKeys)) {\n            if (retv.hasOwnProperty(type)) {\n                const keys = new Set(additionalKeys[type]);\n\n                for (const key of retv[type]) {\n                    keys.add(key);\n                }\n\n                retv[type] = Object.freeze(Array.from(keys));\n            } else {\n                retv[type] = Object.freeze(Array.from(additionalKeys[type]));\n            }\n        }\n\n        return Object.freeze(retv);\n    }\n});\n", "/** Detect free variable `global` from Node.js. */\nvar freeGlobal = typeof global == 'object' && global && global.Object === Object && global;\n\nmodule.exports = freeGlobal;\n", "var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `self`. */\nvar freeSelf = typeof self == 'object' && self && self.Object === Object && self;\n\n/** Used as a reference to the global object. */\nvar root = freeGlobal || freeSelf || Function('return this')();\n\nmodule.exports = root;\n", "var root = require('./_root');\n\n/** Built-in value references. */\nvar Symbol = root.Symbol;\n\nmodule.exports = Symbol;\n", "var Symbol = require('./_Symbol');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * A specialized version of `baseGetTag` which ignores `Symbol.toStringTag` values.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the raw `toStringTag`.\n */\nfunction getRawTag(value) {\n  var isOwn = hasOwnProperty.call(value, symToStringTag),\n      tag = value[symToStringTag];\n\n  try {\n    value[symToStringTag] = undefined;\n    var unmasked = true;\n  } catch (e) {}\n\n  var result = nativeObjectToString.call(value);\n  if (unmasked) {\n    if (isOwn) {\n      value[symToStringTag] = tag;\n    } else {\n      delete value[symToStringTag];\n    }\n  }\n  return result;\n}\n\nmodule.exports = getRawTag;\n", "/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar nativeObjectToString = objectProto.toString;\n\n/**\n * Converts `value` to a string using `Object.prototype.toString`.\n *\n * @private\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n */\nfunction objectToString(value) {\n  return nativeObjectToString.call(value);\n}\n\nmodule.exports = objectToString;\n", "var Symbol = require('./_Symbol'),\n    getRawTag = require('./_getRawTag'),\n    objectToString = require('./_objectToString');\n\n/** `Object#toString` result references. */\nvar nullTag = '[object Null]',\n    undefinedTag = '[object Undefined]';\n\n/** Built-in value references. */\nvar symToStringTag = Symbol ? Symbol.toStringTag : undefined;\n\n/**\n * The base implementation of `getTag` without fallbacks for buggy environments.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nfunction baseGetTag(value) {\n  if (value == null) {\n    return value === undefined ? undefinedTag : nullTag;\n  }\n  return (symToStringTag && symToStringTag in Object(value))\n    ? getRawTag(value)\n    : objectToString(value);\n}\n\nmodule.exports = baseGetTag;\n", "/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return value != null && typeof value == 'object';\n}\n\nmodule.exports = isObjectLike;\n", "var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar symbolTag = '[object Symbol]';\n\n/**\n * Checks if `value` is classified as a `Symbol` primitive or object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a symbol, else `false`.\n * @example\n *\n * _.isSymbol(Symbol.iterator);\n * // => true\n *\n * _.isSymbol('abc');\n * // => false\n */\nfunction isSymbol(value) {\n  return typeof value == 'symbol' ||\n    (isObjectLike(value) && baseGetTag(value) == symbolTag);\n}\n\nmodule.exports = isSymbol;\n", "var isSymbol = require('./isSymbol');\n\n/** Used as references for the maximum length and index of an array. */\nvar MAX_ARRAY_LENGTH = 4294967295,\n    MAX_ARRAY_INDEX = MAX_ARRAY_LENGTH - 1;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeFloor = Math.floor,\n    nativeMin = Math.min;\n\n/**\n * The base implementation of `_.sortedIndexBy` and `_.sortedLastIndexBy`\n * which invokes `iteratee` for `value` and each element of `array` to compute\n * their sort ranking. The iteratee is invoked with one argument; (value).\n *\n * @private\n * @param {Array} array The sorted array to inspect.\n * @param {*} value The value to evaluate.\n * @param {Function} iteratee The iteratee invoked per element.\n * @param {boolean} [retHighest] Specify returning the highest qualified index.\n * @returns {number} Returns the index at which `value` should be inserted\n *  into `array`.\n */\nfunction baseSortedIndexBy(array, value, iteratee, retHighest) {\n  var low = 0,\n      high = array == null ? 0 : array.length;\n  if (high === 0) {\n    return 0;\n  }\n\n  value = iteratee(value);\n  var valIsNaN = value !== value,\n      valIsNull = value === null,\n      valIsSymbol = isSymbol(value),\n      valIsUndefined = value === undefined;\n\n  while (low < high) {\n    var mid = nativeFloor((low + high) / 2),\n        computed = iteratee(array[mid]),\n        othIsDefined = computed !== undefined,\n        othIsNull = computed === null,\n        othIsReflexive = computed === computed,\n        othIsSymbol = isSymbol(computed);\n\n    if (valIsNaN) {\n      var setLow = retHighest || othIsReflexive;\n    } else if (valIsUndefined) {\n      setLow = othIsReflexive && (retHighest || othIsDefined);\n    } else if (valIsNull) {\n      setLow = othIsReflexive && othIsDefined && (retHighest || !othIsNull);\n    } else if (valIsSymbol) {\n      setLow = othIsReflexive && othIsDefined && !othIsNull && (retHighest || !othIsSymbol);\n    } else if (othIsNull || othIsSymbol) {\n      setLow = false;\n    } else {\n      setLow = retHighest ? (computed <= value) : (computed < value);\n    }\n    if (setLow) {\n      low = mid + 1;\n    } else {\n      high = mid;\n    }\n  }\n  return nativeMin(high, MAX_ARRAY_INDEX);\n}\n\nmodule.exports = baseSortedIndexBy;\n", "/**\n * This method returns the first argument it receives.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Util\n * @param {*} value Any value.\n * @returns {*} Returns `value`.\n * @example\n *\n * var object = { 'a': 1 };\n *\n * console.log(_.identity(object) === object);\n * // => true\n */\nfunction identity(value) {\n  return value;\n}\n\nmodule.exports = identity;\n", "var baseSortedIndexBy = require('./_baseSortedIndexBy'),\n    identity = require('./identity'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for the maximum length and index of an array. */\nvar MAX_ARRAY_LENGTH = 4294967295,\n    HALF_MAX_ARRAY_LENGTH = MAX_ARRAY_LENGTH >>> 1;\n\n/**\n * The base implementation of `_.sortedIndex` and `_.sortedLastIndex` which\n * performs a binary search of `array` to determine the index at which `value`\n * should be inserted into `array` in order to maintain its sort order.\n *\n * @private\n * @param {Array} array The sorted array to inspect.\n * @param {*} value The value to evaluate.\n * @param {boolean} [retHighest] Specify returning the highest qualified index.\n * @returns {number} Returns the index at which `value` should be inserted\n *  into `array`.\n */\nfunction baseSortedIndex(array, value, retHighest) {\n  var low = 0,\n      high = array == null ? low : array.length;\n\n  if (typeof value == 'number' && value === value && high <= HALF_MAX_ARRAY_LENGTH) {\n    while (low < high) {\n      var mid = (low + high) >>> 1,\n          computed = array[mid];\n\n      if (computed !== null && !isSymbol(computed) &&\n          (retHighest ? (computed <= value) : (computed < value))) {\n        low = mid + 1;\n      } else {\n        high = mid;\n      }\n    }\n    return high;\n  }\n  return baseSortedIndexBy(array, value, identity, retHighest);\n}\n\nmodule.exports = baseSortedIndex;\n", "var baseSortedIndex = require('./_baseSortedIndex');\n\n/**\n * This method is like `_.sortedIndex` except that it returns the highest\n * index at which `value` should be inserted into `array` in order to\n * maintain its sort order.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Array\n * @param {Array} array The sorted array to inspect.\n * @param {*} value The value to evaluate.\n * @returns {number} Returns the index at which `value` should be inserted\n *  into `array`.\n * @example\n *\n * _.sortedLastIndex([4, 5, 5, 5, 6], 5);\n * // => 4\n */\nfunction sortedLastIndex(array, value) {\n  return baseSortedIndex(array, value, true);\n}\n\nmodule.exports = sortedLastIndex;\n", "/**\n * Gets the last element of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {Array} array The array to query.\n * @returns {*} Returns the last element of `array`.\n * @example\n *\n * _.last([1, 2, 3]);\n * // => 3\n */\nfunction last(array) {\n  var length = array == null ? 0 : array.length;\n  return length ? array[length - 1] : undefined;\n}\n\nmodule.exports = last;\n", "/**\n * The base implementation of `_.findIndex` and `_.findLastIndex` without\n * support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} predicate The function invoked per iteration.\n * @param {number} fromIndex The index to search from.\n * @param {boolean} [fromRight] Specify iterating from right to left.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseFindIndex(array, predicate, fromIndex, fromRight) {\n  var length = array.length,\n      index = fromIndex + (fromRight ? 1 : -1);\n\n  while ((fromRight ? index-- : ++index < length)) {\n    if (predicate(array[index], index, array)) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = baseFindIndex;\n", "/**\n * Removes all key-value entries from the list cache.\n *\n * @private\n * @name clear\n * @memberOf ListCache\n */\nfunction listCacheClear() {\n  this.__data__ = [];\n  this.size = 0;\n}\n\nmodule.exports = listCacheClear;\n", "/**\n * Performs a\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * comparison between two values to determine if they are equivalent.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n * @example\n *\n * var object = { 'a': 1 };\n * var other = { 'a': 1 };\n *\n * _.eq(object, object);\n * // => true\n *\n * _.eq(object, other);\n * // => false\n *\n * _.eq('a', 'a');\n * // => true\n *\n * _.eq('a', Object('a'));\n * // => false\n *\n * _.eq(NaN, NaN);\n * // => true\n */\nfunction eq(value, other) {\n  return value === other || (value !== value && other !== other);\n}\n\nmodule.exports = eq;\n", "var eq = require('./eq');\n\n/**\n * Gets the index at which the `key` is found in `array` of key-value pairs.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} key The key to search for.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction assocIndexOf(array, key) {\n  var length = array.length;\n  while (length--) {\n    if (eq(array[length][0], key)) {\n      return length;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = assocIndexOf;\n", "var assocIndexOf = require('./_assocIndexOf');\n\n/** Used for built-in method references. */\nvar arrayProto = Array.prototype;\n\n/** Built-in value references. */\nvar splice = arrayProto.splice;\n\n/**\n * Removes `key` and its value from the list cache.\n *\n * @private\n * @name delete\n * @memberOf ListCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction listCacheDelete(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    return false;\n  }\n  var lastIndex = data.length - 1;\n  if (index == lastIndex) {\n    data.pop();\n  } else {\n    splice.call(data, index, 1);\n  }\n  --this.size;\n  return true;\n}\n\nmodule.exports = listCacheDelete;\n", "var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Gets the list cache value for `key`.\n *\n * @private\n * @name get\n * @memberOf ListCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction listCacheGet(key) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  return index < 0 ? undefined : data[index][1];\n}\n\nmodule.exports = listCacheGet;\n", "var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Checks if a list cache value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf ListCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction listCacheHas(key) {\n  return assocIndexOf(this.__data__, key) > -1;\n}\n\nmodule.exports = listCacheHas;\n", "var assocIndexOf = require('./_assocIndexOf');\n\n/**\n * Sets the list cache `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf ListCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the list cache instance.\n */\nfunction listCacheSet(key, value) {\n  var data = this.__data__,\n      index = assocIndexOf(data, key);\n\n  if (index < 0) {\n    ++this.size;\n    data.push([key, value]);\n  } else {\n    data[index][1] = value;\n  }\n  return this;\n}\n\nmodule.exports = listCacheSet;\n", "var listCacheClear = require('./_listCacheClear'),\n    listCacheDelete = require('./_listCacheDelete'),\n    listCacheGet = require('./_listCacheGet'),\n    listCacheHas = require('./_listCacheHas'),\n    listCacheSet = require('./_listCacheSet');\n\n/**\n * Creates an list cache object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction ListCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `ListCache`.\nListCache.prototype.clear = listCacheClear;\nListCache.prototype['delete'] = listCacheDelete;\nListCache.prototype.get = listCacheGet;\nListCache.prototype.has = listCacheHas;\nListCache.prototype.set = listCacheSet;\n\nmodule.exports = ListCache;\n", "var ListCache = require('./_ListCache');\n\n/**\n * Removes all key-value entries from the stack.\n *\n * @private\n * @name clear\n * @memberOf Stack\n */\nfunction stackClear() {\n  this.__data__ = new ListCache;\n  this.size = 0;\n}\n\nmodule.exports = stackClear;\n", "/**\n * Removes `key` and its value from the stack.\n *\n * @private\n * @name delete\n * @memberOf Stack\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction stackDelete(key) {\n  var data = this.__data__,\n      result = data['delete'](key);\n\n  this.size = data.size;\n  return result;\n}\n\nmodule.exports = stackDelete;\n", "/**\n * Gets the stack value for `key`.\n *\n * @private\n * @name get\n * @memberOf Stack\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction stackGet(key) {\n  return this.__data__.get(key);\n}\n\nmodule.exports = stackGet;\n", "/**\n * Checks if a stack value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Stack\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction stackHas(key) {\n  return this.__data__.has(key);\n}\n\nmodule.exports = stackHas;\n", "/**\n * Checks if `value` is the\n * [language type](http://www.ecma-international.org/ecma-262/7.0/#sec-ecmascript-language-types)\n * of `Object`. (e.g. arrays, functions, objects, regexes, `new Number(0)`, and `new String('')`)\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an object, else `false`.\n * @example\n *\n * _.isObject({});\n * // => true\n *\n * _.isObject([1, 2, 3]);\n * // => true\n *\n * _.isObject(_.noop);\n * // => true\n *\n * _.isObject(null);\n * // => false\n */\nfunction isObject(value) {\n  var type = typeof value;\n  return value != null && (type == 'object' || type == 'function');\n}\n\nmodule.exports = isObject;\n", "var baseGetTag = require('./_baseGetTag'),\n    isObject = require('./isObject');\n\n/** `Object#toString` result references. */\nvar asyncTag = '[object AsyncFunction]',\n    funcTag = '[object Function]',\n    genTag = '[object GeneratorFunction]',\n    proxyTag = '[object Proxy]';\n\n/**\n * Checks if `value` is classified as a `Function` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a function, else `false`.\n * @example\n *\n * _.isFunction(_);\n * // => true\n *\n * _.isFunction(/abc/);\n * // => false\n */\nfunction isFunction(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n  // The use of `Object#toString` avoids issues with the `typeof` operator\n  // in Safari 9 which returns 'object' for typed arrays and other constructors.\n  var tag = baseGetTag(value);\n  return tag == funcTag || tag == genTag || tag == asyncTag || tag == proxyTag;\n}\n\nmodule.exports = isFunction;\n", "var root = require('./_root');\n\n/** Used to detect overreaching core-js shims. */\nvar coreJsData = root['__core-js_shared__'];\n\nmodule.exports = coreJsData;\n", "var coreJsData = require('./_coreJsData');\n\n/** Used to detect methods masquerading as native. */\nvar maskSrcKey = (function() {\n  var uid = /[^.]+$/.exec(coreJsData && coreJsData.keys && coreJsData.keys.IE_PROTO || '');\n  return uid ? ('Symbol(src)_1.' + uid) : '';\n}());\n\n/**\n * Checks if `func` has its source masked.\n *\n * @private\n * @param {Function} func The function to check.\n * @returns {boolean} Returns `true` if `func` is masked, else `false`.\n */\nfunction isMasked(func) {\n  return !!maskSrcKey && (maskSrcKey in func);\n}\n\nmodule.exports = isMasked;\n", "/** Used for built-in method references. */\nvar funcProto = Function.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/**\n * Converts `func` to its source code.\n *\n * @private\n * @param {Function} func The function to convert.\n * @returns {string} Returns the source code.\n */\nfunction toSource(func) {\n  if (func != null) {\n    try {\n      return funcToString.call(func);\n    } catch (e) {}\n    try {\n      return (func + '');\n    } catch (e) {}\n  }\n  return '';\n}\n\nmodule.exports = toSource;\n", "var isFunction = require('./isFunction'),\n    isMasked = require('./_isMasked'),\n    isObject = require('./isObject'),\n    toSource = require('./_toSource');\n\n/**\n * Used to match `RegExp`\n * [syntax characters](http://ecma-international.org/ecma-262/7.0/#sec-patterns).\n */\nvar reRegExpChar = /[\\\\^$.*+?()[\\]{}|]/g;\n\n/** Used to detect host constructors (Safari). */\nvar reIsHostCtor = /^\\[object .+?Constructor\\]$/;\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to detect if a method is native. */\nvar reIsNative = RegExp('^' +\n  funcToString.call(hasOwnProperty).replace(reRegExpChar, '\\\\$&')\n  .replace(/hasOwnProperty|(function).*?(?=\\\\\\()| for .+?(?=\\\\\\])/g, '$1.*?') + '$'\n);\n\n/**\n * The base implementation of `_.isNative` without bad shim checks.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a native function,\n *  else `false`.\n */\nfunction baseIsNative(value) {\n  if (!isObject(value) || isMasked(value)) {\n    return false;\n  }\n  var pattern = isFunction(value) ? reIsNative : reIsHostCtor;\n  return pattern.test(toSource(value));\n}\n\nmodule.exports = baseIsNative;\n", "/**\n * Gets the value at `key` of `object`.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {string} key The key of the property to get.\n * @returns {*} Returns the property value.\n */\nfunction getValue(object, key) {\n  return object == null ? undefined : object[key];\n}\n\nmodule.exports = getValue;\n", "var baseIsNative = require('./_baseIsNative'),\n    getValue = require('./_getValue');\n\n/**\n * Gets the native function at `key` of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {string} key The key of the method to get.\n * @returns {*} Returns the function if it's native, else `undefined`.\n */\nfunction getNative(object, key) {\n  var value = getValue(object, key);\n  return baseIsNative(value) ? value : undefined;\n}\n\nmodule.exports = getNative;\n", "var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Map = getNative(root, 'Map');\n\nmodule.exports = Map;\n", "var getNative = require('./_getNative');\n\n/* Built-in method references that are verified to be native. */\nvar nativeCreate = getNative(Object, 'create');\n\nmodule.exports = nativeCreate;\n", "var nativeCreate = require('./_nativeCreate');\n\n/**\n * Removes all key-value entries from the hash.\n *\n * @private\n * @name clear\n * @memberOf Hash\n */\nfunction hashClear() {\n  this.__data__ = nativeCreate ? nativeCreate(null) : {};\n  this.size = 0;\n}\n\nmodule.exports = hashClear;\n", "/**\n * Removes `key` and its value from the hash.\n *\n * @private\n * @name delete\n * @memberOf Hash\n * @param {Object} hash The hash to modify.\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction hashDelete(key) {\n  var result = this.has(key) && delete this.__data__[key];\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = hashDelete;\n", "var nativeCreate = require('./_nativeCreate');\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Gets the hash value for `key`.\n *\n * @private\n * @name get\n * @memberOf Hash\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction hashGet(key) {\n  var data = this.__data__;\n  if (nativeCreate) {\n    var result = data[key];\n    return result === HASH_UNDEFINED ? undefined : result;\n  }\n  return hasOwnProperty.call(data, key) ? data[key] : undefined;\n}\n\nmodule.exports = hashGet;\n", "var nativeCreate = require('./_nativeCreate');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Checks if a hash value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf Hash\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction hashHas(key) {\n  var data = this.__data__;\n  return nativeCreate ? (data[key] !== undefined) : hasOwnProperty.call(data, key);\n}\n\nmodule.exports = hashHas;\n", "var nativeCreate = require('./_nativeCreate');\n\n/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Sets the hash `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Hash\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the hash instance.\n */\nfunction hashSet(key, value) {\n  var data = this.__data__;\n  this.size += this.has(key) ? 0 : 1;\n  data[key] = (nativeCreate && value === undefined) ? HASH_UNDEFINED : value;\n  return this;\n}\n\nmodule.exports = hashSet;\n", "var hashClear = require('./_hashClear'),\n    hashDelete = require('./_hashDelete'),\n    hashGet = require('./_hashGet'),\n    hashHas = require('./_hashHas'),\n    hashSet = require('./_hashSet');\n\n/**\n * Creates a hash object.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Hash(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `Hash`.\nHash.prototype.clear = hashClear;\nHash.prototype['delete'] = hashDelete;\nHash.prototype.get = hashGet;\nHash.prototype.has = hashHas;\nHash.prototype.set = hashSet;\n\nmodule.exports = Hash;\n", "var Hash = require('./_Hash'),\n    ListCache = require('./_ListCache'),\n    Map = require('./_Map');\n\n/**\n * Removes all key-value entries from the map.\n *\n * @private\n * @name clear\n * @memberOf MapCache\n */\nfunction mapCacheClear() {\n  this.size = 0;\n  this.__data__ = {\n    'hash': new Hash,\n    'map': new (Map || ListCache),\n    'string': new Hash\n  };\n}\n\nmodule.exports = mapCacheClear;\n", "/**\n * Checks if `value` is suitable for use as unique object key.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is suitable, else `false`.\n */\nfunction isKeyable(value) {\n  var type = typeof value;\n  return (type == 'string' || type == 'number' || type == 'symbol' || type == 'boolean')\n    ? (value !== '__proto__')\n    : (value === null);\n}\n\nmodule.exports = isKeyable;\n", "var isKeyable = require('./_isKeyable');\n\n/**\n * Gets the data for `map`.\n *\n * @private\n * @param {Object} map The map to query.\n * @param {string} key The reference key.\n * @returns {*} Returns the map data.\n */\nfunction getMapData(map, key) {\n  var data = map.__data__;\n  return isKeyable(key)\n    ? data[typeof key == 'string' ? 'string' : 'hash']\n    : data.map;\n}\n\nmodule.exports = getMapData;\n", "var getMapData = require('./_getMapData');\n\n/**\n * Removes `key` and its value from the map.\n *\n * @private\n * @name delete\n * @memberOf MapCache\n * @param {string} key The key of the value to remove.\n * @returns {boolean} Returns `true` if the entry was removed, else `false`.\n */\nfunction mapCacheDelete(key) {\n  var result = getMapData(this, key)['delete'](key);\n  this.size -= result ? 1 : 0;\n  return result;\n}\n\nmodule.exports = mapCacheDelete;\n", "var getMapData = require('./_getMapData');\n\n/**\n * Gets the map value for `key`.\n *\n * @private\n * @name get\n * @memberOf MapCache\n * @param {string} key The key of the value to get.\n * @returns {*} Returns the entry value.\n */\nfunction mapCacheGet(key) {\n  return getMapData(this, key).get(key);\n}\n\nmodule.exports = mapCacheGet;\n", "var getMapData = require('./_getMapData');\n\n/**\n * Checks if a map value for `key` exists.\n *\n * @private\n * @name has\n * @memberOf MapCache\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction mapCacheHas(key) {\n  return getMapData(this, key).has(key);\n}\n\nmodule.exports = mapCacheHas;\n", "var getMapData = require('./_getMapData');\n\n/**\n * Sets the map `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf MapCache\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the map cache instance.\n */\nfunction mapCacheSet(key, value) {\n  var data = getMapData(this, key),\n      size = data.size;\n\n  data.set(key, value);\n  this.size += data.size == size ? 0 : 1;\n  return this;\n}\n\nmodule.exports = mapCacheSet;\n", "var mapCacheClear = require('./_mapCacheClear'),\n    mapCacheDelete = require('./_mapCacheDelete'),\n    mapCacheGet = require('./_mapCacheGet'),\n    mapCacheHas = require('./_mapCacheHas'),\n    mapCacheSet = require('./_mapCacheSet');\n\n/**\n * Creates a map cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction MapCache(entries) {\n  var index = -1,\n      length = entries == null ? 0 : entries.length;\n\n  this.clear();\n  while (++index < length) {\n    var entry = entries[index];\n    this.set(entry[0], entry[1]);\n  }\n}\n\n// Add methods to `MapCache`.\nMapCache.prototype.clear = mapCacheClear;\nMapCache.prototype['delete'] = mapCacheDelete;\nMapCache.prototype.get = mapCacheGet;\nMapCache.prototype.has = mapCacheHas;\nMapCache.prototype.set = mapCacheSet;\n\nmodule.exports = MapCache;\n", "var ListCache = require('./_ListCache'),\n    Map = require('./_Map'),\n    MapCache = require('./_MapCache');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * Sets the stack `key` to `value`.\n *\n * @private\n * @name set\n * @memberOf Stack\n * @param {string} key The key of the value to set.\n * @param {*} value The value to set.\n * @returns {Object} Returns the stack cache instance.\n */\nfunction stackSet(key, value) {\n  var data = this.__data__;\n  if (data instanceof ListCache) {\n    var pairs = data.__data__;\n    if (!Map || (pairs.length < LARGE_ARRAY_SIZE - 1)) {\n      pairs.push([key, value]);\n      this.size = ++data.size;\n      return this;\n    }\n    data = this.__data__ = new MapCache(pairs);\n  }\n  data.set(key, value);\n  this.size = data.size;\n  return this;\n}\n\nmodule.exports = stackSet;\n", "var ListCache = require('./_ListCache'),\n    stackClear = require('./_stackClear'),\n    stackDelete = require('./_stackDelete'),\n    stackGet = require('./_stackGet'),\n    stackHas = require('./_stackHas'),\n    stackSet = require('./_stackSet');\n\n/**\n * Creates a stack cache object to store key-value pairs.\n *\n * @private\n * @constructor\n * @param {Array} [entries] The key-value pairs to cache.\n */\nfunction Stack(entries) {\n  var data = this.__data__ = new ListCache(entries);\n  this.size = data.size;\n}\n\n// Add methods to `Stack`.\nStack.prototype.clear = stackClear;\nStack.prototype['delete'] = stackDelete;\nStack.prototype.get = stackGet;\nStack.prototype.has = stackHas;\nStack.prototype.set = stackSet;\n\nmodule.exports = Stack;\n", "/** Used to stand-in for `undefined` hash values. */\nvar HASH_UNDEFINED = '__lodash_hash_undefined__';\n\n/**\n * Adds `value` to the array cache.\n *\n * @private\n * @name add\n * @memberOf SetCache\n * @alias push\n * @param {*} value The value to cache.\n * @returns {Object} Returns the cache instance.\n */\nfunction setCacheAdd(value) {\n  this.__data__.set(value, HASH_UNDEFINED);\n  return this;\n}\n\nmodule.exports = setCacheAdd;\n", "/**\n * Checks if `value` is in the array cache.\n *\n * @private\n * @name has\n * @memberOf SetCache\n * @param {*} value The value to search for.\n * @returns {number} Returns `true` if `value` is found, else `false`.\n */\nfunction setCacheHas(value) {\n  return this.__data__.has(value);\n}\n\nmodule.exports = setCacheHas;\n", "var MapCache = require('./_MapCache'),\n    setCacheAdd = require('./_setCacheAdd'),\n    setCacheHas = require('./_setCacheHas');\n\n/**\n *\n * Creates an array cache object to store unique values.\n *\n * @private\n * @constructor\n * @param {Array} [values] The values to cache.\n */\nfunction SetCache(values) {\n  var index = -1,\n      length = values == null ? 0 : values.length;\n\n  this.__data__ = new MapCache;\n  while (++index < length) {\n    this.add(values[index]);\n  }\n}\n\n// Add methods to `SetCache`.\nSetCache.prototype.add = SetCache.prototype.push = setCacheAdd;\nSetCache.prototype.has = setCacheHas;\n\nmodule.exports = SetCache;\n", "/**\n * A specialized version of `_.some` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {boolean} Returns `true` if any element passes the predicate check,\n *  else `false`.\n */\nfunction arraySome(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (predicate(array[index], index, array)) {\n      return true;\n    }\n  }\n  return false;\n}\n\nmodule.exports = arraySome;\n", "/**\n * Checks if a `cache` value for `key` exists.\n *\n * @private\n * @param {Object} cache The cache to query.\n * @param {string} key The key of the entry to check.\n * @returns {boolean} Returns `true` if an entry for `key` exists, else `false`.\n */\nfunction cacheHas(cache, key) {\n  return cache.has(key);\n}\n\nmodule.exports = cacheHas;\n", "var SetCache = require('./_SetCache'),\n    arraySome = require('./_arraySome'),\n    cacheHas = require('./_cacheHas');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * A specialized version of `baseIsEqualDeep` for arrays with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Array} array The array to compare.\n * @param {Array} other The other array to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `array` and `other` objects.\n * @returns {boolean} Returns `true` if the arrays are equivalent, else `false`.\n */\nfunction equalArrays(array, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      arrLength = array.length,\n      othLength = other.length;\n\n  if (arrLength != othLength && !(isPartial && othLength > arrLength)) {\n    return false;\n  }\n  // Check that cyclic values are equal.\n  var arrStacked = stack.get(array);\n  var othStacked = stack.get(other);\n  if (arrStacked && othStacked) {\n    return arrStacked == other && othStacked == array;\n  }\n  var index = -1,\n      result = true,\n      seen = (bitmask & COMPARE_UNORDERED_FLAG) ? new SetCache : undefined;\n\n  stack.set(array, other);\n  stack.set(other, array);\n\n  // Ignore non-index properties.\n  while (++index < arrLength) {\n    var arrValue = array[index],\n        othValue = other[index];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, arrValue, index, other, array, stack)\n        : customizer(arrValue, othValue, index, array, other, stack);\n    }\n    if (compared !== undefined) {\n      if (compared) {\n        continue;\n      }\n      result = false;\n      break;\n    }\n    // Recursively compare arrays (susceptible to call stack limits).\n    if (seen) {\n      if (!arraySome(other, function(othValue, othIndex) {\n            if (!cacheHas(seen, othIndex) &&\n                (arrValue === othValue || equalFunc(arrValue, othValue, bitmask, customizer, stack))) {\n              return seen.push(othIndex);\n            }\n          })) {\n        result = false;\n        break;\n      }\n    } else if (!(\n          arrValue === othValue ||\n            equalFunc(arrValue, othValue, bitmask, customizer, stack)\n        )) {\n      result = false;\n      break;\n    }\n  }\n  stack['delete'](array);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalArrays;\n", "var root = require('./_root');\n\n/** Built-in value references. */\nvar Uint8Array = root.Uint8Array;\n\nmodule.exports = Uint8Array;\n", "/**\n * Converts `map` to its key-value pairs.\n *\n * @private\n * @param {Object} map The map to convert.\n * @returns {Array} Returns the key-value pairs.\n */\nfunction mapToArray(map) {\n  var index = -1,\n      result = Array(map.size);\n\n  map.forEach(function(value, key) {\n    result[++index] = [key, value];\n  });\n  return result;\n}\n\nmodule.exports = mapToArray;\n", "/**\n * Converts `set` to an array of its values.\n *\n * @private\n * @param {Object} set The set to convert.\n * @returns {Array} Returns the values.\n */\nfunction setToArray(set) {\n  var index = -1,\n      result = Array(set.size);\n\n  set.forEach(function(value) {\n    result[++index] = value;\n  });\n  return result;\n}\n\nmodule.exports = setToArray;\n", "var Symbol = require('./_Symbol'),\n    Uint8Array = require('./_Uint8Array'),\n    eq = require('./eq'),\n    equalArrays = require('./_equalArrays'),\n    mapToArray = require('./_mapToArray'),\n    setToArray = require('./_setToArray');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/** `Object#toString` result references. */\nvar boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    symbolTag = '[object Symbol]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]';\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolValueOf = symbolProto ? symbolProto.valueOf : undefined;\n\n/**\n * A specialized version of `baseIsEqualDeep` for comparing objects of\n * the same `toStringTag`.\n *\n * **Note:** This function only supports comparing values with tags of\n * `Boolean`, `Date`, `Error`, `Number`, `RegExp`, or `String`.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {string} tag The `toStringTag` of the objects to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalByTag(object, other, tag, bitmask, customizer, equalFunc, stack) {\n  switch (tag) {\n    case dataViewTag:\n      if ((object.byteLength != other.byteLength) ||\n          (object.byteOffset != other.byteOffset)) {\n        return false;\n      }\n      object = object.buffer;\n      other = other.buffer;\n\n    case arrayBufferTag:\n      if ((object.byteLength != other.byteLength) ||\n          !equalFunc(new Uint8Array(object), new Uint8Array(other))) {\n        return false;\n      }\n      return true;\n\n    case boolTag:\n    case dateTag:\n    case numberTag:\n      // Coerce booleans to `1` or `0` and dates to milliseconds.\n      // Invalid dates are coerced to `NaN`.\n      return eq(+object, +other);\n\n    case errorTag:\n      return object.name == other.name && object.message == other.message;\n\n    case regexpTag:\n    case stringTag:\n      // Coerce regexes to strings and treat strings, primitives and objects,\n      // as equal. See http://www.ecma-international.org/ecma-262/7.0/#sec-regexp.prototype.tostring\n      // for more details.\n      return object == (other + '');\n\n    case mapTag:\n      var convert = mapToArray;\n\n    case setTag:\n      var isPartial = bitmask & COMPARE_PARTIAL_FLAG;\n      convert || (convert = setToArray);\n\n      if (object.size != other.size && !isPartial) {\n        return false;\n      }\n      // Assume cyclic values are equal.\n      var stacked = stack.get(object);\n      if (stacked) {\n        return stacked == other;\n      }\n      bitmask |= COMPARE_UNORDERED_FLAG;\n\n      // Recursively compare objects (susceptible to call stack limits).\n      stack.set(object, other);\n      var result = equalArrays(convert(object), convert(other), bitmask, customizer, equalFunc, stack);\n      stack['delete'](object);\n      return result;\n\n    case symbolTag:\n      if (symbolValueOf) {\n        return symbolValueOf.call(object) == symbolValueOf.call(other);\n      }\n  }\n  return false;\n}\n\nmodule.exports = equalByTag;\n", "/**\n * Appends the elements of `values` to `array`.\n *\n * @private\n * @param {Array} array The array to modify.\n * @param {Array} values The values to append.\n * @returns {Array} Returns `array`.\n */\nfunction arrayPush(array, values) {\n  var index = -1,\n      length = values.length,\n      offset = array.length;\n\n  while (++index < length) {\n    array[offset + index] = values[index];\n  }\n  return array;\n}\n\nmodule.exports = arrayPush;\n", "/**\n * Checks if `value` is classified as an `Array` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array, else `false`.\n * @example\n *\n * _.isArray([1, 2, 3]);\n * // => true\n *\n * _.isArray(document.body.children);\n * // => false\n *\n * _.isArray('abc');\n * // => false\n *\n * _.isArray(_.noop);\n * // => false\n */\nvar isArray = Array.isArray;\n\nmodule.exports = isArray;\n", "var arrayPush = require('./_arrayPush'),\n    isArray = require('./isArray');\n\n/**\n * The base implementation of `getAllKeys` and `getAllKeysIn` which uses\n * `keysFunc` and `symbolsFunc` to get the enumerable property names and\n * symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Function} keysFunc The function to get the keys of `object`.\n * @param {Function} symbolsFunc The function to get the symbols of `object`.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction baseGetAllKeys(object, keysFunc, symbolsFunc) {\n  var result = keysFunc(object);\n  return isArray(object) ? result : arrayPush(result, symbolsFunc(object));\n}\n\nmodule.exports = baseGetAllKeys;\n", "/**\n * A specialized version of `_.filter` for arrays without support for\n * iteratee shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} predicate The function invoked per iteration.\n * @returns {Array} Returns the new filtered array.\n */\nfunction arrayFilter(array, predicate) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      resIndex = 0,\n      result = [];\n\n  while (++index < length) {\n    var value = array[index];\n    if (predicate(value, index, array)) {\n      result[resIndex++] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayFilter;\n", "/**\n * This method returns a new empty array.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {Array} Returns the new empty array.\n * @example\n *\n * var arrays = _.times(2, _.stubArray);\n *\n * console.log(arrays);\n * // => [[], []]\n *\n * console.log(arrays[0] === arrays[1]);\n * // => false\n */\nfunction stubArray() {\n  return [];\n}\n\nmodule.exports = stubArray;\n", "var arrayFilter = require('./_arrayFilter'),\n    stubArray = require('./stubArray');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeGetSymbols = Object.getOwnPropertySymbols;\n\n/**\n * Creates an array of the own enumerable symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of symbols.\n */\nvar getSymbols = !nativeGetSymbols ? stubArray : function(object) {\n  if (object == null) {\n    return [];\n  }\n  object = Object(object);\n  return arrayFilter(nativeGetSymbols(object), function(symbol) {\n    return propertyIsEnumerable.call(object, symbol);\n  });\n};\n\nmodule.exports = getSymbols;\n", "/**\n * The base implementation of `_.times` without support for iteratee shorthands\n * or max array length checks.\n *\n * @private\n * @param {number} n The number of times to invoke `iteratee`.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the array of results.\n */\nfunction baseTimes(n, iteratee) {\n  var index = -1,\n      result = Array(n);\n\n  while (++index < n) {\n    result[index] = iteratee(index);\n  }\n  return result;\n}\n\nmodule.exports = baseTimes;\n", "var baseGetTag = require('./_baseGetTag'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]';\n\n/**\n * The base implementation of `_.isArguments`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n */\nfunction baseIsArguments(value) {\n  return isObjectLike(value) && baseGetTag(value) == argsTag;\n}\n\nmodule.exports = baseIsArguments;\n", "var baseIsArguments = require('./_baseIsArguments'),\n    isObjectLike = require('./isObjectLike');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Built-in value references. */\nvar propertyIsEnumerable = objectProto.propertyIsEnumerable;\n\n/**\n * Checks if `value` is likely an `arguments` object.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an `arguments` object,\n *  else `false`.\n * @example\n *\n * _.isArguments(function() { return arguments; }());\n * // => true\n *\n * _.isArguments([1, 2, 3]);\n * // => false\n */\nvar isArguments = baseIsArguments(function() { return arguments; }()) ? baseIsArguments : function(value) {\n  return isObjectLike(value) && hasOwnProperty.call(value, 'callee') &&\n    !propertyIsEnumerable.call(value, 'callee');\n};\n\nmodule.exports = isArguments;\n", "/**\n * This method returns `false`.\n *\n * @static\n * @memberOf _\n * @since 4.13.0\n * @category Util\n * @returns {boolean} Returns `false`.\n * @example\n *\n * _.times(2, _.stubFalse);\n * // => [false, false]\n */\nfunction stubFalse() {\n  return false;\n}\n\nmodule.exports = stubFalse;\n", "var root = require('./_root'),\n    stubFalse = require('./stubFalse');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Built-in value references. */\nvar Buffer = moduleExports ? root.Buffer : undefined;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeIsBuffer = Buffer ? Buffer.isBuffer : undefined;\n\n/**\n * Checks if `value` is a buffer.\n *\n * @static\n * @memberOf _\n * @since 4.3.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a buffer, else `false`.\n * @example\n *\n * _.isBuffer(new Buffer(2));\n * // => true\n *\n * _.isBuffer(new Uint8Array(2));\n * // => false\n */\nvar isBuffer = nativeIsBuffer || stubFalse;\n\nmodule.exports = isBuffer;\n", "/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/** Used to detect unsigned integer values. */\nvar reIsUint = /^(?:0|[1-9]\\d*)$/;\n\n/**\n * Checks if `value` is a valid array-like index.\n *\n * @private\n * @param {*} value The value to check.\n * @param {number} [length=MAX_SAFE_INTEGER] The upper bounds of a valid index.\n * @returns {boolean} Returns `true` if `value` is a valid index, else `false`.\n */\nfunction isIndex(value, length) {\n  var type = typeof value;\n  length = length == null ? MAX_SAFE_INTEGER : length;\n\n  return !!length &&\n    (type == 'number' ||\n      (type != 'symbol' && reIsUint.test(value))) &&\n        (value > -1 && value % 1 == 0 && value < length);\n}\n\nmodule.exports = isIndex;\n", "/** Used as references for various `Number` constants. */\nvar MAX_SAFE_INTEGER = 9007199254740991;\n\n/**\n * Checks if `value` is a valid array-like length.\n *\n * **Note:** This method is loosely based on\n * [`ToLength`](http://ecma-international.org/ecma-262/7.0/#sec-tolength).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a valid length, else `false`.\n * @example\n *\n * _.isLength(3);\n * // => true\n *\n * _.isLength(Number.MIN_VALUE);\n * // => false\n *\n * _.isLength(Infinity);\n * // => false\n *\n * _.isLength('3');\n * // => false\n */\nfunction isLength(value) {\n  return typeof value == 'number' &&\n    value > -1 && value % 1 == 0 && value <= MAX_SAFE_INTEGER;\n}\n\nmodule.exports = isLength;\n", "var baseGetTag = require('./_baseGetTag'),\n    isLength = require('./isLength'),\n    isObjectLike = require('./isObjectLike');\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    boolTag = '[object Boolean]',\n    dateTag = '[object Date]',\n    errorTag = '[object Error]',\n    funcTag = '[object Function]',\n    mapTag = '[object Map]',\n    numberTag = '[object Number]',\n    objectTag = '[object Object]',\n    regexpTag = '[object RegExp]',\n    setTag = '[object Set]',\n    stringTag = '[object String]',\n    weakMapTag = '[object WeakMap]';\n\nvar arrayBufferTag = '[object ArrayBuffer]',\n    dataViewTag = '[object DataView]',\n    float32Tag = '[object Float32Array]',\n    float64Tag = '[object Float64Array]',\n    int8Tag = '[object Int8Array]',\n    int16Tag = '[object Int16Array]',\n    int32Tag = '[object Int32Array]',\n    uint8Tag = '[object Uint8Array]',\n    uint8ClampedTag = '[object Uint8ClampedArray]',\n    uint16Tag = '[object Uint16Array]',\n    uint32Tag = '[object Uint32Array]';\n\n/** Used to identify `toStringTag` values of typed arrays. */\nvar typedArrayTags = {};\ntypedArrayTags[float32Tag] = typedArrayTags[float64Tag] =\ntypedArrayTags[int8Tag] = typedArrayTags[int16Tag] =\ntypedArrayTags[int32Tag] = typedArrayTags[uint8Tag] =\ntypedArrayTags[uint8ClampedTag] = typedArrayTags[uint16Tag] =\ntypedArrayTags[uint32Tag] = true;\ntypedArrayTags[argsTag] = typedArrayTags[arrayTag] =\ntypedArrayTags[arrayBufferTag] = typedArrayTags[boolTag] =\ntypedArrayTags[dataViewTag] = typedArrayTags[dateTag] =\ntypedArrayTags[errorTag] = typedArrayTags[funcTag] =\ntypedArrayTags[mapTag] = typedArrayTags[numberTag] =\ntypedArrayTags[objectTag] = typedArrayTags[regexpTag] =\ntypedArrayTags[setTag] = typedArrayTags[stringTag] =\ntypedArrayTags[weakMapTag] = false;\n\n/**\n * The base implementation of `_.isTypedArray` without Node.js optimizations.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n */\nfunction baseIsTypedArray(value) {\n  return isObjectLike(value) &&\n    isLength(value.length) && !!typedArrayTags[baseGetTag(value)];\n}\n\nmodule.exports = baseIsTypedArray;\n", "/**\n * The base implementation of `_.unary` without support for storing metadata.\n *\n * @private\n * @param {Function} func The function to cap arguments for.\n * @returns {Function} Returns the new capped function.\n */\nfunction baseUnary(func) {\n  return function(value) {\n    return func(value);\n  };\n}\n\nmodule.exports = baseUnary;\n", "var freeGlobal = require('./_freeGlobal');\n\n/** Detect free variable `exports`. */\nvar freeExports = typeof exports == 'object' && exports && !exports.nodeType && exports;\n\n/** Detect free variable `module`. */\nvar freeModule = freeExports && typeof module == 'object' && module && !module.nodeType && module;\n\n/** Detect the popular CommonJS extension `module.exports`. */\nvar moduleExports = freeModule && freeModule.exports === freeExports;\n\n/** Detect free variable `process` from Node.js. */\nvar freeProcess = moduleExports && freeGlobal.process;\n\n/** Used to access faster Node.js helpers. */\nvar nodeUtil = (function() {\n  try {\n    // Use `util.types` for Node.js 10+.\n    var types = freeModule && freeModule.require && freeModule.require('util').types;\n\n    if (types) {\n      return types;\n    }\n\n    // Legacy `process.binding('util')` for Node.js < 10.\n    return freeProcess && freeProcess.binding && freeProcess.binding('util');\n  } catch (e) {}\n}());\n\nmodule.exports = nodeUtil;\n", "var baseIsTypedArray = require('./_baseIsTypedArray'),\n    baseUnary = require('./_baseUnary'),\n    nodeUtil = require('./_nodeUtil');\n\n/* Node.js helper references. */\nvar nodeIsTypedArray = nodeUtil && nodeUtil.isTypedArray;\n\n/**\n * Checks if `value` is classified as a typed array.\n *\n * @static\n * @memberOf _\n * @since 3.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a typed array, else `false`.\n * @example\n *\n * _.isTypedArray(new Uint8Array);\n * // => true\n *\n * _.isTypedArray([]);\n * // => false\n */\nvar isTypedArray = nodeIsTypedArray ? baseUnary(nodeIsTypedArray) : baseIsTypedArray;\n\nmodule.exports = isTypedArray;\n", "var baseTimes = require('./_baseTimes'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isIndex = require('./_isIndex'),\n    isTypedArray = require('./isTypedArray');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an array of the enumerable property names of the array-like `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @param {boolean} inherited Specify returning inherited property names.\n * @returns {Array} Returns the array of property names.\n */\nfunction arrayLikeKeys(value, inherited) {\n  var isArr = isArray(value),\n      isArg = !isArr && isArguments(value),\n      isBuff = !isArr && !isArg && isBuffer(value),\n      isType = !isArr && !isArg && !isBuff && isTypedArray(value),\n      skipIndexes = isArr || isArg || isBuff || isType,\n      result = skipIndexes ? baseTimes(value.length, String) : [],\n      length = result.length;\n\n  for (var key in value) {\n    if ((inherited || hasOwnProperty.call(value, key)) &&\n        !(skipIndexes && (\n           // Safari 9 has enumerable `arguments.length` in strict mode.\n           key == 'length' ||\n           // Node.js 0.10 has enumerable non-index properties on buffers.\n           (isBuff && (key == 'offset' || key == 'parent')) ||\n           // PhantomJS 2 has enumerable non-index properties on typed arrays.\n           (isType && (key == 'buffer' || key == 'byteLength' || key == 'byteOffset')) ||\n           // Skip index properties.\n           isIndex(key, length)\n        ))) {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = arrayLikeKeys;\n", "/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/**\n * Checks if `value` is likely a prototype object.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a prototype, else `false`.\n */\nfunction isPrototype(value) {\n  var Ctor = value && value.constructor,\n      proto = (typeof Ctor == 'function' && Ctor.prototype) || objectProto;\n\n  return value === proto;\n}\n\nmodule.exports = isPrototype;\n", "/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\nmodule.exports = overArg;\n", "var overArg = require('./_overArg');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeKeys = overArg(Object.keys, Object);\n\nmodule.exports = nativeKeys;\n", "var isPrototype = require('./_isPrototype'),\n    nativeKeys = require('./_nativeKeys');\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * The base implementation of `_.keys` which doesn't treat sparse arrays as dense.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n */\nfunction baseKeys(object) {\n  if (!isPrototype(object)) {\n    return nativeKeys(object);\n  }\n  var result = [];\n  for (var key in Object(object)) {\n    if (hasOwnProperty.call(object, key) && key != 'constructor') {\n      result.push(key);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseKeys;\n", "var isFunction = require('./isFunction'),\n    isLength = require('./isLength');\n\n/**\n * Checks if `value` is array-like. A value is considered array-like if it's\n * not a function and has a `value.length` that's an integer greater than or\n * equal to `0` and less than or equal to `Number.MAX_SAFE_INTEGER`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is array-like, else `false`.\n * @example\n *\n * _.isArrayLike([1, 2, 3]);\n * // => true\n *\n * _.isArrayLike(document.body.children);\n * // => true\n *\n * _.isArrayLike('abc');\n * // => true\n *\n * _.isArrayLike(_.noop);\n * // => false\n */\nfunction isArrayLike(value) {\n  return value != null && isLength(value.length) && !isFunction(value);\n}\n\nmodule.exports = isArrayLike;\n", "var arrayLikeKeys = require('./_arrayLikeKeys'),\n    baseKeys = require('./_baseKeys'),\n    isArrayLike = require('./isArrayLike');\n\n/**\n * Creates an array of the own enumerable property names of `object`.\n *\n * **Note:** Non-object values are coerced to objects. See the\n * [ES spec](http://ecma-international.org/ecma-262/7.0/#sec-object.keys)\n * for more details.\n *\n * @static\n * @since 0.1.0\n * @memberOf _\n * @category Object\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n *   this.b = 2;\n * }\n *\n * Foo.prototype.c = 3;\n *\n * _.keys(new Foo);\n * // => ['a', 'b'] (iteration order is not guaranteed)\n *\n * _.keys('hi');\n * // => ['0', '1']\n */\nfunction keys(object) {\n  return isArrayLike(object) ? arrayLikeKeys(object) : baseKeys(object);\n}\n\nmodule.exports = keys;\n", "var baseGetAllKeys = require('./_baseGetAllKeys'),\n    getSymbols = require('./_getSymbols'),\n    keys = require('./keys');\n\n/**\n * Creates an array of own enumerable property names and symbols of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the array of property names and symbols.\n */\nfunction getAllKeys(object) {\n  return baseGetAllKeys(object, keys, getSymbols);\n}\n\nmodule.exports = getAllKeys;\n", "var getAllKeys = require('./_getAllKeys');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqualDeep` for objects with support for\n * partial deep comparisons.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} stack Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction equalObjects(object, other, bitmask, customizer, equalFunc, stack) {\n  var isPartial = bitmask & COMPARE_PARTIAL_FLAG,\n      objProps = getAllKeys(object),\n      objLength = objProps.length,\n      othProps = getAllKeys(other),\n      othLength = othProps.length;\n\n  if (objLength != othLength && !isPartial) {\n    return false;\n  }\n  var index = objLength;\n  while (index--) {\n    var key = objProps[index];\n    if (!(isPartial ? key in other : hasOwnProperty.call(other, key))) {\n      return false;\n    }\n  }\n  // Check that cyclic values are equal.\n  var objStacked = stack.get(object);\n  var othStacked = stack.get(other);\n  if (objStacked && othStacked) {\n    return objStacked == other && othStacked == object;\n  }\n  var result = true;\n  stack.set(object, other);\n  stack.set(other, object);\n\n  var skipCtor = isPartial;\n  while (++index < objLength) {\n    key = objProps[index];\n    var objValue = object[key],\n        othValue = other[key];\n\n    if (customizer) {\n      var compared = isPartial\n        ? customizer(othValue, objValue, key, other, object, stack)\n        : customizer(objValue, othValue, key, object, other, stack);\n    }\n    // Recursively compare objects (susceptible to call stack limits).\n    if (!(compared === undefined\n          ? (objValue === othValue || equalFunc(objValue, othValue, bitmask, customizer, stack))\n          : compared\n        )) {\n      result = false;\n      break;\n    }\n    skipCtor || (skipCtor = key == 'constructor');\n  }\n  if (result && !skipCtor) {\n    var objCtor = object.constructor,\n        othCtor = other.constructor;\n\n    // Non `Object` object instances with different constructors are not equal.\n    if (objCtor != othCtor &&\n        ('constructor' in object && 'constructor' in other) &&\n        !(typeof objCtor == 'function' && objCtor instanceof objCtor &&\n          typeof othCtor == 'function' && othCtor instanceof othCtor)) {\n      result = false;\n    }\n  }\n  stack['delete'](object);\n  stack['delete'](other);\n  return result;\n}\n\nmodule.exports = equalObjects;\n", "var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar DataView = getNative(root, 'DataView');\n\nmodule.exports = DataView;\n", "var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Promise = getNative(root, 'Promise');\n\nmodule.exports = Promise;\n", "var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar Set = getNative(root, 'Set');\n\nmodule.exports = Set;\n", "var getNative = require('./_getNative'),\n    root = require('./_root');\n\n/* Built-in method references that are verified to be native. */\nvar WeakMap = getNative(root, 'WeakMap');\n\nmodule.exports = WeakMap;\n", "var DataView = require('./_DataView'),\n    Map = require('./_Map'),\n    Promise = require('./_Promise'),\n    Set = require('./_Set'),\n    WeakMap = require('./_WeakMap'),\n    baseGetTag = require('./_baseGetTag'),\n    toSource = require('./_toSource');\n\n/** `Object#toString` result references. */\nvar mapTag = '[object Map]',\n    objectTag = '[object Object]',\n    promiseTag = '[object Promise]',\n    setTag = '[object Set]',\n    weakMapTag = '[object WeakMap]';\n\nvar dataViewTag = '[object DataView]';\n\n/** Used to detect maps, sets, and weakmaps. */\nvar dataViewCtorString = toSource(DataView),\n    mapCtorString = toSource(Map),\n    promiseCtorString = toSource(Promise),\n    setCtorString = toSource(Set),\n    weakMapCtorString = toSource(WeakMap);\n\n/**\n * Gets the `toStringTag` of `value`.\n *\n * @private\n * @param {*} value The value to query.\n * @returns {string} Returns the `toStringTag`.\n */\nvar getTag = baseGetTag;\n\n// Fallback for data views, maps, sets, and weak maps in IE 11 and promises in Node.js < 6.\nif ((DataView && getTag(new DataView(new ArrayBuffer(1))) != dataViewTag) ||\n    (Map && getTag(new Map) != mapTag) ||\n    (Promise && getTag(Promise.resolve()) != promiseTag) ||\n    (Set && getTag(new Set) != setTag) ||\n    (WeakMap && getTag(new WeakMap) != weakMapTag)) {\n  getTag = function(value) {\n    var result = baseGetTag(value),\n        Ctor = result == objectTag ? value.constructor : undefined,\n        ctorString = Ctor ? toSource(Ctor) : '';\n\n    if (ctorString) {\n      switch (ctorString) {\n        case dataViewCtorString: return dataViewTag;\n        case mapCtorString: return mapTag;\n        case promiseCtorString: return promiseTag;\n        case setCtorString: return setTag;\n        case weakMapCtorString: return weakMapTag;\n      }\n    }\n    return result;\n  };\n}\n\nmodule.exports = getTag;\n", "var Stack = require('./_Stack'),\n    equalArrays = require('./_equalArrays'),\n    equalByTag = require('./_equalByTag'),\n    equalObjects = require('./_equalObjects'),\n    getTag = require('./_getTag'),\n    isArray = require('./isArray'),\n    isBuffer = require('./isBuffer'),\n    isTypedArray = require('./isTypedArray');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1;\n\n/** `Object#toString` result references. */\nvar argsTag = '[object Arguments]',\n    arrayTag = '[object Array]',\n    objectTag = '[object Object]';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * A specialized version of `baseIsEqual` for arrays and objects which performs\n * deep comparisons and tracks traversed objects enabling objects with circular\n * references to be compared.\n *\n * @private\n * @param {Object} object The object to compare.\n * @param {Object} other The other object to compare.\n * @param {number} bitmask The bitmask flags. See `baseIsEqual` for more details.\n * @param {Function} customizer The function to customize comparisons.\n * @param {Function} equalFunc The function to determine equivalents of values.\n * @param {Object} [stack] Tracks traversed `object` and `other` objects.\n * @returns {boolean} Returns `true` if the objects are equivalent, else `false`.\n */\nfunction baseIsEqualDeep(object, other, bitmask, customizer, equalFunc, stack) {\n  var objIsArr = isArray(object),\n      othIsArr = isArray(other),\n      objTag = objIsArr ? arrayTag : getTag(object),\n      othTag = othIsArr ? arrayTag : getTag(other);\n\n  objTag = objTag == argsTag ? objectTag : objTag;\n  othTag = othTag == argsTag ? objectTag : othTag;\n\n  var objIsObj = objTag == objectTag,\n      othIsObj = othTag == objectTag,\n      isSameTag = objTag == othTag;\n\n  if (isSameTag && isBuffer(object)) {\n    if (!isBuffer(other)) {\n      return false;\n    }\n    objIsArr = true;\n    objIsObj = false;\n  }\n  if (isSameTag && !objIsObj) {\n    stack || (stack = new Stack);\n    return (objIsArr || isTypedArray(object))\n      ? equalArrays(object, other, bitmask, customizer, equalFunc, stack)\n      : equalByTag(object, other, objTag, bitmask, customizer, equalFunc, stack);\n  }\n  if (!(bitmask & COMPARE_PARTIAL_FLAG)) {\n    var objIsWrapped = objIsObj && hasOwnProperty.call(object, '__wrapped__'),\n        othIsWrapped = othIsObj && hasOwnProperty.call(other, '__wrapped__');\n\n    if (objIsWrapped || othIsWrapped) {\n      var objUnwrapped = objIsWrapped ? object.value() : object,\n          othUnwrapped = othIsWrapped ? other.value() : other;\n\n      stack || (stack = new Stack);\n      return equalFunc(objUnwrapped, othUnwrapped, bitmask, customizer, stack);\n    }\n  }\n  if (!isSameTag) {\n    return false;\n  }\n  stack || (stack = new Stack);\n  return equalObjects(object, other, bitmask, customizer, equalFunc, stack);\n}\n\nmodule.exports = baseIsEqualDeep;\n", "var baseIsEqualDeep = require('./_baseIsEqualDeep'),\n    isObjectLike = require('./isObjectLike');\n\n/**\n * The base implementation of `_.isEqual` which supports partial comparisons\n * and tracks traversed objects.\n *\n * @private\n * @param {*} value The value to compare.\n * @param {*} other The other value to compare.\n * @param {boolean} bitmask The bitmask flags.\n *  1 - Unordered comparison\n *  2 - Partial comparison\n * @param {Function} [customizer] The function to customize comparisons.\n * @param {Object} [stack] Tracks traversed `value` and `other` objects.\n * @returns {boolean} Returns `true` if the values are equivalent, else `false`.\n */\nfunction baseIsEqual(value, other, bitmask, customizer, stack) {\n  if (value === other) {\n    return true;\n  }\n  if (value == null || other == null || (!isObjectLike(value) && !isObjectLike(other))) {\n    return value !== value && other !== other;\n  }\n  return baseIsEqualDeep(value, other, bitmask, customizer, baseIsEqual, stack);\n}\n\nmodule.exports = baseIsEqual;\n", "var Stack = require('./_Stack'),\n    baseIsEqual = require('./_baseIsEqual');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.isMatch` without support for iteratee shorthands.\n *\n * @private\n * @param {Object} object The object to inspect.\n * @param {Object} source The object of property values to match.\n * @param {Array} matchData The property names, values, and compare flags to match.\n * @param {Function} [customizer] The function to customize comparisons.\n * @returns {boolean} Returns `true` if `object` is a match, else `false`.\n */\nfunction baseIsMatch(object, source, matchData, customizer) {\n  var index = matchData.length,\n      length = index,\n      noCustomizer = !customizer;\n\n  if (object == null) {\n    return !length;\n  }\n  object = Object(object);\n  while (index--) {\n    var data = matchData[index];\n    if ((noCustomizer && data[2])\n          ? data[1] !== object[data[0]]\n          : !(data[0] in object)\n        ) {\n      return false;\n    }\n  }\n  while (++index < length) {\n    data = matchData[index];\n    var key = data[0],\n        objValue = object[key],\n        srcValue = data[1];\n\n    if (noCustomizer && data[2]) {\n      if (objValue === undefined && !(key in object)) {\n        return false;\n      }\n    } else {\n      var stack = new Stack;\n      if (customizer) {\n        var result = customizer(objValue, srcValue, key, object, source, stack);\n      }\n      if (!(result === undefined\n            ? baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG, customizer, stack)\n            : result\n          )) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\nmodule.exports = baseIsMatch;\n", "var isObject = require('./isObject');\n\n/**\n * Checks if `value` is suitable for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` if suitable for strict\n *  equality comparisons, else `false`.\n */\nfunction isStrictComparable(value) {\n  return value === value && !isObject(value);\n}\n\nmodule.exports = isStrictComparable;\n", "var isStrictComparable = require('./_isStrictComparable'),\n    keys = require('./keys');\n\n/**\n * Gets the property names, values, and compare flags of `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @returns {Array} Returns the match data of `object`.\n */\nfunction getMatchData(object) {\n  var result = keys(object),\n      length = result.length;\n\n  while (length--) {\n    var key = result[length],\n        value = object[key];\n\n    result[length] = [key, value, isStrictComparable(value)];\n  }\n  return result;\n}\n\nmodule.exports = getMatchData;\n", "/**\n * A specialized version of `matchesProperty` for source values suitable\n * for strict equality comparisons, i.e. `===`.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction matchesStrictComparable(key, srcValue) {\n  return function(object) {\n    if (object == null) {\n      return false;\n    }\n    return object[key] === srcValue &&\n      (srcValue !== undefined || (key in Object(object)));\n  };\n}\n\nmodule.exports = matchesStrictComparable;\n", "var baseIsMatch = require('./_baseIsMatch'),\n    getMatchData = require('./_getMatchData'),\n    matchesStrictComparable = require('./_matchesStrictComparable');\n\n/**\n * The base implementation of `_.matches` which doesn't clone `source`.\n *\n * @private\n * @param {Object} source The object of property values to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatches(source) {\n  var matchData = getMatchData(source);\n  if (matchData.length == 1 && matchData[0][2]) {\n    return matchesStrictComparable(matchData[0][0], matchData[0][1]);\n  }\n  return function(object) {\n    return object === source || baseIsMatch(object, source, matchData);\n  };\n}\n\nmodule.exports = baseMatches;\n", "var isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used to match property names within property paths. */\nvar reIsDeepProp = /\\.|\\[(?:[^[\\]]*|([\"'])(?:(?!\\1)[^\\\\]|\\\\.)*?\\1)\\]/,\n    reIsPlainProp = /^\\w*$/;\n\n/**\n * Checks if `value` is a property name and not a property path.\n *\n * @private\n * @param {*} value The value to check.\n * @param {Object} [object] The object to query keys on.\n * @returns {boolean} Returns `true` if `value` is a property name, else `false`.\n */\nfunction isKey(value, object) {\n  if (isArray(value)) {\n    return false;\n  }\n  var type = typeof value;\n  if (type == 'number' || type == 'symbol' || type == 'boolean' ||\n      value == null || isSymbol(value)) {\n    return true;\n  }\n  return reIsPlainProp.test(value) || !reIsDeepProp.test(value) ||\n    (object != null && value in Object(object));\n}\n\nmodule.exports = isKey;\n", "var MapCache = require('./_MapCache');\n\n/** Error message constants. */\nvar FUNC_ERROR_TEXT = 'Expected a function';\n\n/**\n * Creates a function that memoizes the result of `func`. If `resolver` is\n * provided, it determines the cache key for storing the result based on the\n * arguments provided to the memoized function. By default, the first argument\n * provided to the memoized function is used as the map cache key. The `func`\n * is invoked with the `this` binding of the memoized function.\n *\n * **Note:** The cache is exposed as the `cache` property on the memoized\n * function. Its creation may be customized by replacing the `_.memoize.Cache`\n * constructor with one whose instances implement the\n * [`Map`](http://ecma-international.org/ecma-262/7.0/#sec-properties-of-the-map-prototype-object)\n * method interface of `clear`, `delete`, `get`, `has`, and `set`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Function\n * @param {Function} func The function to have its output memoized.\n * @param {Function} [resolver] The function to resolve the cache key.\n * @returns {Function} Returns the new memoized function.\n * @example\n *\n * var object = { 'a': 1, 'b': 2 };\n * var other = { 'c': 3, 'd': 4 };\n *\n * var values = _.memoize(_.values);\n * values(object);\n * // => [1, 2]\n *\n * values(other);\n * // => [3, 4]\n *\n * object.a = 2;\n * values(object);\n * // => [1, 2]\n *\n * // Modify the result cache.\n * values.cache.set(object, ['a', 'b']);\n * values(object);\n * // => ['a', 'b']\n *\n * // Replace `_.memoize.Cache`.\n * _.memoize.Cache = WeakMap;\n */\nfunction memoize(func, resolver) {\n  if (typeof func != 'function' || (resolver != null && typeof resolver != 'function')) {\n    throw new TypeError(FUNC_ERROR_TEXT);\n  }\n  var memoized = function() {\n    var args = arguments,\n        key = resolver ? resolver.apply(this, args) : args[0],\n        cache = memoized.cache;\n\n    if (cache.has(key)) {\n      return cache.get(key);\n    }\n    var result = func.apply(this, args);\n    memoized.cache = cache.set(key, result) || cache;\n    return result;\n  };\n  memoized.cache = new (memoize.Cache || MapCache);\n  return memoized;\n}\n\n// Expose `MapCache`.\nmemoize.Cache = MapCache;\n\nmodule.exports = memoize;\n", "var memoize = require('./memoize');\n\n/** Used as the maximum memoize cache size. */\nvar MAX_MEMOIZE_SIZE = 500;\n\n/**\n * A specialized version of `_.memoize` which clears the memoized function's\n * cache when it exceeds `MAX_MEMOIZE_SIZE`.\n *\n * @private\n * @param {Function} func The function to have its output memoized.\n * @returns {Function} Returns the new memoized function.\n */\nfunction memoizeCapped(func) {\n  var result = memoize(func, function(key) {\n    if (cache.size === MAX_MEMOIZE_SIZE) {\n      cache.clear();\n    }\n    return key;\n  });\n\n  var cache = result.cache;\n  return result;\n}\n\nmodule.exports = memoizeCapped;\n", "var memoizeCapped = require('./_memoizeCapped');\n\n/** Used to match property names within property paths. */\nvar rePropName = /[^.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|$))/g;\n\n/** Used to match backslashes in property paths. */\nvar reEscapeChar = /\\\\(\\\\)?/g;\n\n/**\n * Converts `string` to a property path array.\n *\n * @private\n * @param {string} string The string to convert.\n * @returns {Array} Returns the property path array.\n */\nvar stringToPath = memoizeCapped(function(string) {\n  var result = [];\n  if (string.charCodeAt(0) === 46 /* . */) {\n    result.push('');\n  }\n  string.replace(rePropName, function(match, number, quote, subString) {\n    result.push(quote ? subString.replace(reEscapeChar, '$1') : (number || match));\n  });\n  return result;\n});\n\nmodule.exports = stringToPath;\n", "/**\n * A specialized version of `_.map` for arrays without support for iteratee\n * shorthands.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} iteratee The function invoked per iteration.\n * @returns {Array} Returns the new mapped array.\n */\nfunction arrayMap(array, iteratee) {\n  var index = -1,\n      length = array == null ? 0 : array.length,\n      result = Array(length);\n\n  while (++index < length) {\n    result[index] = iteratee(array[index], index, array);\n  }\n  return result;\n}\n\nmodule.exports = arrayMap;\n", "var Symbol = require('./_Symbol'),\n    arrayMap = require('./_arrayMap'),\n    isArray = require('./isArray'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/** Used to convert symbols to primitives and strings. */\nvar symbolProto = Symbol ? Symbol.prototype : undefined,\n    symbolToString = symbolProto ? symbolProto.toString : undefined;\n\n/**\n * The base implementation of `_.toString` which doesn't convert nullish\n * values to empty strings.\n *\n * @private\n * @param {*} value The value to process.\n * @returns {string} Returns the string.\n */\nfunction baseToString(value) {\n  // Exit early for strings to avoid a performance hit in some environments.\n  if (typeof value == 'string') {\n    return value;\n  }\n  if (isArray(value)) {\n    // Recursively convert values (susceptible to call stack limits).\n    return arrayMap(value, baseToString) + '';\n  }\n  if (isSymbol(value)) {\n    return symbolToString ? symbolToString.call(value) : '';\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = baseToString;\n", "var baseToString = require('./_baseToString');\n\n/**\n * Converts `value` to a string. An empty string is returned for `null`\n * and `undefined` values. The sign of `-0` is preserved.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {string} Returns the converted string.\n * @example\n *\n * _.toString(null);\n * // => ''\n *\n * _.toString(-0);\n * // => '-0'\n *\n * _.toString([1, 2, 3]);\n * // => '1,2,3'\n */\nfunction toString(value) {\n  return value == null ? '' : baseToString(value);\n}\n\nmodule.exports = toString;\n", "var isArray = require('./isArray'),\n    isKey = require('./_isKey'),\n    stringToPath = require('./_stringToPath'),\n    toString = require('./toString');\n\n/**\n * Casts `value` to a path array if it's not one.\n *\n * @private\n * @param {*} value The value to inspect.\n * @param {Object} [object] The object to query keys on.\n * @returns {Array} Returns the cast property path array.\n */\nfunction castPath(value, object) {\n  if (isArray(value)) {\n    return value;\n  }\n  return isKey(value, object) ? [value] : stringToPath(toString(value));\n}\n\nmodule.exports = castPath;\n", "var isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Converts `value` to a string key if it's not a string or symbol.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {string|symbol} Returns the key.\n */\nfunction toKey(value) {\n  if (typeof value == 'string' || isSymbol(value)) {\n    return value;\n  }\n  var result = (value + '');\n  return (result == '0' && (1 / value) == -INFINITY) ? '-0' : result;\n}\n\nmodule.exports = toKey;\n", "var castPath = require('./_castPath'),\n    toKey = require('./_toKey');\n\n/**\n * The base implementation of `_.get` without support for default values.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @returns {*} Returns the resolved value.\n */\nfunction baseGet(object, path) {\n  path = castPath(path, object);\n\n  var index = 0,\n      length = path.length;\n\n  while (object != null && index < length) {\n    object = object[toKey(path[index++])];\n  }\n  return (index && index == length) ? object : undefined;\n}\n\nmodule.exports = baseGet;\n", "var baseGet = require('./_baseGet');\n\n/**\n * Gets the value at `path` of `object`. If the resolved value is\n * `undefined`, the `defaultValue` is returned in its place.\n *\n * @static\n * @memberOf _\n * @since 3.7.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path of the property to get.\n * @param {*} [defaultValue] The value returned for `undefined` resolved values.\n * @returns {*} Returns the resolved value.\n * @example\n *\n * var object = { 'a': [{ 'b': { 'c': 3 } }] };\n *\n * _.get(object, 'a[0].b.c');\n * // => 3\n *\n * _.get(object, ['a', '0', 'b', 'c']);\n * // => 3\n *\n * _.get(object, 'a.b.c', 'default');\n * // => 'default'\n */\nfunction get(object, path, defaultValue) {\n  var result = object == null ? undefined : baseGet(object, path);\n  return result === undefined ? defaultValue : result;\n}\n\nmodule.exports = get;\n", "/**\n * The base implementation of `_.hasIn` without support for deep paths.\n *\n * @private\n * @param {Object} [object] The object to query.\n * @param {Array|string} key The key to check.\n * @returns {boolean} Returns `true` if `key` exists, else `false`.\n */\nfunction baseHasIn(object, key) {\n  return object != null && key in Object(object);\n}\n\nmodule.exports = baseHasIn;\n", "var castPath = require('./_castPath'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray'),\n    isIndex = require('./_isIndex'),\n    isLength = require('./isLength'),\n    toKey = require('./_toKey');\n\n/**\n * Checks if `path` exists on `object`.\n *\n * @private\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @param {Function} hasFunc The function to check properties.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n */\nfunction hasPath(object, path, hasFunc) {\n  path = castPath(path, object);\n\n  var index = -1,\n      length = path.length,\n      result = false;\n\n  while (++index < length) {\n    var key = toKey(path[index]);\n    if (!(result = object != null && hasFunc(object, key))) {\n      break;\n    }\n    object = object[key];\n  }\n  if (result || ++index != length) {\n    return result;\n  }\n  length = object == null ? 0 : object.length;\n  return !!length && isLength(length) && isIndex(key, length) &&\n    (isArray(object) || isArguments(object));\n}\n\nmodule.exports = hasPath;\n", "var baseHasIn = require('./_baseHasIn'),\n    hasPath = require('./_hasPath');\n\n/**\n * Checks if `path` is a direct or inherited property of `object`.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Object\n * @param {Object} object The object to query.\n * @param {Array|string} path The path to check.\n * @returns {boolean} Returns `true` if `path` exists, else `false`.\n * @example\n *\n * var object = _.create({ 'a': _.create({ 'b': 2 }) });\n *\n * _.hasIn(object, 'a');\n * // => true\n *\n * _.hasIn(object, 'a.b');\n * // => true\n *\n * _.hasIn(object, ['a', 'b']);\n * // => true\n *\n * _.hasIn(object, 'b');\n * // => false\n */\nfunction hasIn(object, path) {\n  return object != null && hasPath(object, path, baseHasIn);\n}\n\nmodule.exports = hasIn;\n", "var baseIsEqual = require('./_baseIsEqual'),\n    get = require('./get'),\n    hasIn = require('./hasIn'),\n    isKey = require('./_isKey'),\n    isStrictComparable = require('./_isStrictComparable'),\n    matchesStrictComparable = require('./_matchesStrictComparable'),\n    toKey = require('./_toKey');\n\n/** Used to compose bitmasks for value comparisons. */\nvar COMPARE_PARTIAL_FLAG = 1,\n    COMPARE_UNORDERED_FLAG = 2;\n\n/**\n * The base implementation of `_.matchesProperty` which doesn't clone `srcValue`.\n *\n * @private\n * @param {string} path The path of the property to get.\n * @param {*} srcValue The value to match.\n * @returns {Function} Returns the new spec function.\n */\nfunction baseMatchesProperty(path, srcValue) {\n  if (isKey(path) && isStrictComparable(srcValue)) {\n    return matchesStrictComparable(toKey(path), srcValue);\n  }\n  return function(object) {\n    var objValue = get(object, path);\n    return (objValue === undefined && objValue === srcValue)\n      ? hasIn(object, path)\n      : baseIsEqual(srcValue, objValue, COMPARE_PARTIAL_FLAG | COMPARE_UNORDERED_FLAG);\n  };\n}\n\nmodule.exports = baseMatchesProperty;\n", "/**\n * The base implementation of `_.property` without support for deep paths.\n *\n * @private\n * @param {string} key The key of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction baseProperty(key) {\n  return function(object) {\n    return object == null ? undefined : object[key];\n  };\n}\n\nmodule.exports = baseProperty;\n", "var baseGet = require('./_baseGet');\n\n/**\n * A specialized version of `baseProperty` which supports deep paths.\n *\n * @private\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n */\nfunction basePropertyDeep(path) {\n  return function(object) {\n    return baseGet(object, path);\n  };\n}\n\nmodule.exports = basePropertyDeep;\n", "var baseProperty = require('./_baseProperty'),\n    basePropertyDeep = require('./_basePropertyDeep'),\n    isKey = require('./_isKey'),\n    toKey = require('./_toKey');\n\n/**\n * Creates a function that returns the value at `path` of a given object.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {Array|string} path The path of the property to get.\n * @returns {Function} Returns the new accessor function.\n * @example\n *\n * var objects = [\n *   { 'a': { 'b': 2 } },\n *   { 'a': { 'b': 1 } }\n * ];\n *\n * _.map(objects, _.property('a.b'));\n * // => [2, 1]\n *\n * _.map(_.sortBy(objects, _.property(['a', 'b'])), 'a.b');\n * // => [1, 2]\n */\nfunction property(path) {\n  return isKey(path) ? baseProperty(toKey(path)) : basePropertyDeep(path);\n}\n\nmodule.exports = property;\n", "var baseMatches = require('./_baseMatches'),\n    baseMatchesProperty = require('./_baseMatchesProperty'),\n    identity = require('./identity'),\n    isArray = require('./isArray'),\n    property = require('./property');\n\n/**\n * The base implementation of `_.iteratee`.\n *\n * @private\n * @param {*} [value=_.identity] The value to convert to an iteratee.\n * @returns {Function} Returns the iteratee.\n */\nfunction baseIteratee(value) {\n  // Don't store the `typeof` result in a variable to avoid a JIT bug in Safari 9.\n  // See https://bugs.webkit.org/show_bug.cgi?id=156034 for more details.\n  if (typeof value == 'function') {\n    return value;\n  }\n  if (value == null) {\n    return identity;\n  }\n  if (typeof value == 'object') {\n    return isArray(value)\n      ? baseMatchesProperty(value[0], value[1])\n      : baseMatches(value);\n  }\n  return property(value);\n}\n\nmodule.exports = baseIteratee;\n", "/** Used to match a single whitespace character. */\nvar reWhitespace = /\\s/;\n\n/**\n * Used by `_.trim` and `_.trimEnd` to get the index of the last non-whitespace\n * character of `string`.\n *\n * @private\n * @param {string} string The string to inspect.\n * @returns {number} Returns the index of the last non-whitespace character.\n */\nfunction trimmedEndIndex(string) {\n  var index = string.length;\n\n  while (index-- && reWhitespace.test(string.charAt(index))) {}\n  return index;\n}\n\nmodule.exports = trimmedEndIndex;\n", "var trimmedEndIndex = require('./_trimmedEndIndex');\n\n/** Used to match leading whitespace. */\nvar reTrimStart = /^\\s+/;\n\n/**\n * The base implementation of `_.trim`.\n *\n * @private\n * @param {string} string The string to trim.\n * @returns {string} Returns the trimmed string.\n */\nfunction baseTrim(string) {\n  return string\n    ? string.slice(0, trimmedEndIndex(string) + 1).replace(reTrimStart, '')\n    : string;\n}\n\nmodule.exports = baseTrim;\n", "var baseTrim = require('./_baseTrim'),\n    isObject = require('./isObject'),\n    isSymbol = require('./isSymbol');\n\n/** Used as references for various `Number` constants. */\nvar NAN = 0 / 0;\n\n/** Used to detect bad signed hexadecimal string values. */\nvar reIsBadHex = /^[-+]0x[0-9a-f]+$/i;\n\n/** Used to detect binary string values. */\nvar reIsBinary = /^0b[01]+$/i;\n\n/** Used to detect octal string values. */\nvar reIsOctal = /^0o[0-7]+$/i;\n\n/** Built-in method references without a dependency on `root`. */\nvar freeParseInt = parseInt;\n\n/**\n * Converts `value` to a number.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to process.\n * @returns {number} Returns the number.\n * @example\n *\n * _.toNumber(3.2);\n * // => 3.2\n *\n * _.toNumber(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toNumber(Infinity);\n * // => Infinity\n *\n * _.toNumber('3.2');\n * // => 3.2\n */\nfunction toNumber(value) {\n  if (typeof value == 'number') {\n    return value;\n  }\n  if (isSymbol(value)) {\n    return NAN;\n  }\n  if (isObject(value)) {\n    var other = typeof value.valueOf == 'function' ? value.valueOf() : value;\n    value = isObject(other) ? (other + '') : other;\n  }\n  if (typeof value != 'string') {\n    return value === 0 ? value : +value;\n  }\n  value = baseTrim(value);\n  var isBinary = reIsBinary.test(value);\n  return (isBinary || reIsOctal.test(value))\n    ? freeParseInt(value.slice(2), isBinary ? 2 : 8)\n    : (reIsBadHex.test(value) ? NAN : +value);\n}\n\nmodule.exports = toNumber;\n", "var toNumber = require('./toNumber');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0,\n    MAX_INTEGER = 1.7976931348623157e+308;\n\n/**\n * Converts `value` to a finite number.\n *\n * @static\n * @memberOf _\n * @since 4.12.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted number.\n * @example\n *\n * _.toFinite(3.2);\n * // => 3.2\n *\n * _.toFinite(Number.MIN_VALUE);\n * // => 5e-324\n *\n * _.toFinite(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toFinite('3.2');\n * // => 3.2\n */\nfunction toFinite(value) {\n  if (!value) {\n    return value === 0 ? value : 0;\n  }\n  value = toNumber(value);\n  if (value === INFINITY || value === -INFINITY) {\n    var sign = (value < 0 ? -1 : 1);\n    return sign * MAX_INTEGER;\n  }\n  return value === value ? value : 0;\n}\n\nmodule.exports = toFinite;\n", "var toFinite = require('./toFinite');\n\n/**\n * Converts `value` to an integer.\n *\n * **Note:** This method is loosely based on\n * [`ToInteger`](http://www.ecma-international.org/ecma-262/7.0/#sec-tointeger).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to convert.\n * @returns {number} Returns the converted integer.\n * @example\n *\n * _.toInteger(3.2);\n * // => 3\n *\n * _.toInteger(Number.MIN_VALUE);\n * // => 0\n *\n * _.toInteger(Infinity);\n * // => 1.7976931348623157e+308\n *\n * _.toInteger('3.2');\n * // => 3\n */\nfunction toInteger(value) {\n  var result = toFinite(value),\n      remainder = result % 1;\n\n  return result === result ? (remainder ? result - remainder : result) : 0;\n}\n\nmodule.exports = toInteger;\n", "var baseFindIndex = require('./_baseFindIndex'),\n    baseIteratee = require('./_baseIteratee'),\n    toInteger = require('./toInteger');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max,\n    nativeMin = Math.min;\n\n/**\n * This method is like `_.findIndex` except that it iterates over elements\n * of `collection` from right to left.\n *\n * @static\n * @memberOf _\n * @since 2.0.0\n * @category Array\n * @param {Array} array The array to inspect.\n * @param {Function} [predicate=_.identity] The function invoked per iteration.\n * @param {number} [fromIndex=array.length-1] The index to search from.\n * @returns {number} Returns the index of the found element, else `-1`.\n * @example\n *\n * var users = [\n *   { 'user': 'barney',  'active': true },\n *   { 'user': 'fred',    'active': false },\n *   { 'user': 'pebbles', 'active': false }\n * ];\n *\n * _.findLastIndex(users, function(o) { return o.user == 'pebbles'; });\n * // => 2\n *\n * // The `_.matches` iteratee shorthand.\n * _.findLastIndex(users, { 'user': 'barney', 'active': true });\n * // => 0\n *\n * // The `_.matchesProperty` iteratee shorthand.\n * _.findLastIndex(users, ['active', false]);\n * // => 2\n *\n * // The `_.property` iteratee shorthand.\n * _.findLastIndex(users, 'active');\n * // => 0\n */\nfunction findLastIndex(array, predicate, fromIndex) {\n  var length = array == null ? 0 : array.length;\n  if (!length) {\n    return -1;\n  }\n  var index = length - 1;\n  if (fromIndex !== undefined) {\n    index = toInteger(fromIndex);\n    index = fromIndex < 0\n      ? nativeMax(length + index, 0)\n      : nativeMin(index, length - 1);\n  }\n  return baseFindIndex(array, baseIteratee(predicate, 3), index, true);\n}\n\nmodule.exports = findLastIndex;\n", "/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar w = d * 7;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isFinite(val)) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^(-?(?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|weeks?|w|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'weeks':\n    case 'week':\n    case 'w':\n      return n * w;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (msAbs >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (msAbs >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (msAbs >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  var msAbs = Math.abs(ms);\n  if (msAbs >= d) {\n    return plural(ms, msAbs, d, 'day');\n  }\n  if (msAbs >= h) {\n    return plural(ms, msAbs, h, 'hour');\n  }\n  if (msAbs >= m) {\n    return plural(ms, msAbs, m, 'minute');\n  }\n  if (msAbs >= s) {\n    return plural(ms, msAbs, s, 'second');\n  }\n  return ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, msAbs, n, name) {\n  var isPlural = msAbs >= n * 1.5;\n  return Math.round(ms / n) + ' ' + name + (isPlural ? 's' : '');\n}\n", "\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n */\n\nfunction setup(env) {\n\tcreateDebug.debug = createDebug;\n\tcreateDebug.default = createDebug;\n\tcreateDebug.coerce = coerce;\n\tcreateDebug.disable = disable;\n\tcreateDebug.enable = enable;\n\tcreateDebug.enabled = enabled;\n\tcreateDebug.humanize = require('ms');\n\tcreateDebug.destroy = destroy;\n\n\tObject.keys(env).forEach(key => {\n\t\tcreateDebug[key] = env[key];\n\t});\n\n\t/**\n\t* The currently active debug mode names, and names to skip.\n\t*/\n\n\tcreateDebug.names = [];\n\tcreateDebug.skips = [];\n\n\t/**\n\t* Map of special \"%n\" handling functions, for the debug \"format\" argument.\n\t*\n\t* Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n\t*/\n\tcreateDebug.formatters = {};\n\n\t/**\n\t* Selects a color for a debug namespace\n\t* @param {String} namespace The namespace string for the for the debug instance to be colored\n\t* @return {Number|String} An ANSI color code for the given namespace\n\t* @api private\n\t*/\n\tfunction selectColor(namespace) {\n\t\tlet hash = 0;\n\n\t\tfor (let i = 0; i < namespace.length; i++) {\n\t\t\thash = ((hash << 5) - hash) + namespace.charCodeAt(i);\n\t\t\thash |= 0; // Convert to 32bit integer\n\t\t}\n\n\t\treturn createDebug.colors[Math.abs(hash) % createDebug.colors.length];\n\t}\n\tcreateDebug.selectColor = selectColor;\n\n\t/**\n\t* Create a debugger with the given `namespace`.\n\t*\n\t* @param {String} namespace\n\t* @return {Function}\n\t* @api public\n\t*/\n\tfunction createDebug(namespace) {\n\t\tlet prevTime;\n\t\tlet enableOverride = null;\n\t\tlet namespacesCache;\n\t\tlet enabledCache;\n\n\t\tfunction debug(...args) {\n\t\t\t// Disabled?\n\t\t\tif (!debug.enabled) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst self = debug;\n\n\t\t\t// Set `diff` timestamp\n\t\t\tconst curr = Number(new Date());\n\t\t\tconst ms = curr - (prevTime || curr);\n\t\t\tself.diff = ms;\n\t\t\tself.prev = prevTime;\n\t\t\tself.curr = curr;\n\t\t\tprevTime = curr;\n\n\t\t\targs[0] = createDebug.coerce(args[0]);\n\n\t\t\tif (typeof args[0] !== 'string') {\n\t\t\t\t// Anything else let's inspect with %O\n\t\t\t\targs.unshift('%O');\n\t\t\t}\n\n\t\t\t// Apply any `formatters` transformations\n\t\t\tlet index = 0;\n\t\t\targs[0] = args[0].replace(/%([a-zA-Z%])/g, (match, format) => {\n\t\t\t\t// If we encounter an escaped % then don't increase the array index\n\t\t\t\tif (match === '%%') {\n\t\t\t\t\treturn '%';\n\t\t\t\t}\n\t\t\t\tindex++;\n\t\t\t\tconst formatter = createDebug.formatters[format];\n\t\t\t\tif (typeof formatter === 'function') {\n\t\t\t\t\tconst val = args[index];\n\t\t\t\t\tmatch = formatter.call(self, val);\n\n\t\t\t\t\t// Now we need to remove `args[index]` since it's inlined in the `format`\n\t\t\t\t\targs.splice(index, 1);\n\t\t\t\t\tindex--;\n\t\t\t\t}\n\t\t\t\treturn match;\n\t\t\t});\n\n\t\t\t// Apply env-specific formatting (colors, etc.)\n\t\t\tcreateDebug.formatArgs.call(self, args);\n\n\t\t\tconst logFn = self.log || createDebug.log;\n\t\t\tlogFn.apply(self, args);\n\t\t}\n\n\t\tdebug.namespace = namespace;\n\t\tdebug.useColors = createDebug.useColors();\n\t\tdebug.color = createDebug.selectColor(namespace);\n\t\tdebug.extend = extend;\n\t\tdebug.destroy = createDebug.destroy; // XXX Temporary. Will be removed in the next major release.\n\n\t\tObject.defineProperty(debug, 'enabled', {\n\t\t\tenumerable: true,\n\t\t\tconfigurable: false,\n\t\t\tget: () => {\n\t\t\t\tif (enableOverride !== null) {\n\t\t\t\t\treturn enableOverride;\n\t\t\t\t}\n\t\t\t\tif (namespacesCache !== createDebug.namespaces) {\n\t\t\t\t\tnamespacesCache = createDebug.namespaces;\n\t\t\t\t\tenabledCache = createDebug.enabled(namespace);\n\t\t\t\t}\n\n\t\t\t\treturn enabledCache;\n\t\t\t},\n\t\t\tset: v => {\n\t\t\t\tenableOverride = v;\n\t\t\t}\n\t\t});\n\n\t\t// Env-specific initialization logic for debug instances\n\t\tif (typeof createDebug.init === 'function') {\n\t\t\tcreateDebug.init(debug);\n\t\t}\n\n\t\treturn debug;\n\t}\n\n\tfunction extend(namespace, delimiter) {\n\t\tconst newDebug = createDebug(this.namespace + (typeof delimiter === 'undefined' ? ':' : delimiter) + namespace);\n\t\tnewDebug.log = this.log;\n\t\treturn newDebug;\n\t}\n\n\t/**\n\t* Enables a debug mode by namespaces. This can include modes\n\t* separated by a colon and wildcards.\n\t*\n\t* @param {String} namespaces\n\t* @api public\n\t*/\n\tfunction enable(namespaces) {\n\t\tcreateDebug.save(namespaces);\n\t\tcreateDebug.namespaces = namespaces;\n\n\t\tcreateDebug.names = [];\n\t\tcreateDebug.skips = [];\n\n\t\tlet i;\n\t\tconst split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n\t\tconst len = split.length;\n\n\t\tfor (i = 0; i < len; i++) {\n\t\t\tif (!split[i]) {\n\t\t\t\t// ignore empty strings\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tnamespaces = split[i].replace(/\\*/g, '.*?');\n\n\t\t\tif (namespaces[0] === '-') {\n\t\t\t\tcreateDebug.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n\t\t\t} else {\n\t\t\t\tcreateDebug.names.push(new RegExp('^' + namespaces + '$'));\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t* Disable debug output.\n\t*\n\t* @return {String} namespaces\n\t* @api public\n\t*/\n\tfunction disable() {\n\t\tconst namespaces = [\n\t\t\t...createDebug.names.map(toNamespace),\n\t\t\t...createDebug.skips.map(toNamespace).map(namespace => '-' + namespace)\n\t\t].join(',');\n\t\tcreateDebug.enable('');\n\t\treturn namespaces;\n\t}\n\n\t/**\n\t* Returns true if the given mode name is enabled, false otherwise.\n\t*\n\t* @param {String} name\n\t* @return {Boolean}\n\t* @api public\n\t*/\n\tfunction enabled(name) {\n\t\tif (name[name.length - 1] === '*') {\n\t\t\treturn true;\n\t\t}\n\n\t\tlet i;\n\t\tlet len;\n\n\t\tfor (i = 0, len = createDebug.skips.length; i < len; i++) {\n\t\t\tif (createDebug.skips[i].test(name)) {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfor (i = 0, len = createDebug.names.length; i < len; i++) {\n\t\t\tif (createDebug.names[i].test(name)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t}\n\n\t/**\n\t* Convert regexp to namespace\n\t*\n\t* @param {RegExp} regxep\n\t* @return {String} namespace\n\t* @api private\n\t*/\n\tfunction toNamespace(regexp) {\n\t\treturn regexp.toString()\n\t\t\t.substring(2, regexp.toString().length - 2)\n\t\t\t.replace(/\\.\\*\\?$/, '*');\n\t}\n\n\t/**\n\t* Coerce `val`.\n\t*\n\t* @param {Mixed} val\n\t* @return {Mixed}\n\t* @api private\n\t*/\n\tfunction coerce(val) {\n\t\tif (val instanceof Error) {\n\t\t\treturn val.stack || val.message;\n\t\t}\n\t\treturn val;\n\t}\n\n\t/**\n\t* XXX DO NOT USE. This is a temporary stub function.\n\t* XXX It WILL be removed in the next major release.\n\t*/\n\tfunction destroy() {\n\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t}\n\n\tcreateDebug.enable(createDebug.load());\n\n\treturn createDebug;\n}\n\nmodule.exports = setup;\n", "/* eslint-env browser */\n\n/**\n * This is the web browser implementation of `debug()`.\n */\n\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = localstorage();\nexports.destroy = (() => {\n\tlet warned = false;\n\n\treturn () => {\n\t\tif (!warned) {\n\t\t\twarned = true;\n\t\t\tconsole.warn('Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.');\n\t\t}\n\t};\n})();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n\t'#0000CC',\n\t'#0000FF',\n\t'#0033CC',\n\t'#0033FF',\n\t'#0066CC',\n\t'#0066FF',\n\t'#0099CC',\n\t'#0099FF',\n\t'#00CC00',\n\t'#00CC33',\n\t'#00CC66',\n\t'#00CC99',\n\t'#00CCCC',\n\t'#00CCFF',\n\t'#3300CC',\n\t'#3300FF',\n\t'#3333CC',\n\t'#3333FF',\n\t'#3366CC',\n\t'#3366FF',\n\t'#3399CC',\n\t'#3399FF',\n\t'#33CC00',\n\t'#33CC33',\n\t'#33CC66',\n\t'#33CC99',\n\t'#33CCCC',\n\t'#33CCFF',\n\t'#6600CC',\n\t'#6600FF',\n\t'#6633CC',\n\t'#6633FF',\n\t'#66CC00',\n\t'#66CC33',\n\t'#9900CC',\n\t'#9900FF',\n\t'#9933CC',\n\t'#9933FF',\n\t'#99CC00',\n\t'#99CC33',\n\t'#CC0000',\n\t'#CC0033',\n\t'#CC0066',\n\t'#CC0099',\n\t'#CC00CC',\n\t'#CC00FF',\n\t'#CC3300',\n\t'#CC3333',\n\t'#CC3366',\n\t'#CC3399',\n\t'#CC33CC',\n\t'#CC33FF',\n\t'#CC6600',\n\t'#CC6633',\n\t'#CC9900',\n\t'#CC9933',\n\t'#CCCC00',\n\t'#CCCC33',\n\t'#FF0000',\n\t'#FF0033',\n\t'#FF0066',\n\t'#FF0099',\n\t'#FF00CC',\n\t'#FF00FF',\n\t'#FF3300',\n\t'#FF3333',\n\t'#FF3366',\n\t'#FF3399',\n\t'#FF33CC',\n\t'#FF33FF',\n\t'#FF6600',\n\t'#FF6633',\n\t'#FF9900',\n\t'#FF9933',\n\t'#FFCC00',\n\t'#FFCC33'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\n// eslint-disable-next-line complexity\nfunction useColors() {\n\t// NB: In an Electron preload script, document will be defined but not fully\n\t// initialized. Since we know we're in Chrome, we'll just detect this case\n\t// explicitly\n\tif (typeof window !== 'undefined' && window.process && (window.process.type === 'renderer' || window.process.__nwjs)) {\n\t\treturn true;\n\t}\n\n\t// Internet Explorer and Edge do not support colors.\n\tif (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/(edge|trident)\\/(\\d+)/)) {\n\t\treturn false;\n\t}\n\n\t// Is webkit? http://stackoverflow.com/a/16459606/376773\n\t// document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n\treturn (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n\t\t// Is firebug? http://stackoverflow.com/a/398120/376773\n\t\t(typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n\t\t// Is firefox >= v31?\n\t\t// https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n\t\t// Double check webkit in userAgent just in case we are in a worker\n\t\t(typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\targs[0] = (this.useColors ? '%c' : '') +\n\t\tthis.namespace +\n\t\t(this.useColors ? ' %c' : ' ') +\n\t\targs[0] +\n\t\t(this.useColors ? '%c ' : ' ') +\n\t\t'+' + module.exports.humanize(this.diff);\n\n\tif (!this.useColors) {\n\t\treturn;\n\t}\n\n\tconst c = 'color: ' + this.color;\n\targs.splice(1, 0, c, 'color: inherit');\n\n\t// The final \"%c\" is somewhat tricky, because there could be other\n\t// arguments passed either before or after the %c, so we need to\n\t// figure out the correct index to insert the CSS into\n\tlet index = 0;\n\tlet lastC = 0;\n\targs[0].replace(/%[a-zA-Z%]/g, match => {\n\t\tif (match === '%%') {\n\t\t\treturn;\n\t\t}\n\t\tindex++;\n\t\tif (match === '%c') {\n\t\t\t// We only are interested in the *last* %c\n\t\t\t// (the user may have provided their own)\n\t\t\tlastC = index;\n\t\t}\n\t});\n\n\targs.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.debug()` when available.\n * No-op when `console.debug` is not a \"function\".\n * If `console.debug` is not available, falls back\n * to `console.log`.\n *\n * @api public\n */\nexports.log = console.debug || console.log || (() => {});\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\ttry {\n\t\tif (namespaces) {\n\t\t\texports.storage.setItem('debug', namespaces);\n\t\t} else {\n\t\t\texports.storage.removeItem('debug');\n\t\t}\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\nfunction load() {\n\tlet r;\n\ttry {\n\t\tr = exports.storage.getItem('debug');\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n\n\t// If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n\tif (!r && typeof process !== 'undefined' && 'env' in process) {\n\t\tr = process.env.DEBUG;\n\t}\n\n\treturn r;\n}\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n\ttry {\n\t\t// TVMLKit (Apple TV JS Runtime) does not have a window object, just localStorage in the global context\n\t\t// The Browser also has localStorage in the global context.\n\t\treturn localStorage;\n\t} catch (error) {\n\t\t// Swallow\n\t\t// XXX (@Qix-) should we be logging these?\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nformatters.j = function (v) {\n\ttry {\n\t\treturn JSON.stringify(v);\n\t} catch (error) {\n\t\treturn '[UnexpectedJSONParseError]: ' + error.message;\n\t}\n};\n", "'use strict';\n\nmodule.exports = (flag, argv = process.argv) => {\n\tconst prefix = flag.startsWith('-') ? '' : (flag.length === 1 ? '-' : '--');\n\tconst position = argv.indexOf(prefix + flag);\n\tconst terminatorPosition = argv.indexOf('--');\n\treturn position !== -1 && (terminatorPosition === -1 || position < terminatorPosition);\n};\n", "'use strict';\nconst os = require('os');\nconst tty = require('tty');\nconst hasFlag = require('has-flag');\n\nconst {env} = process;\n\nlet forceColor;\nif (hasFlag('no-color') ||\n\thasFlag('no-colors') ||\n\thasFlag('color=false') ||\n\thasFlag('color=never')) {\n\tforceColor = 0;\n} else if (hasFlag('color') ||\n\thasFlag('colors') ||\n\thasFlag('color=true') ||\n\thasFlag('color=always')) {\n\tforceColor = 1;\n}\n\nif ('FORCE_COLOR' in env) {\n\tif (env.FORCE_COLOR === 'true') {\n\t\tforceColor = 1;\n\t} else if (env.FORCE_COLOR === 'false') {\n\t\tforceColor = 0;\n\t} else {\n\t\tforceColor = env.FORCE_COLOR.length === 0 ? 1 : Math.min(parseInt(env.FORCE_COLOR, 10), 3);\n\t}\n}\n\nfunction translateLevel(level) {\n\tif (level === 0) {\n\t\treturn false;\n\t}\n\n\treturn {\n\t\tlevel,\n\t\thasBasic: true,\n\t\thas256: level >= 2,\n\t\thas16m: level >= 3\n\t};\n}\n\nfunction supportsColor(haveStream, streamIsTTY) {\n\tif (forceColor === 0) {\n\t\treturn 0;\n\t}\n\n\tif (hasFlag('color=16m') ||\n\t\thasFlag('color=full') ||\n\t\thasFlag('color=truecolor')) {\n\t\treturn 3;\n\t}\n\n\tif (hasFlag('color=256')) {\n\t\treturn 2;\n\t}\n\n\tif (haveStream && !streamIsTTY && forceColor === undefined) {\n\t\treturn 0;\n\t}\n\n\tconst min = forceColor || 0;\n\n\tif (env.TERM === 'dumb') {\n\t\treturn min;\n\t}\n\n\tif (process.platform === 'win32') {\n\t\t// Windows 10 build 10586 is the first Windows release that supports 256 colors.\n\t\t// Windows 10 build 14931 is the first release that supports 16m/TrueColor.\n\t\tconst osRelease = os.release().split('.');\n\t\tif (\n\t\t\tNumber(osRelease[0]) >= 10 &&\n\t\t\tNumber(osRelease[2]) >= 10586\n\t\t) {\n\t\t\treturn Number(osRelease[2]) >= 14931 ? 3 : 2;\n\t\t}\n\n\t\treturn 1;\n\t}\n\n\tif ('CI' in env) {\n\t\tif (['TRAVIS', 'CIRCLECI', 'APPVEYOR', 'GITLAB_CI', 'GITHUB_ACTIONS', 'BUILDKITE'].some(sign => sign in env) || env.CI_NAME === 'codeship') {\n\t\t\treturn 1;\n\t\t}\n\n\t\treturn min;\n\t}\n\n\tif ('TEAMCITY_VERSION' in env) {\n\t\treturn /^(9\\.(0*[1-9]\\d*)\\.|\\d{2,}\\.)/.test(env.TEAMCITY_VERSION) ? 1 : 0;\n\t}\n\n\tif (env.COLORTERM === 'truecolor') {\n\t\treturn 3;\n\t}\n\n\tif ('TERM_PROGRAM' in env) {\n\t\tconst version = parseInt((env.TERM_PROGRAM_VERSION || '').split('.')[0], 10);\n\n\t\tswitch (env.TERM_PROGRAM) {\n\t\t\tcase 'iTerm.app':\n\t\t\t\treturn version >= 3 ? 3 : 2;\n\t\t\tcase 'Apple_Terminal':\n\t\t\t\treturn 2;\n\t\t\t// No default\n\t\t}\n\t}\n\n\tif (/-256(color)?$/i.test(env.TERM)) {\n\t\treturn 2;\n\t}\n\n\tif (/^screen|^xterm|^vt100|^vt220|^rxvt|color|ansi|cygwin|linux/i.test(env.TERM)) {\n\t\treturn 1;\n\t}\n\n\tif ('COLORTERM' in env) {\n\t\treturn 1;\n\t}\n\n\treturn min;\n}\n\nfunction getSupportLevel(stream) {\n\tconst level = supportsColor(stream, stream && stream.isTTY);\n\treturn translateLevel(level);\n}\n\nmodule.exports = {\n\tsupportsColor: getSupportLevel,\n\tstdout: translateLevel(supportsColor(true, tty.isatty(1))),\n\tstderr: translateLevel(supportsColor(true, tty.isatty(2)))\n};\n", "/**\n * Module dependencies.\n */\n\nconst tty = require('tty');\nconst util = require('util');\n\n/**\n * This is the Node.js implementation of `debug()`.\n */\n\nexports.init = init;\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.destroy = util.deprecate(\n\t() => {},\n\t'Instance method `debug.destroy()` is deprecated and no longer does anything. It will be removed in the next major version of `debug`.'\n);\n\n/**\n * Colors.\n */\n\nexports.colors = [6, 2, 3, 4, 5, 1];\n\ntry {\n\t// Optional dependency (as in, doesn't need to be installed, NOT like optionalDependencies in package.json)\n\t// eslint-disable-next-line import/no-extraneous-dependencies\n\tconst supportsColor = require('supports-color');\n\n\tif (supportsColor && (supportsColor.stderr || supportsColor).level >= 2) {\n\t\texports.colors = [\n\t\t\t20,\n\t\t\t21,\n\t\t\t26,\n\t\t\t27,\n\t\t\t32,\n\t\t\t33,\n\t\t\t38,\n\t\t\t39,\n\t\t\t40,\n\t\t\t41,\n\t\t\t42,\n\t\t\t43,\n\t\t\t44,\n\t\t\t45,\n\t\t\t56,\n\t\t\t57,\n\t\t\t62,\n\t\t\t63,\n\t\t\t68,\n\t\t\t69,\n\t\t\t74,\n\t\t\t75,\n\t\t\t76,\n\t\t\t77,\n\t\t\t78,\n\t\t\t79,\n\t\t\t80,\n\t\t\t81,\n\t\t\t92,\n\t\t\t93,\n\t\t\t98,\n\t\t\t99,\n\t\t\t112,\n\t\t\t113,\n\t\t\t128,\n\t\t\t129,\n\t\t\t134,\n\t\t\t135,\n\t\t\t148,\n\t\t\t149,\n\t\t\t160,\n\t\t\t161,\n\t\t\t162,\n\t\t\t163,\n\t\t\t164,\n\t\t\t165,\n\t\t\t166,\n\t\t\t167,\n\t\t\t168,\n\t\t\t169,\n\t\t\t170,\n\t\t\t171,\n\t\t\t172,\n\t\t\t173,\n\t\t\t178,\n\t\t\t179,\n\t\t\t184,\n\t\t\t185,\n\t\t\t196,\n\t\t\t197,\n\t\t\t198,\n\t\t\t199,\n\t\t\t200,\n\t\t\t201,\n\t\t\t202,\n\t\t\t203,\n\t\t\t204,\n\t\t\t205,\n\t\t\t206,\n\t\t\t207,\n\t\t\t208,\n\t\t\t209,\n\t\t\t214,\n\t\t\t215,\n\t\t\t220,\n\t\t\t221\n\t\t];\n\t}\n} catch (error) {\n\t// Swallow - we only care if `supports-color` is available; it doesn't have to be.\n}\n\n/**\n * Build up the default `inspectOpts` object from the environment variables.\n *\n *   $ DEBUG_COLORS=no DEBUG_DEPTH=10 DEBUG_SHOW_HIDDEN=enabled node script.js\n */\n\nexports.inspectOpts = Object.keys(process.env).filter(key => {\n\treturn /^debug_/i.test(key);\n}).reduce((obj, key) => {\n\t// Camel-case\n\tconst prop = key\n\t\t.substring(6)\n\t\t.toLowerCase()\n\t\t.replace(/_([a-z])/g, (_, k) => {\n\t\t\treturn k.toUpperCase();\n\t\t});\n\n\t// Coerce string value into JS value\n\tlet val = process.env[key];\n\tif (/^(yes|on|true|enabled)$/i.test(val)) {\n\t\tval = true;\n\t} else if (/^(no|off|false|disabled)$/i.test(val)) {\n\t\tval = false;\n\t} else if (val === 'null') {\n\t\tval = null;\n\t} else {\n\t\tval = Number(val);\n\t}\n\n\tobj[prop] = val;\n\treturn obj;\n}, {});\n\n/**\n * Is stdout a TTY? Colored output is enabled when `true`.\n */\n\nfunction useColors() {\n\treturn 'colors' in exports.inspectOpts ?\n\t\tBoolean(exports.inspectOpts.colors) :\n\t\ttty.isatty(process.stderr.fd);\n}\n\n/**\n * Adds ANSI color escape codes if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n\tconst {namespace: name, useColors} = this;\n\n\tif (useColors) {\n\t\tconst c = this.color;\n\t\tconst colorCode = '\\u001B[3' + (c < 8 ? c : '8;5;' + c);\n\t\tconst prefix = `  ${colorCode};1m${name} \\u001B[0m`;\n\n\t\targs[0] = prefix + args[0].split('\\n').join('\\n' + prefix);\n\t\targs.push(colorCode + 'm+' + module.exports.humanize(this.diff) + '\\u001B[0m');\n\t} else {\n\t\targs[0] = getDate() + name + ' ' + args[0];\n\t}\n}\n\nfunction getDate() {\n\tif (exports.inspectOpts.hideDate) {\n\t\treturn '';\n\t}\n\treturn new Date().toISOString() + ' ';\n}\n\n/**\n * Invokes `util.format()` with the specified arguments and writes to stderr.\n */\n\nfunction log(...args) {\n\treturn process.stderr.write(util.format(...args) + '\\n');\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\nfunction save(namespaces) {\n\tif (namespaces) {\n\t\tprocess.env.DEBUG = namespaces;\n\t} else {\n\t\t// If you set a process.env field to null or undefined, it gets cast to the\n\t\t// string 'null' or 'undefined'. Just delete instead.\n\t\tdelete process.env.DEBUG;\n\t}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n\treturn process.env.DEBUG;\n}\n\n/**\n * Init logic for `debug` instances.\n *\n * Create a new `inspectOpts` object in case `useColors` is set\n * differently for a particular `debug` instance.\n */\n\nfunction init(debug) {\n\tdebug.inspectOpts = {};\n\n\tconst keys = Object.keys(exports.inspectOpts);\n\tfor (let i = 0; i < keys.length; i++) {\n\t\tdebug.inspectOpts[keys[i]] = exports.inspectOpts[keys[i]];\n\t}\n}\n\nmodule.exports = require('./common')(exports);\n\nconst {formatters} = module.exports;\n\n/**\n * Map %o to `util.inspect()`, all on a single line.\n */\n\nformatters.o = function (v) {\n\tthis.inspectOpts.colors = this.useColors;\n\treturn util.inspect(v, this.inspectOpts)\n\t\t.split('\\n')\n\t\t.map(str => str.trim())\n\t\t.join(' ');\n};\n\n/**\n * Map %O to `util.inspect()`, allowing multiple lines if needed.\n */\n\nformatters.O = function (v) {\n\tthis.inspectOpts.colors = this.useColors;\n\treturn util.inspect(v, this.inspectOpts);\n};\n", "/**\n * Detect Electron renderer / nwjs process, which is node, but we should\n * treat as a browser.\n */\n\nif (typeof process === 'undefined' || process.type === 'renderer' || process.browser === true || process.__nwjs) {\n\tmodule.exports = require('./browser.js');\n} else {\n\tmodule.exports = require('./node.js');\n}\n", "/**\n * Gets the first element of `array`.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @alias first\n * @category Array\n * @param {Array} array The array to query.\n * @returns {*} Returns the first element of `array`.\n * @example\n *\n * _.head([1, 2, 3]);\n * // => 1\n *\n * _.head([]);\n * // => undefined\n */\nfunction head(array) {\n  return (array && array.length) ? array[0] : undefined;\n}\n\nmodule.exports = head;\n", "module.exports = require('./head');\n", "var baseIteratee = require('./_baseIteratee'),\n    baseSortedIndexBy = require('./_baseSortedIndexBy');\n\n/**\n * This method is like `_.sortedIndex` except that it accepts `iteratee`\n * which is invoked for `value` and each element of `array` to compute their\n * sort ranking. The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The sorted array to inspect.\n * @param {*} value The value to evaluate.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {number} Returns the index at which `value` should be inserted\n *  into `array`.\n * @example\n *\n * var objects = [{ 'x': 4 }, { 'x': 5 }];\n *\n * _.sortedIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n * // => 0\n *\n * // The `_.property` iteratee shorthand.\n * _.sortedIndexBy(objects, { 'x': 4 }, 'x');\n * // => 0\n */\nfunction sortedIndexBy(array, value, iteratee) {\n  return baseSortedIndexBy(array, value, baseIteratee(iteratee, 2));\n}\n\nmodule.exports = sortedIndexBy;\n", "/*\n  Copyright (C) 2012-2013 Yusuke Suzuki <utatane.tea@gmail.com>\n  Copyright (C) 2012 Ariya Hidayat <ariya.hidayat@gmail.com>\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n/*jslint vars:false, bitwise:true*/\n/*jshint indent:4*/\n/*global exports:true*/\n(function clone(exports) {\n    'use strict';\n\n    var Syntax,\n        VisitorOption,\n        VisitorKeys,\n        BREAK,\n        SKIP,\n        REMOVE;\n\n    function deepCopy(obj) {\n        var ret = {}, key, val;\n        for (key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                val = obj[key];\n                if (typeof val === 'object' && val !== null) {\n                    ret[key] = deepCopy(val);\n                } else {\n                    ret[key] = val;\n                }\n            }\n        }\n        return ret;\n    }\n\n    // based on LLVM libc++ upper_bound / lower_bound\n    // MIT License\n\n    function upperBound(array, func) {\n        var diff, len, i, current;\n\n        len = array.length;\n        i = 0;\n\n        while (len) {\n            diff = len >>> 1;\n            current = i + diff;\n            if (func(array[current])) {\n                len = diff;\n            } else {\n                i = current + 1;\n                len -= diff + 1;\n            }\n        }\n        return i;\n    }\n\n    Syntax = {\n        AssignmentExpression: 'AssignmentExpression',\n        AssignmentPattern: 'AssignmentPattern',\n        ArrayExpression: 'ArrayExpression',\n        ArrayPattern: 'ArrayPattern',\n        ArrowFunctionExpression: 'ArrowFunctionExpression',\n        AwaitExpression: 'AwaitExpression', // CAUTION: It's deferred to ES7.\n        BlockStatement: 'BlockStatement',\n        BinaryExpression: 'BinaryExpression',\n        BreakStatement: 'BreakStatement',\n        CallExpression: 'CallExpression',\n        CatchClause: 'CatchClause',\n        ClassBody: 'ClassBody',\n        ClassDeclaration: 'ClassDeclaration',\n        ClassExpression: 'ClassExpression',\n        ComprehensionBlock: 'ComprehensionBlock',  // CAUTION: It's deferred to ES7.\n        ComprehensionExpression: 'ComprehensionExpression',  // CAUTION: It's deferred to ES7.\n        ConditionalExpression: 'ConditionalExpression',\n        ContinueStatement: 'ContinueStatement',\n        DebuggerStatement: 'DebuggerStatement',\n        DirectiveStatement: 'DirectiveStatement',\n        DoWhileStatement: 'DoWhileStatement',\n        EmptyStatement: 'EmptyStatement',\n        ExportAllDeclaration: 'ExportAllDeclaration',\n        ExportDefaultDeclaration: 'ExportDefaultDeclaration',\n        ExportNamedDeclaration: 'ExportNamedDeclaration',\n        ExportSpecifier: 'ExportSpecifier',\n        ExpressionStatement: 'ExpressionStatement',\n        ForStatement: 'ForStatement',\n        ForInStatement: 'ForInStatement',\n        ForOfStatement: 'ForOfStatement',\n        FunctionDeclaration: 'FunctionDeclaration',\n        FunctionExpression: 'FunctionExpression',\n        GeneratorExpression: 'GeneratorExpression',  // CAUTION: It's deferred to ES7.\n        Identifier: 'Identifier',\n        IfStatement: 'IfStatement',\n        ImportExpression: 'ImportExpression',\n        ImportDeclaration: 'ImportDeclaration',\n        ImportDefaultSpecifier: 'ImportDefaultSpecifier',\n        ImportNamespaceSpecifier: 'ImportNamespaceSpecifier',\n        ImportSpecifier: 'ImportSpecifier',\n        Literal: 'Literal',\n        LabeledStatement: 'LabeledStatement',\n        LogicalExpression: 'LogicalExpression',\n        MemberExpression: 'MemberExpression',\n        MetaProperty: 'MetaProperty',\n        MethodDefinition: 'MethodDefinition',\n        ModuleSpecifier: 'ModuleSpecifier',\n        NewExpression: 'NewExpression',\n        ObjectExpression: 'ObjectExpression',\n        ObjectPattern: 'ObjectPattern',\n        Program: 'Program',\n        Property: 'Property',\n        RestElement: 'RestElement',\n        ReturnStatement: 'ReturnStatement',\n        SequenceExpression: 'SequenceExpression',\n        SpreadElement: 'SpreadElement',\n        Super: 'Super',\n        SwitchStatement: 'SwitchStatement',\n        SwitchCase: 'SwitchCase',\n        TaggedTemplateExpression: 'TaggedTemplateExpression',\n        TemplateElement: 'TemplateElement',\n        TemplateLiteral: 'TemplateLiteral',\n        ThisExpression: 'ThisExpression',\n        ThrowStatement: 'ThrowStatement',\n        TryStatement: 'TryStatement',\n        UnaryExpression: 'UnaryExpression',\n        UpdateExpression: 'UpdateExpression',\n        VariableDeclaration: 'VariableDeclaration',\n        VariableDeclarator: 'VariableDeclarator',\n        WhileStatement: 'WhileStatement',\n        WithStatement: 'WithStatement',\n        YieldExpression: 'YieldExpression'\n    };\n\n    VisitorKeys = {\n        AssignmentExpression: ['left', 'right'],\n        AssignmentPattern: ['left', 'right'],\n        ArrayExpression: ['elements'],\n        ArrayPattern: ['elements'],\n        ArrowFunctionExpression: ['params', 'body'],\n        AwaitExpression: ['argument'], // CAUTION: It's deferred to ES7.\n        BlockStatement: ['body'],\n        BinaryExpression: ['left', 'right'],\n        BreakStatement: ['label'],\n        CallExpression: ['callee', 'arguments'],\n        CatchClause: ['param', 'body'],\n        ClassBody: ['body'],\n        ClassDeclaration: ['id', 'superClass', 'body'],\n        ClassExpression: ['id', 'superClass', 'body'],\n        ComprehensionBlock: ['left', 'right'],  // CAUTION: It's deferred to ES7.\n        ComprehensionExpression: ['blocks', 'filter', 'body'],  // CAUTION: It's deferred to ES7.\n        ConditionalExpression: ['test', 'consequent', 'alternate'],\n        ContinueStatement: ['label'],\n        DebuggerStatement: [],\n        DirectiveStatement: [],\n        DoWhileStatement: ['body', 'test'],\n        EmptyStatement: [],\n        ExportAllDeclaration: ['source'],\n        ExportDefaultDeclaration: ['declaration'],\n        ExportNamedDeclaration: ['declaration', 'specifiers', 'source'],\n        ExportSpecifier: ['exported', 'local'],\n        ExpressionStatement: ['expression'],\n        ForStatement: ['init', 'test', 'update', 'body'],\n        ForInStatement: ['left', 'right', 'body'],\n        ForOfStatement: ['left', 'right', 'body'],\n        FunctionDeclaration: ['id', 'params', 'body'],\n        FunctionExpression: ['id', 'params', 'body'],\n        GeneratorExpression: ['blocks', 'filter', 'body'],  // CAUTION: It's deferred to ES7.\n        Identifier: [],\n        IfStatement: ['test', 'consequent', 'alternate'],\n        ImportExpression: ['source'],\n        ImportDeclaration: ['specifiers', 'source'],\n        ImportDefaultSpecifier: ['local'],\n        ImportNamespaceSpecifier: ['local'],\n        ImportSpecifier: ['imported', 'local'],\n        Literal: [],\n        LabeledStatement: ['label', 'body'],\n        LogicalExpression: ['left', 'right'],\n        MemberExpression: ['object', 'property'],\n        MetaProperty: ['meta', 'property'],\n        MethodDefinition: ['key', 'value'],\n        ModuleSpecifier: [],\n        NewExpression: ['callee', 'arguments'],\n        ObjectExpression: ['properties'],\n        ObjectPattern: ['properties'],\n        Program: ['body'],\n        Property: ['key', 'value'],\n        RestElement: [ 'argument' ],\n        ReturnStatement: ['argument'],\n        SequenceExpression: ['expressions'],\n        SpreadElement: ['argument'],\n        Super: [],\n        SwitchStatement: ['discriminant', 'cases'],\n        SwitchCase: ['test', 'consequent'],\n        TaggedTemplateExpression: ['tag', 'quasi'],\n        TemplateElement: [],\n        TemplateLiteral: ['quasis', 'expressions'],\n        ThisExpression: [],\n        ThrowStatement: ['argument'],\n        TryStatement: ['block', 'handler', 'finalizer'],\n        UnaryExpression: ['argument'],\n        UpdateExpression: ['argument'],\n        VariableDeclaration: ['declarations'],\n        VariableDeclarator: ['id', 'init'],\n        WhileStatement: ['test', 'body'],\n        WithStatement: ['object', 'body'],\n        YieldExpression: ['argument']\n    };\n\n    // unique id\n    BREAK = {};\n    SKIP = {};\n    REMOVE = {};\n\n    VisitorOption = {\n        Break: BREAK,\n        Skip: SKIP,\n        Remove: REMOVE\n    };\n\n    function Reference(parent, key) {\n        this.parent = parent;\n        this.key = key;\n    }\n\n    Reference.prototype.replace = function replace(node) {\n        this.parent[this.key] = node;\n    };\n\n    Reference.prototype.remove = function remove() {\n        if (Array.isArray(this.parent)) {\n            this.parent.splice(this.key, 1);\n            return true;\n        } else {\n            this.replace(null);\n            return false;\n        }\n    };\n\n    function Element(node, path, wrap, ref) {\n        this.node = node;\n        this.path = path;\n        this.wrap = wrap;\n        this.ref = ref;\n    }\n\n    function Controller() { }\n\n    // API:\n    // return property path array from root to current node\n    Controller.prototype.path = function path() {\n        var i, iz, j, jz, result, element;\n\n        function addToPath(result, path) {\n            if (Array.isArray(path)) {\n                for (j = 0, jz = path.length; j < jz; ++j) {\n                    result.push(path[j]);\n                }\n            } else {\n                result.push(path);\n            }\n        }\n\n        // root node\n        if (!this.__current.path) {\n            return null;\n        }\n\n        // first node is sentinel, second node is root element\n        result = [];\n        for (i = 2, iz = this.__leavelist.length; i < iz; ++i) {\n            element = this.__leavelist[i];\n            addToPath(result, element.path);\n        }\n        addToPath(result, this.__current.path);\n        return result;\n    };\n\n    // API:\n    // return type of current node\n    Controller.prototype.type = function () {\n        var node = this.current();\n        return node.type || this.__current.wrap;\n    };\n\n    // API:\n    // return array of parent elements\n    Controller.prototype.parents = function parents() {\n        var i, iz, result;\n\n        // first node is sentinel\n        result = [];\n        for (i = 1, iz = this.__leavelist.length; i < iz; ++i) {\n            result.push(this.__leavelist[i].node);\n        }\n\n        return result;\n    };\n\n    // API:\n    // return current node\n    Controller.prototype.current = function current() {\n        return this.__current.node;\n    };\n\n    Controller.prototype.__execute = function __execute(callback, element) {\n        var previous, result;\n\n        result = undefined;\n\n        previous  = this.__current;\n        this.__current = element;\n        this.__state = null;\n        if (callback) {\n            result = callback.call(this, element.node, this.__leavelist[this.__leavelist.length - 1].node);\n        }\n        this.__current = previous;\n\n        return result;\n    };\n\n    // API:\n    // notify control skip / break\n    Controller.prototype.notify = function notify(flag) {\n        this.__state = flag;\n    };\n\n    // API:\n    // skip child nodes of current node\n    Controller.prototype.skip = function () {\n        this.notify(SKIP);\n    };\n\n    // API:\n    // break traversals\n    Controller.prototype['break'] = function () {\n        this.notify(BREAK);\n    };\n\n    // API:\n    // remove node\n    Controller.prototype.remove = function () {\n        this.notify(REMOVE);\n    };\n\n    Controller.prototype.__initialize = function(root, visitor) {\n        this.visitor = visitor;\n        this.root = root;\n        this.__worklist = [];\n        this.__leavelist = [];\n        this.__current = null;\n        this.__state = null;\n        this.__fallback = null;\n        if (visitor.fallback === 'iteration') {\n            this.__fallback = Object.keys;\n        } else if (typeof visitor.fallback === 'function') {\n            this.__fallback = visitor.fallback;\n        }\n\n        this.__keys = VisitorKeys;\n        if (visitor.keys) {\n            this.__keys = Object.assign(Object.create(this.__keys), visitor.keys);\n        }\n    };\n\n    function isNode(node) {\n        if (node == null) {\n            return false;\n        }\n        return typeof node === 'object' && typeof node.type === 'string';\n    }\n\n    function isProperty(nodeType, key) {\n        return (nodeType === Syntax.ObjectExpression || nodeType === Syntax.ObjectPattern) && 'properties' === key;\n    }\n\n    Controller.prototype.traverse = function traverse(root, visitor) {\n        var worklist,\n            leavelist,\n            element,\n            node,\n            nodeType,\n            ret,\n            key,\n            current,\n            current2,\n            candidates,\n            candidate,\n            sentinel;\n\n        this.__initialize(root, visitor);\n\n        sentinel = {};\n\n        // reference\n        worklist = this.__worklist;\n        leavelist = this.__leavelist;\n\n        // initialize\n        worklist.push(new Element(root, null, null, null));\n        leavelist.push(new Element(null, null, null, null));\n\n        while (worklist.length) {\n            element = worklist.pop();\n\n            if (element === sentinel) {\n                element = leavelist.pop();\n\n                ret = this.__execute(visitor.leave, element);\n\n                if (this.__state === BREAK || ret === BREAK) {\n                    return;\n                }\n                continue;\n            }\n\n            if (element.node) {\n\n                ret = this.__execute(visitor.enter, element);\n\n                if (this.__state === BREAK || ret === BREAK) {\n                    return;\n                }\n\n                worklist.push(sentinel);\n                leavelist.push(element);\n\n                if (this.__state === SKIP || ret === SKIP) {\n                    continue;\n                }\n\n                node = element.node;\n                nodeType = node.type || element.wrap;\n                candidates = this.__keys[nodeType];\n                if (!candidates) {\n                    if (this.__fallback) {\n                        candidates = this.__fallback(node);\n                    } else {\n                        throw new Error('Unknown node type ' + nodeType + '.');\n                    }\n                }\n\n                current = candidates.length;\n                while ((current -= 1) >= 0) {\n                    key = candidates[current];\n                    candidate = node[key];\n                    if (!candidate) {\n                        continue;\n                    }\n\n                    if (Array.isArray(candidate)) {\n                        current2 = candidate.length;\n                        while ((current2 -= 1) >= 0) {\n                            if (!candidate[current2]) {\n                                continue;\n                            }\n                            if (isProperty(nodeType, candidates[current])) {\n                                element = new Element(candidate[current2], [key, current2], 'Property', null);\n                            } else if (isNode(candidate[current2])) {\n                                element = new Element(candidate[current2], [key, current2], null, null);\n                            } else {\n                                continue;\n                            }\n                            worklist.push(element);\n                        }\n                    } else if (isNode(candidate)) {\n                        worklist.push(new Element(candidate, key, null, null));\n                    }\n                }\n            }\n        }\n    };\n\n    Controller.prototype.replace = function replace(root, visitor) {\n        var worklist,\n            leavelist,\n            node,\n            nodeType,\n            target,\n            element,\n            current,\n            current2,\n            candidates,\n            candidate,\n            sentinel,\n            outer,\n            key;\n\n        function removeElem(element) {\n            var i,\n                key,\n                nextElem,\n                parent;\n\n            if (element.ref.remove()) {\n                // When the reference is an element of an array.\n                key = element.ref.key;\n                parent = element.ref.parent;\n\n                // If removed from array, then decrease following items' keys.\n                i = worklist.length;\n                while (i--) {\n                    nextElem = worklist[i];\n                    if (nextElem.ref && nextElem.ref.parent === parent) {\n                        if  (nextElem.ref.key < key) {\n                            break;\n                        }\n                        --nextElem.ref.key;\n                    }\n                }\n            }\n        }\n\n        this.__initialize(root, visitor);\n\n        sentinel = {};\n\n        // reference\n        worklist = this.__worklist;\n        leavelist = this.__leavelist;\n\n        // initialize\n        outer = {\n            root: root\n        };\n        element = new Element(root, null, null, new Reference(outer, 'root'));\n        worklist.push(element);\n        leavelist.push(element);\n\n        while (worklist.length) {\n            element = worklist.pop();\n\n            if (element === sentinel) {\n                element = leavelist.pop();\n\n                target = this.__execute(visitor.leave, element);\n\n                // node may be replaced with null,\n                // so distinguish between undefined and null in this place\n                if (target !== undefined && target !== BREAK && target !== SKIP && target !== REMOVE) {\n                    // replace\n                    element.ref.replace(target);\n                }\n\n                if (this.__state === REMOVE || target === REMOVE) {\n                    removeElem(element);\n                }\n\n                if (this.__state === BREAK || target === BREAK) {\n                    return outer.root;\n                }\n                continue;\n            }\n\n            target = this.__execute(visitor.enter, element);\n\n            // node may be replaced with null,\n            // so distinguish between undefined and null in this place\n            if (target !== undefined && target !== BREAK && target !== SKIP && target !== REMOVE) {\n                // replace\n                element.ref.replace(target);\n                element.node = target;\n            }\n\n            if (this.__state === REMOVE || target === REMOVE) {\n                removeElem(element);\n                element.node = null;\n            }\n\n            if (this.__state === BREAK || target === BREAK) {\n                return outer.root;\n            }\n\n            // node may be null\n            node = element.node;\n            if (!node) {\n                continue;\n            }\n\n            worklist.push(sentinel);\n            leavelist.push(element);\n\n            if (this.__state === SKIP || target === SKIP) {\n                continue;\n            }\n\n            nodeType = node.type || element.wrap;\n            candidates = this.__keys[nodeType];\n            if (!candidates) {\n                if (this.__fallback) {\n                    candidates = this.__fallback(node);\n                } else {\n                    throw new Error('Unknown node type ' + nodeType + '.');\n                }\n            }\n\n            current = candidates.length;\n            while ((current -= 1) >= 0) {\n                key = candidates[current];\n                candidate = node[key];\n                if (!candidate) {\n                    continue;\n                }\n\n                if (Array.isArray(candidate)) {\n                    current2 = candidate.length;\n                    while ((current2 -= 1) >= 0) {\n                        if (!candidate[current2]) {\n                            continue;\n                        }\n                        if (isProperty(nodeType, candidates[current])) {\n                            element = new Element(candidate[current2], [key, current2], 'Property', new Reference(candidate, current2));\n                        } else if (isNode(candidate[current2])) {\n                            element = new Element(candidate[current2], [key, current2], null, new Reference(candidate, current2));\n                        } else {\n                            continue;\n                        }\n                        worklist.push(element);\n                    }\n                } else if (isNode(candidate)) {\n                    worklist.push(new Element(candidate, key, null, new Reference(node, key)));\n                }\n            }\n        }\n\n        return outer.root;\n    };\n\n    function traverse(root, visitor) {\n        var controller = new Controller();\n        return controller.traverse(root, visitor);\n    }\n\n    function replace(root, visitor) {\n        var controller = new Controller();\n        return controller.replace(root, visitor);\n    }\n\n    function extendCommentRange(comment, tokens) {\n        var target;\n\n        target = upperBound(tokens, function search(token) {\n            return token.range[0] > comment.range[0];\n        });\n\n        comment.extendedRange = [comment.range[0], comment.range[1]];\n\n        if (target !== tokens.length) {\n            comment.extendedRange[1] = tokens[target].range[0];\n        }\n\n        target -= 1;\n        if (target >= 0) {\n            comment.extendedRange[0] = tokens[target].range[1];\n        }\n\n        return comment;\n    }\n\n    function attachComments(tree, providedComments, tokens) {\n        // At first, we should calculate extended comment ranges.\n        var comments = [], comment, len, i, cursor;\n\n        if (!tree.range) {\n            throw new Error('attachComments needs range information');\n        }\n\n        // tokens array is empty, we attach comments to tree as 'leadingComments'\n        if (!tokens.length) {\n            if (providedComments.length) {\n                for (i = 0, len = providedComments.length; i < len; i += 1) {\n                    comment = deepCopy(providedComments[i]);\n                    comment.extendedRange = [0, tree.range[0]];\n                    comments.push(comment);\n                }\n                tree.leadingComments = comments;\n            }\n            return tree;\n        }\n\n        for (i = 0, len = providedComments.length; i < len; i += 1) {\n            comments.push(extendCommentRange(deepCopy(providedComments[i]), tokens));\n        }\n\n        // This is based on John Freeman's implementation.\n        cursor = 0;\n        traverse(tree, {\n            enter: function (node) {\n                var comment;\n\n                while (cursor < comments.length) {\n                    comment = comments[cursor];\n                    if (comment.extendedRange[1] > node.range[0]) {\n                        break;\n                    }\n\n                    if (comment.extendedRange[1] === node.range[0]) {\n                        if (!node.leadingComments) {\n                            node.leadingComments = [];\n                        }\n                        node.leadingComments.push(comment);\n                        comments.splice(cursor, 1);\n                    } else {\n                        cursor += 1;\n                    }\n                }\n\n                // already out of owned node\n                if (cursor === comments.length) {\n                    return VisitorOption.Break;\n                }\n\n                if (comments[cursor].extendedRange[0] > node.range[1]) {\n                    return VisitorOption.Skip;\n                }\n            }\n        });\n\n        cursor = 0;\n        traverse(tree, {\n            leave: function (node) {\n                var comment;\n\n                while (cursor < comments.length) {\n                    comment = comments[cursor];\n                    if (node.range[1] < comment.extendedRange[0]) {\n                        break;\n                    }\n\n                    if (node.range[1] === comment.extendedRange[0]) {\n                        if (!node.trailingComments) {\n                            node.trailingComments = [];\n                        }\n                        node.trailingComments.push(comment);\n                        comments.splice(cursor, 1);\n                    } else {\n                        cursor += 1;\n                    }\n                }\n\n                // already out of owned node\n                if (cursor === comments.length) {\n                    return VisitorOption.Break;\n                }\n\n                if (comments[cursor].extendedRange[0] > node.range[1]) {\n                    return VisitorOption.Skip;\n                }\n            }\n        });\n\n        return tree;\n    }\n\n    exports.version = require('./package.json').version;\n    exports.Syntax = Syntax;\n    exports.traverse = traverse;\n    exports.replace = replace;\n    exports.attachComments = attachComments;\n    exports.VisitorKeys = VisitorKeys;\n    exports.VisitorOption = VisitorOption;\n    exports.Controller = Controller;\n    exports.cloneEnvironment = function () { return clone({}); };\n\n    return exports;\n}(exports));\n/* vim: set sw=4 ts=4 et tw=80 : */\n", "/*\n  Copyright (C) 2015 Yusuke Suzuki <utatane.tea@gmail.com>\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\"use strict\";\n\nconst READ = 0x1;\nconst WRITE = 0x2;\nconst RW = READ | WRITE;\n\n/**\n * A Reference represents a single occurrence of an identifier in code.\n * @class Reference\n */\nclass Reference {\n    constructor(ident, scope, flag, writeExpr, maybeImplicitGlobal, partial, init) {\n\n        /**\n         * Identifier syntax node.\n         * @member {espreeIdentifier} Reference#identifier\n         */\n        this.identifier = ident;\n\n        /**\n         * Reference to the enclosing Scope.\n         * @member {Scope} Reference#from\n         */\n        this.from = scope;\n\n        /**\n         * Whether the reference comes from a dynamic scope (such as 'eval',\n         * 'with', etc.), and may be trapped by dynamic scopes.\n         * @member {boolean} Reference#tainted\n         */\n        this.tainted = false;\n\n        /**\n         * The variable this reference is resolved with.\n         * @member {Variable} Reference#resolved\n         */\n        this.resolved = null;\n\n        /**\n         * The read-write mode of the reference. (Value is one of {@link\n         * Reference.READ}, {@link Reference.RW}, {@link Reference.WRITE}).\n         * @member {number} Reference#flag\n         * @private\n         */\n        this.flag = flag;\n        if (this.isWrite()) {\n\n            /**\n             * If reference is writeable, this is the tree being written to it.\n             * @member {espreeNode} Reference#writeExpr\n             */\n            this.writeExpr = writeExpr;\n\n            /**\n             * Whether the Reference might refer to a partial value of writeExpr.\n             * @member {boolean} Reference#partial\n             */\n            this.partial = partial;\n\n            /**\n             * Whether the Reference is to write of initialization.\n             * @member {boolean} Reference#init\n             */\n            this.init = init;\n        }\n        this.__maybeImplicitGlobal = maybeImplicitGlobal;\n    }\n\n    /**\n     * Whether the reference is static.\n     * @method Reference#isStatic\n     * @returns {boolean} static\n     */\n    isStatic() {\n        return !this.tainted && this.resolved && this.resolved.scope.isStatic();\n    }\n\n    /**\n     * Whether the reference is writeable.\n     * @method Reference#isWrite\n     * @returns {boolean} write\n     */\n    isWrite() {\n        return !!(this.flag & Reference.WRITE);\n    }\n\n    /**\n     * Whether the reference is readable.\n     * @method Reference#isRead\n     * @returns {boolean} read\n     */\n    isRead() {\n        return !!(this.flag & Reference.READ);\n    }\n\n    /**\n     * Whether the reference is read-only.\n     * @method Reference#isReadOnly\n     * @returns {boolean} read only\n     */\n    isReadOnly() {\n        return this.flag === Reference.READ;\n    }\n\n    /**\n     * Whether the reference is write-only.\n     * @method Reference#isWriteOnly\n     * @returns {boolean} write only\n     */\n    isWriteOnly() {\n        return this.flag === Reference.WRITE;\n    }\n\n    /**\n     * Whether the reference is read-write.\n     * @method Reference#isReadWrite\n     * @returns {boolean} read write\n     */\n    isReadWrite() {\n        return this.flag === Reference.RW;\n    }\n}\n\n/**\n * @constant Reference.READ\n * @private\n */\nReference.READ = READ;\n\n/**\n * @constant Reference.WRITE\n * @private\n */\nReference.WRITE = WRITE;\n\n/**\n * @constant Reference.RW\n * @private\n */\nReference.RW = RW;\n\nmodule.exports = Reference;\n\n/* vim: set sw=4 ts=4 et tw=80 : */\n", "/*\n  Copyright (C) 2015 Yusuke Suzuki <utatane.tea@gmail.com>\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\"use strict\";\n\n/**\n * A Variable represents a locally scoped identifier. These include arguments to\n * functions.\n * @class Variable\n */\nclass Variable {\n    constructor(name, scope) {\n\n        /**\n         * The variable name, as given in the source code.\n         * @member {String} Variable#name\n         */\n        this.name = name;\n\n        /**\n         * List of defining occurrences of this variable (like in 'var ...'\n         * statements or as parameter), as AST nodes.\n         * @member {espree.Identifier[]} Variable#identifiers\n         */\n        this.identifiers = [];\n\n        /**\n         * List of {@link Reference|references} of this variable (excluding parameter entries)\n         * in its defining scope and all nested scopes. For defining\n         * occurrences only see {@link Variable#defs}.\n         * @member {Reference[]} Variable#references\n         */\n        this.references = [];\n\n        /**\n         * List of defining occurrences of this variable (like in 'var ...'\n         * statements or as parameter), as custom objects.\n         * @member {Definition[]} Variable#defs\n         */\n        this.defs = [];\n\n        this.tainted = false;\n\n        /**\n         * Whether this is a stack variable.\n         * @member {boolean} Variable#stack\n         */\n        this.stack = true;\n\n        /**\n         * Reference to the enclosing Scope.\n         * @member {Scope} Variable#scope\n         */\n        this.scope = scope;\n    }\n}\n\nVariable.CatchClause = \"CatchClause\";\nVariable.Parameter = \"Parameter\";\nVariable.FunctionName = \"FunctionName\";\nVariable.ClassName = \"ClassName\";\nVariable.Variable = \"Variable\";\nVariable.ImportBinding = \"ImportBinding\";\nVariable.ImplicitGlobalVariable = \"ImplicitGlobalVariable\";\n\nmodule.exports = Variable;\n\n/* vim: set sw=4 ts=4 et tw=80 : */\n", "/*\n  Copyright (C) 2015 Yusuke Suzuki <utatane.tea@gmail.com>\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\"use strict\";\n\nconst Variable = require(\"./variable\");\n\n/**\n * @class Definition\n */\nclass Definition {\n    constructor(type, name, node, parent, index, kind) {\n\n        /**\n         * @member {String} Definition#type - type of the occurrence (e.g. \"Parameter\", \"Variable\", ...).\n         */\n        this.type = type;\n\n        /**\n         * @member {espree.Identifier} Definition#name - the identifier AST node of the occurrence.\n         */\n        this.name = name;\n\n        /**\n         * @member {espree.Node} Definition#node - the enclosing node of the identifier.\n         */\n        this.node = node;\n\n        /**\n         * @member {espree.Node?} Definition#parent - the enclosing statement node of the identifier.\n         */\n        this.parent = parent;\n\n        /**\n         * @member {Number?} Definition#index - the index in the declaration statement.\n         */\n        this.index = index;\n\n        /**\n         * @member {String?} Definition#kind - the kind of the declaration statement.\n         */\n        this.kind = kind;\n    }\n}\n\n/**\n * @class ParameterDefinition\n */\nclass ParameterDefinition extends Definition {\n    constructor(name, node, index, rest) {\n        super(Variable.Parameter, name, node, null, index, null);\n\n        /**\n         * Whether the parameter definition is a part of a rest parameter.\n         * @member {boolean} ParameterDefinition#rest\n         */\n        this.rest = rest;\n    }\n}\n\nmodule.exports = {\n    ParameterDefinition,\n    Definition\n};\n\n/* vim: set sw=4 ts=4 et tw=80 : */\n", "/*\n  Copyright (C) 2015 Yusuke Suzuki <utatane.tea@gmail.com>\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\"use strict\";\n\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable no-undefined */\n\nconst Syntax = require(\"estraverse\").Syntax;\n\nconst Reference = require(\"./reference\");\nconst Variable = require(\"./variable\");\nconst Definition = require(\"./definition\").Definition;\nconst assert = require(\"assert\");\n\n/**\n * Test if scope is struct\n * @param {Scope} scope - scope\n * @param {Block} block - block\n * @param {boolean} isMethodDefinition - is method definition\n * @param {boolean} useDirective - use directive\n * @returns {boolean} is strict scope\n */\nfunction isStrictScope(scope, block, isMethodDefinition, useDirective) {\n    let body;\n\n    // When upper scope is exists and strict, inner scope is also strict.\n    if (scope.upper && scope.upper.isStrict) {\n        return true;\n    }\n\n    if (isMethodDefinition) {\n        return true;\n    }\n\n    if (scope.type === \"class\" || scope.type === \"module\") {\n        return true;\n    }\n\n    if (scope.type === \"block\" || scope.type === \"switch\") {\n        return false;\n    }\n\n    if (scope.type === \"function\") {\n        if (block.type === Syntax.ArrowFunctionExpression && block.body.type !== Syntax.BlockStatement) {\n            return false;\n        }\n\n        if (block.type === Syntax.Program) {\n            body = block;\n        } else {\n            body = block.body;\n        }\n\n        if (!body) {\n            return false;\n        }\n    } else if (scope.type === \"global\") {\n        body = block;\n    } else {\n        return false;\n    }\n\n    // Search 'use strict' directive.\n    if (useDirective) {\n        for (let i = 0, iz = body.body.length; i < iz; ++i) {\n            const stmt = body.body[i];\n\n            if (stmt.type !== Syntax.DirectiveStatement) {\n                break;\n            }\n            if (stmt.raw === \"\\\"use strict\\\"\" || stmt.raw === \"'use strict'\") {\n                return true;\n            }\n        }\n    } else {\n        for (let i = 0, iz = body.body.length; i < iz; ++i) {\n            const stmt = body.body[i];\n\n            if (stmt.type !== Syntax.ExpressionStatement) {\n                break;\n            }\n            const expr = stmt.expression;\n\n            if (expr.type !== Syntax.Literal || typeof expr.value !== \"string\") {\n                break;\n            }\n            if (expr.raw !== null && expr.raw !== undefined) {\n                if (expr.raw === \"\\\"use strict\\\"\" || expr.raw === \"'use strict'\") {\n                    return true;\n                }\n            } else {\n                if (expr.value === \"use strict\") {\n                    return true;\n                }\n            }\n        }\n    }\n    return false;\n}\n\n/**\n * Register scope\n * @param {ScopeManager} scopeManager - scope manager\n * @param {Scope} scope - scope\n * @returns {void}\n */\nfunction registerScope(scopeManager, scope) {\n    scopeManager.scopes.push(scope);\n\n    const scopes = scopeManager.__nodeToScope.get(scope.block);\n\n    if (scopes) {\n        scopes.push(scope);\n    } else {\n        scopeManager.__nodeToScope.set(scope.block, [scope]);\n    }\n}\n\n/**\n * Should be statically\n * @param {Object} def - def\n * @returns {boolean} should be statically\n */\nfunction shouldBeStatically(def) {\n    return (\n        (def.type === Variable.ClassName) ||\n        (def.type === Variable.Variable && def.parent.kind !== \"var\")\n    );\n}\n\n/**\n * @class Scope\n */\nclass Scope {\n    constructor(scopeManager, type, upperScope, block, isMethodDefinition) {\n\n        /**\n         * One of 'module', 'block', 'switch', 'function', 'catch', 'with', 'function', 'class', 'global'.\n         * @member {String} Scope#type\n         */\n        this.type = type;\n\n        /**\n         * The scoped {@link Variable}s of this scope, as <code>{ Variable.name\n         * : Variable }</code>.\n         * @member {Map} Scope#set\n         */\n        this.set = new Map();\n\n        /**\n         * The tainted variables of this scope, as <code>{ Variable.name :\n         * boolean }</code>.\n         * @member {Map} Scope#taints */\n        this.taints = new Map();\n\n        /**\n         * Generally, through the lexical scoping of JS you can always know\n         * which variable an identifier in the source code refers to. There are\n         * a few exceptions to this rule. With 'global' and 'with' scopes you\n         * can only decide at runtime which variable a reference refers to.\n         * Moreover, if 'eval()' is used in a scope, it might introduce new\n         * bindings in this or its parent scopes.\n         * All those scopes are considered 'dynamic'.\n         * @member {boolean} Scope#dynamic\n         */\n        this.dynamic = this.type === \"global\" || this.type === \"with\";\n\n        /**\n         * A reference to the scope-defining syntax node.\n         * @member {espree.Node} Scope#block\n         */\n        this.block = block;\n\n        /**\n         * The {@link Reference|references} that are not resolved with this scope.\n         * @member {Reference[]} Scope#through\n         */\n        this.through = [];\n\n        /**\n         * The scoped {@link Variable}s of this scope. In the case of a\n         * 'function' scope this includes the automatic argument <em>arguments</em> as\n         * its first element, as well as all further formal arguments.\n         * @member {Variable[]} Scope#variables\n         */\n        this.variables = [];\n\n        /**\n         * Any variable {@link Reference|reference} found in this scope. This\n         * includes occurrences of local variables as well as variables from\n         * parent scopes (including the global scope). For local variables\n         * this also includes defining occurrences (like in a 'var' statement).\n         * In a 'function' scope this does not include the occurrences of the\n         * formal parameter in the parameter list.\n         * @member {Reference[]} Scope#references\n         */\n        this.references = [];\n\n        /**\n         * For 'global' and 'function' scopes, this is a self-reference. For\n         * other scope types this is the <em>variableScope</em> value of the\n         * parent scope.\n         * @member {Scope} Scope#variableScope\n         */\n        this.variableScope =\n            (this.type === \"global\" || this.type === \"function\" || this.type === \"module\") ? this : upperScope.variableScope;\n\n        /**\n         * Whether this scope is created by a FunctionExpression.\n         * @member {boolean} Scope#functionExpressionScope\n         */\n        this.functionExpressionScope = false;\n\n        /**\n         * Whether this is a scope that contains an 'eval()' invocation.\n         * @member {boolean} Scope#directCallToEvalScope\n         */\n        this.directCallToEvalScope = false;\n\n        /**\n         * @member {boolean} Scope#thisFound\n         */\n        this.thisFound = false;\n\n        this.__left = [];\n\n        /**\n         * Reference to the parent {@link Scope|scope}.\n         * @member {Scope} Scope#upper\n         */\n        this.upper = upperScope;\n\n        /**\n         * Whether 'use strict' is in effect in this scope.\n         * @member {boolean} Scope#isStrict\n         */\n        this.isStrict = isStrictScope(this, block, isMethodDefinition, scopeManager.__useDirective());\n\n        /**\n         * List of nested {@link Scope}s.\n         * @member {Scope[]} Scope#childScopes\n         */\n        this.childScopes = [];\n        if (this.upper) {\n            this.upper.childScopes.push(this);\n        }\n\n        this.__declaredVariables = scopeManager.__declaredVariables;\n\n        registerScope(scopeManager, this);\n    }\n\n    __shouldStaticallyClose(scopeManager) {\n        return (!this.dynamic || scopeManager.__isOptimistic());\n    }\n\n    __shouldStaticallyCloseForGlobal(ref) {\n\n        // On global scope, let/const/class declarations should be resolved statically.\n        const name = ref.identifier.name;\n\n        if (!this.set.has(name)) {\n            return false;\n        }\n\n        const variable = this.set.get(name);\n        const defs = variable.defs;\n\n        return defs.length > 0 && defs.every(shouldBeStatically);\n    }\n\n    __staticCloseRef(ref) {\n        if (!this.__resolve(ref)) {\n            this.__delegateToUpperScope(ref);\n        }\n    }\n\n    __dynamicCloseRef(ref) {\n\n        // notify all names are through to global\n        let current = this;\n\n        do {\n            current.through.push(ref);\n            current = current.upper;\n        } while (current);\n    }\n\n    __globalCloseRef(ref) {\n\n        // let/const/class declarations should be resolved statically.\n        // others should be resolved dynamically.\n        if (this.__shouldStaticallyCloseForGlobal(ref)) {\n            this.__staticCloseRef(ref);\n        } else {\n            this.__dynamicCloseRef(ref);\n        }\n    }\n\n    __close(scopeManager) {\n        let closeRef;\n\n        if (this.__shouldStaticallyClose(scopeManager)) {\n            closeRef = this.__staticCloseRef;\n        } else if (this.type !== \"global\") {\n            closeRef = this.__dynamicCloseRef;\n        } else {\n            closeRef = this.__globalCloseRef;\n        }\n\n        // Try Resolving all references in this scope.\n        for (let i = 0, iz = this.__left.length; i < iz; ++i) {\n            const ref = this.__left[i];\n\n            closeRef.call(this, ref);\n        }\n        this.__left = null;\n\n        return this.upper;\n    }\n\n    // To override by function scopes.\n    // References in default parameters isn't resolved to variables which are in their function body.\n    __isValidResolution(ref, variable) { // eslint-disable-line class-methods-use-this, no-unused-vars\n        return true;\n    }\n\n    __resolve(ref) {\n        const name = ref.identifier.name;\n\n        if (!this.set.has(name)) {\n            return false;\n        }\n        const variable = this.set.get(name);\n\n        if (!this.__isValidResolution(ref, variable)) {\n            return false;\n        }\n        variable.references.push(ref);\n        variable.stack = variable.stack && ref.from.variableScope === this.variableScope;\n        if (ref.tainted) {\n            variable.tainted = true;\n            this.taints.set(variable.name, true);\n        }\n        ref.resolved = variable;\n\n        return true;\n    }\n\n    __delegateToUpperScope(ref) {\n        if (this.upper) {\n            this.upper.__left.push(ref);\n        }\n        this.through.push(ref);\n    }\n\n    __addDeclaredVariablesOfNode(variable, node) {\n        if (node === null || node === undefined) {\n            return;\n        }\n\n        let variables = this.__declaredVariables.get(node);\n\n        if (variables === null || variables === undefined) {\n            variables = [];\n            this.__declaredVariables.set(node, variables);\n        }\n        if (variables.indexOf(variable) === -1) {\n            variables.push(variable);\n        }\n    }\n\n    __defineGeneric(name, set, variables, node, def) {\n        let variable;\n\n        variable = set.get(name);\n        if (!variable) {\n            variable = new Variable(name, this);\n            set.set(name, variable);\n            variables.push(variable);\n        }\n\n        if (def) {\n            variable.defs.push(def);\n            this.__addDeclaredVariablesOfNode(variable, def.node);\n            this.__addDeclaredVariablesOfNode(variable, def.parent);\n        }\n        if (node) {\n            variable.identifiers.push(node);\n        }\n    }\n\n    __define(node, def) {\n        if (node && node.type === Syntax.Identifier) {\n            this.__defineGeneric(\n                node.name,\n                this.set,\n                this.variables,\n                node,\n                def\n            );\n        }\n    }\n\n    __referencing(node, assign, writeExpr, maybeImplicitGlobal, partial, init) {\n\n        // because Array element may be null\n        if (!node || node.type !== Syntax.Identifier) {\n            return;\n        }\n\n        // Specially handle like `this`.\n        if (node.name === \"super\") {\n            return;\n        }\n\n        const ref = new Reference(node, this, assign || Reference.READ, writeExpr, maybeImplicitGlobal, !!partial, !!init);\n\n        this.references.push(ref);\n        this.__left.push(ref);\n    }\n\n    __detectEval() {\n        let current = this;\n\n        this.directCallToEvalScope = true;\n        do {\n            current.dynamic = true;\n            current = current.upper;\n        } while (current);\n    }\n\n    __detectThis() {\n        this.thisFound = true;\n    }\n\n    __isClosed() {\n        return this.__left === null;\n    }\n\n    /**\n     * returns resolved {Reference}\n     * @method Scope#resolve\n     * @param {Espree.Identifier} ident - identifier to be resolved.\n     * @returns {Reference} reference\n     */\n    resolve(ident) {\n        let ref, i, iz;\n\n        assert(this.__isClosed(), \"Scope should be closed.\");\n        assert(ident.type === Syntax.Identifier, \"Target should be identifier.\");\n        for (i = 0, iz = this.references.length; i < iz; ++i) {\n            ref = this.references[i];\n            if (ref.identifier === ident) {\n                return ref;\n            }\n        }\n        return null;\n    }\n\n    /**\n     * returns this scope is static\n     * @method Scope#isStatic\n     * @returns {boolean} static\n     */\n    isStatic() {\n        return !this.dynamic;\n    }\n\n    /**\n     * returns this scope has materialized arguments\n     * @method Scope#isArgumentsMaterialized\n     * @returns {boolean} arguemnts materialized\n     */\n    isArgumentsMaterialized() { // eslint-disable-line class-methods-use-this\n        return true;\n    }\n\n    /**\n     * returns this scope has materialized `this` reference\n     * @method Scope#isThisMaterialized\n     * @returns {boolean} this materialized\n     */\n    isThisMaterialized() { // eslint-disable-line class-methods-use-this\n        return true;\n    }\n\n    isUsedName(name) {\n        if (this.set.has(name)) {\n            return true;\n        }\n        for (let i = 0, iz = this.through.length; i < iz; ++i) {\n            if (this.through[i].identifier.name === name) {\n                return true;\n            }\n        }\n        return false;\n    }\n}\n\nclass GlobalScope extends Scope {\n    constructor(scopeManager, block) {\n        super(scopeManager, \"global\", null, block, false);\n        this.implicit = {\n            set: new Map(),\n            variables: [],\n\n            /**\n            * List of {@link Reference}s that are left to be resolved (i.e. which\n            * need to be linked to the variable they refer to).\n            * @member {Reference[]} Scope#implicit#left\n            */\n            left: []\n        };\n    }\n\n    __close(scopeManager) {\n        const implicit = [];\n\n        for (let i = 0, iz = this.__left.length; i < iz; ++i) {\n            const ref = this.__left[i];\n\n            if (ref.__maybeImplicitGlobal && !this.set.has(ref.identifier.name)) {\n                implicit.push(ref.__maybeImplicitGlobal);\n            }\n        }\n\n        // create an implicit global variable from assignment expression\n        for (let i = 0, iz = implicit.length; i < iz; ++i) {\n            const info = implicit[i];\n\n            this.__defineImplicit(info.pattern,\n                new Definition(\n                    Variable.ImplicitGlobalVariable,\n                    info.pattern,\n                    info.node,\n                    null,\n                    null,\n                    null\n                ));\n\n        }\n\n        this.implicit.left = this.__left;\n\n        return super.__close(scopeManager);\n    }\n\n    __defineImplicit(node, def) {\n        if (node && node.type === Syntax.Identifier) {\n            this.__defineGeneric(\n                node.name,\n                this.implicit.set,\n                this.implicit.variables,\n                node,\n                def\n            );\n        }\n    }\n}\n\nclass ModuleScope extends Scope {\n    constructor(scopeManager, upperScope, block) {\n        super(scopeManager, \"module\", upperScope, block, false);\n    }\n}\n\nclass FunctionExpressionNameScope extends Scope {\n    constructor(scopeManager, upperScope, block) {\n        super(scopeManager, \"function-expression-name\", upperScope, block, false);\n        this.__define(block.id,\n            new Definition(\n                Variable.FunctionName,\n                block.id,\n                block,\n                null,\n                null,\n                null\n            ));\n        this.functionExpressionScope = true;\n    }\n}\n\nclass CatchScope extends Scope {\n    constructor(scopeManager, upperScope, block) {\n        super(scopeManager, \"catch\", upperScope, block, false);\n    }\n}\n\nclass WithScope extends Scope {\n    constructor(scopeManager, upperScope, block) {\n        super(scopeManager, \"with\", upperScope, block, false);\n    }\n\n    __close(scopeManager) {\n        if (this.__shouldStaticallyClose(scopeManager)) {\n            return super.__close(scopeManager);\n        }\n\n        for (let i = 0, iz = this.__left.length; i < iz; ++i) {\n            const ref = this.__left[i];\n\n            ref.tainted = true;\n            this.__delegateToUpperScope(ref);\n        }\n        this.__left = null;\n\n        return this.upper;\n    }\n}\n\nclass BlockScope extends Scope {\n    constructor(scopeManager, upperScope, block) {\n        super(scopeManager, \"block\", upperScope, block, false);\n    }\n}\n\nclass SwitchScope extends Scope {\n    constructor(scopeManager, upperScope, block) {\n        super(scopeManager, \"switch\", upperScope, block, false);\n    }\n}\n\nclass FunctionScope extends Scope {\n    constructor(scopeManager, upperScope, block, isMethodDefinition) {\n        super(scopeManager, \"function\", upperScope, block, isMethodDefinition);\n\n        // section 9.2.13, FunctionDeclarationInstantiation.\n        // NOTE Arrow functions never have an arguments objects.\n        if (this.block.type !== Syntax.ArrowFunctionExpression) {\n            this.__defineArguments();\n        }\n    }\n\n    isArgumentsMaterialized() {\n\n        // TODO(Constellation)\n        // We can more aggressive on this condition like this.\n        //\n        // function t() {\n        //     // arguments of t is always hidden.\n        //     function arguments() {\n        //     }\n        // }\n        if (this.block.type === Syntax.ArrowFunctionExpression) {\n            return false;\n        }\n\n        if (!this.isStatic()) {\n            return true;\n        }\n\n        const variable = this.set.get(\"arguments\");\n\n        assert(variable, \"Always have arguments variable.\");\n        return variable.tainted || variable.references.length !== 0;\n    }\n\n    isThisMaterialized() {\n        if (!this.isStatic()) {\n            return true;\n        }\n        return this.thisFound;\n    }\n\n    __defineArguments() {\n        this.__defineGeneric(\n            \"arguments\",\n            this.set,\n            this.variables,\n            null,\n            null\n        );\n        this.taints.set(\"arguments\", true);\n    }\n\n    // References in default parameters isn't resolved to variables which are in their function body.\n    //     const x = 1\n    //     function f(a = x) { // This `x` is resolved to the `x` in the outer scope.\n    //         const x = 2\n    //         console.log(a)\n    //     }\n    __isValidResolution(ref, variable) {\n\n        // If `options.nodejsScope` is true, `this.block` becomes a Program node.\n        if (this.block.type === \"Program\") {\n            return true;\n        }\n\n        const bodyStart = this.block.body.range[0];\n\n        // It's invalid resolution in the following case:\n        return !(\n            variable.scope === this &&\n            ref.identifier.range[0] < bodyStart && // the reference is in the parameter part.\n            variable.defs.every(d => d.name.range[0] >= bodyStart) // the variable is in the body.\n        );\n    }\n}\n\nclass ForScope extends Scope {\n    constructor(scopeManager, upperScope, block) {\n        super(scopeManager, \"for\", upperScope, block, false);\n    }\n}\n\nclass ClassScope extends Scope {\n    constructor(scopeManager, upperScope, block) {\n        super(scopeManager, \"class\", upperScope, block, false);\n    }\n}\n\nmodule.exports = {\n    Scope,\n    GlobalScope,\n    ModuleScope,\n    FunctionExpressionNameScope,\n    CatchScope,\n    WithScope,\n    BlockScope,\n    SwitchScope,\n    FunctionScope,\n    ForScope,\n    ClassScope\n};\n\n/* vim: set sw=4 ts=4 et tw=80 : */\n", "/*\n  Copyright (C) 2015 Yusuke Suzuki <utatane.tea@gmail.com>\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\"use strict\";\n\n/* eslint-disable no-underscore-dangle */\n\nconst Scope = require(\"./scope\");\nconst assert = require(\"assert\");\n\nconst GlobalScope = Scope.GlobalScope;\nconst CatchScope = Scope.CatchScope;\nconst WithScope = Scope.WithScope;\nconst ModuleScope = Scope.ModuleScope;\nconst ClassScope = Scope.ClassScope;\nconst SwitchScope = Scope.SwitchScope;\nconst FunctionScope = Scope.FunctionScope;\nconst ForScope = Scope.ForScope;\nconst FunctionExpressionNameScope = Scope.FunctionExpressionNameScope;\nconst BlockScope = Scope.BlockScope;\n\n/**\n * @class ScopeManager\n */\nclass ScopeManager {\n    constructor(options) {\n        this.scopes = [];\n        this.globalScope = null;\n        this.__nodeToScope = new WeakMap();\n        this.__currentScope = null;\n        this.__options = options;\n        this.__declaredVariables = new WeakMap();\n    }\n\n    __useDirective() {\n        return this.__options.directive;\n    }\n\n    __isOptimistic() {\n        return this.__options.optimistic;\n    }\n\n    __ignoreEval() {\n        return this.__options.ignoreEval;\n    }\n\n    __isNodejsScope() {\n        return this.__options.nodejsScope;\n    }\n\n    isModule() {\n        return this.__options.sourceType === \"module\";\n    }\n\n    isImpliedStrict() {\n        return this.__options.impliedStrict;\n    }\n\n    isStrictModeSupported() {\n        return this.__options.ecmaVersion >= 5;\n    }\n\n    // Returns appropriate scope for this node.\n    __get(node) {\n        return this.__nodeToScope.get(node);\n    }\n\n    /**\n     * Get variables that are declared by the node.\n     *\n     * \"are declared by the node\" means the node is same as `Variable.defs[].node` or `Variable.defs[].parent`.\n     * If the node declares nothing, this method returns an empty array.\n     * CAUTION: This API is experimental. See https://github.com/estools/escope/pull/69 for more details.\n     *\n     * @param {Espree.Node} node - a node to get.\n     * @returns {Variable[]} variables that declared by the node.\n     */\n    getDeclaredVariables(node) {\n        return this.__declaredVariables.get(node) || [];\n    }\n\n    /**\n     * acquire scope from node.\n     * @method ScopeManager#acquire\n     * @param {Espree.Node} node - node for the acquired scope.\n     * @param {boolean=} inner - look up the most inner scope, default value is false.\n     * @returns {Scope?} Scope from node\n     */\n    acquire(node, inner) {\n\n        /**\n         * predicate\n         * @param {Scope} testScope - scope to test\n         * @returns {boolean} predicate\n         */\n        function predicate(testScope) {\n            if (testScope.type === \"function\" && testScope.functionExpressionScope) {\n                return false;\n            }\n            return true;\n        }\n\n        const scopes = this.__get(node);\n\n        if (!scopes || scopes.length === 0) {\n            return null;\n        }\n\n        // Heuristic selection from all scopes.\n        // If you would like to get all scopes, please use ScopeManager#acquireAll.\n        if (scopes.length === 1) {\n            return scopes[0];\n        }\n\n        if (inner) {\n            for (let i = scopes.length - 1; i >= 0; --i) {\n                const scope = scopes[i];\n\n                if (predicate(scope)) {\n                    return scope;\n                }\n            }\n        } else {\n            for (let i = 0, iz = scopes.length; i < iz; ++i) {\n                const scope = scopes[i];\n\n                if (predicate(scope)) {\n                    return scope;\n                }\n            }\n        }\n\n        return null;\n    }\n\n    /**\n     * acquire all scopes from node.\n     * @method ScopeManager#acquireAll\n     * @param {Espree.Node} node - node for the acquired scope.\n     * @returns {Scopes?} Scope array\n     */\n    acquireAll(node) {\n        return this.__get(node);\n    }\n\n    /**\n     * release the node.\n     * @method ScopeManager#release\n     * @param {Espree.Node} node - releasing node.\n     * @param {boolean=} inner - look up the most inner scope, default value is false.\n     * @returns {Scope?} upper scope for the node.\n     */\n    release(node, inner) {\n        const scopes = this.__get(node);\n\n        if (scopes && scopes.length) {\n            const scope = scopes[0].upper;\n\n            if (!scope) {\n                return null;\n            }\n            return this.acquire(scope.block, inner);\n        }\n        return null;\n    }\n\n    attach() { } // eslint-disable-line class-methods-use-this\n\n    detach() { } // eslint-disable-line class-methods-use-this\n\n    __nestScope(scope) {\n        if (scope instanceof GlobalScope) {\n            assert(this.__currentScope === null);\n            this.globalScope = scope;\n        }\n        this.__currentScope = scope;\n        return scope;\n    }\n\n    __nestGlobalScope(node) {\n        return this.__nestScope(new GlobalScope(this, node));\n    }\n\n    __nestBlockScope(node) {\n        return this.__nestScope(new BlockScope(this, this.__currentScope, node));\n    }\n\n    __nestFunctionScope(node, isMethodDefinition) {\n        return this.__nestScope(new FunctionScope(this, this.__currentScope, node, isMethodDefinition));\n    }\n\n    __nestForScope(node) {\n        return this.__nestScope(new ForScope(this, this.__currentScope, node));\n    }\n\n    __nestCatchScope(node) {\n        return this.__nestScope(new CatchScope(this, this.__currentScope, node));\n    }\n\n    __nestWithScope(node) {\n        return this.__nestScope(new WithScope(this, this.__currentScope, node));\n    }\n\n    __nestClassScope(node) {\n        return this.__nestScope(new ClassScope(this, this.__currentScope, node));\n    }\n\n    __nestSwitchScope(node) {\n        return this.__nestScope(new SwitchScope(this, this.__currentScope, node));\n    }\n\n    __nestModuleScope(node) {\n        return this.__nestScope(new ModuleScope(this, this.__currentScope, node));\n    }\n\n    __nestFunctionExpressionNameScope(node) {\n        return this.__nestScope(new FunctionExpressionNameScope(this, this.__currentScope, node));\n    }\n\n    __isES6() {\n        return this.__options.ecmaVersion >= 6;\n    }\n}\n\nmodule.exports = ScopeManager;\n\n/* vim: set sw=4 ts=4 et tw=80 : */\n", "/*\n  Copyright (C) 2012-2013 Yusuke Suzuki <utatane.tea@gmail.com>\n  Copyright (C) 2012 Ariya Hidayat <ariya.hidayat@gmail.com>\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n/*jslint vars:false, bitwise:true*/\n/*jshint indent:4*/\n/*global exports:true*/\n(function clone(exports) {\n    'use strict';\n\n    var Syntax,\n        VisitorOption,\n        VisitorKeys,\n        BREAK,\n        SKIP,\n        REMOVE;\n\n    function deepCopy(obj) {\n        var ret = {}, key, val;\n        for (key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                val = obj[key];\n                if (typeof val === 'object' && val !== null) {\n                    ret[key] = deepCopy(val);\n                } else {\n                    ret[key] = val;\n                }\n            }\n        }\n        return ret;\n    }\n\n    // based on LLVM libc++ upper_bound / lower_bound\n    // MIT License\n\n    function upperBound(array, func) {\n        var diff, len, i, current;\n\n        len = array.length;\n        i = 0;\n\n        while (len) {\n            diff = len >>> 1;\n            current = i + diff;\n            if (func(array[current])) {\n                len = diff;\n            } else {\n                i = current + 1;\n                len -= diff + 1;\n            }\n        }\n        return i;\n    }\n\n    Syntax = {\n        AssignmentExpression: 'AssignmentExpression',\n        AssignmentPattern: 'AssignmentPattern',\n        ArrayExpression: 'ArrayExpression',\n        ArrayPattern: 'ArrayPattern',\n        ArrowFunctionExpression: 'ArrowFunctionExpression',\n        AwaitExpression: 'AwaitExpression', // CAUTION: It's deferred to ES7.\n        BlockStatement: 'BlockStatement',\n        BinaryExpression: 'BinaryExpression',\n        BreakStatement: 'BreakStatement',\n        CallExpression: 'CallExpression',\n        CatchClause: 'CatchClause',\n        ChainExpression: 'ChainExpression',\n        ClassBody: 'ClassBody',\n        ClassDeclaration: 'ClassDeclaration',\n        ClassExpression: 'ClassExpression',\n        ComprehensionBlock: 'ComprehensionBlock',  // CAUTION: It's deferred to ES7.\n        ComprehensionExpression: 'ComprehensionExpression',  // CAUTION: It's deferred to ES7.\n        ConditionalExpression: 'ConditionalExpression',\n        ContinueStatement: 'ContinueStatement',\n        DebuggerStatement: 'DebuggerStatement',\n        DirectiveStatement: 'DirectiveStatement',\n        DoWhileStatement: 'DoWhileStatement',\n        EmptyStatement: 'EmptyStatement',\n        ExportAllDeclaration: 'ExportAllDeclaration',\n        ExportDefaultDeclaration: 'ExportDefaultDeclaration',\n        ExportNamedDeclaration: 'ExportNamedDeclaration',\n        ExportSpecifier: 'ExportSpecifier',\n        ExpressionStatement: 'ExpressionStatement',\n        ForStatement: 'ForStatement',\n        ForInStatement: 'ForInStatement',\n        ForOfStatement: 'ForOfStatement',\n        FunctionDeclaration: 'FunctionDeclaration',\n        FunctionExpression: 'FunctionExpression',\n        GeneratorExpression: 'GeneratorExpression',  // CAUTION: It's deferred to ES7.\n        Identifier: 'Identifier',\n        IfStatement: 'IfStatement',\n        ImportExpression: 'ImportExpression',\n        ImportDeclaration: 'ImportDeclaration',\n        ImportDefaultSpecifier: 'ImportDefaultSpecifier',\n        ImportNamespaceSpecifier: 'ImportNamespaceSpecifier',\n        ImportSpecifier: 'ImportSpecifier',\n        Literal: 'Literal',\n        LabeledStatement: 'LabeledStatement',\n        LogicalExpression: 'LogicalExpression',\n        MemberExpression: 'MemberExpression',\n        MetaProperty: 'MetaProperty',\n        MethodDefinition: 'MethodDefinition',\n        ModuleSpecifier: 'ModuleSpecifier',\n        NewExpression: 'NewExpression',\n        ObjectExpression: 'ObjectExpression',\n        ObjectPattern: 'ObjectPattern',\n        Program: 'Program',\n        Property: 'Property',\n        RestElement: 'RestElement',\n        ReturnStatement: 'ReturnStatement',\n        SequenceExpression: 'SequenceExpression',\n        SpreadElement: 'SpreadElement',\n        Super: 'Super',\n        SwitchStatement: 'SwitchStatement',\n        SwitchCase: 'SwitchCase',\n        TaggedTemplateExpression: 'TaggedTemplateExpression',\n        TemplateElement: 'TemplateElement',\n        TemplateLiteral: 'TemplateLiteral',\n        ThisExpression: 'ThisExpression',\n        ThrowStatement: 'ThrowStatement',\n        TryStatement: 'TryStatement',\n        UnaryExpression: 'UnaryExpression',\n        UpdateExpression: 'UpdateExpression',\n        VariableDeclaration: 'VariableDeclaration',\n        VariableDeclarator: 'VariableDeclarator',\n        WhileStatement: 'WhileStatement',\n        WithStatement: 'WithStatement',\n        YieldExpression: 'YieldExpression'\n    };\n\n    VisitorKeys = {\n        AssignmentExpression: ['left', 'right'],\n        AssignmentPattern: ['left', 'right'],\n        ArrayExpression: ['elements'],\n        ArrayPattern: ['elements'],\n        ArrowFunctionExpression: ['params', 'body'],\n        AwaitExpression: ['argument'], // CAUTION: It's deferred to ES7.\n        BlockStatement: ['body'],\n        BinaryExpression: ['left', 'right'],\n        BreakStatement: ['label'],\n        CallExpression: ['callee', 'arguments'],\n        CatchClause: ['param', 'body'],\n        ChainExpression: ['expression'],\n        ClassBody: ['body'],\n        ClassDeclaration: ['id', 'superClass', 'body'],\n        ClassExpression: ['id', 'superClass', 'body'],\n        ComprehensionBlock: ['left', 'right'],  // CAUTION: It's deferred to ES7.\n        ComprehensionExpression: ['blocks', 'filter', 'body'],  // CAUTION: It's deferred to ES7.\n        ConditionalExpression: ['test', 'consequent', 'alternate'],\n        ContinueStatement: ['label'],\n        DebuggerStatement: [],\n        DirectiveStatement: [],\n        DoWhileStatement: ['body', 'test'],\n        EmptyStatement: [],\n        ExportAllDeclaration: ['source'],\n        ExportDefaultDeclaration: ['declaration'],\n        ExportNamedDeclaration: ['declaration', 'specifiers', 'source'],\n        ExportSpecifier: ['exported', 'local'],\n        ExpressionStatement: ['expression'],\n        ForStatement: ['init', 'test', 'update', 'body'],\n        ForInStatement: ['left', 'right', 'body'],\n        ForOfStatement: ['left', 'right', 'body'],\n        FunctionDeclaration: ['id', 'params', 'body'],\n        FunctionExpression: ['id', 'params', 'body'],\n        GeneratorExpression: ['blocks', 'filter', 'body'],  // CAUTION: It's deferred to ES7.\n        Identifier: [],\n        IfStatement: ['test', 'consequent', 'alternate'],\n        ImportExpression: ['source'],\n        ImportDeclaration: ['specifiers', 'source'],\n        ImportDefaultSpecifier: ['local'],\n        ImportNamespaceSpecifier: ['local'],\n        ImportSpecifier: ['imported', 'local'],\n        Literal: [],\n        LabeledStatement: ['label', 'body'],\n        LogicalExpression: ['left', 'right'],\n        MemberExpression: ['object', 'property'],\n        MetaProperty: ['meta', 'property'],\n        MethodDefinition: ['key', 'value'],\n        ModuleSpecifier: [],\n        NewExpression: ['callee', 'arguments'],\n        ObjectExpression: ['properties'],\n        ObjectPattern: ['properties'],\n        Program: ['body'],\n        Property: ['key', 'value'],\n        RestElement: [ 'argument' ],\n        ReturnStatement: ['argument'],\n        SequenceExpression: ['expressions'],\n        SpreadElement: ['argument'],\n        Super: [],\n        SwitchStatement: ['discriminant', 'cases'],\n        SwitchCase: ['test', 'consequent'],\n        TaggedTemplateExpression: ['tag', 'quasi'],\n        TemplateElement: [],\n        TemplateLiteral: ['quasis', 'expressions'],\n        ThisExpression: [],\n        ThrowStatement: ['argument'],\n        TryStatement: ['block', 'handler', 'finalizer'],\n        UnaryExpression: ['argument'],\n        UpdateExpression: ['argument'],\n        VariableDeclaration: ['declarations'],\n        VariableDeclarator: ['id', 'init'],\n        WhileStatement: ['test', 'body'],\n        WithStatement: ['object', 'body'],\n        YieldExpression: ['argument']\n    };\n\n    // unique id\n    BREAK = {};\n    SKIP = {};\n    REMOVE = {};\n\n    VisitorOption = {\n        Break: BREAK,\n        Skip: SKIP,\n        Remove: REMOVE\n    };\n\n    function Reference(parent, key) {\n        this.parent = parent;\n        this.key = key;\n    }\n\n    Reference.prototype.replace = function replace(node) {\n        this.parent[this.key] = node;\n    };\n\n    Reference.prototype.remove = function remove() {\n        if (Array.isArray(this.parent)) {\n            this.parent.splice(this.key, 1);\n            return true;\n        } else {\n            this.replace(null);\n            return false;\n        }\n    };\n\n    function Element(node, path, wrap, ref) {\n        this.node = node;\n        this.path = path;\n        this.wrap = wrap;\n        this.ref = ref;\n    }\n\n    function Controller() { }\n\n    // API:\n    // return property path array from root to current node\n    Controller.prototype.path = function path() {\n        var i, iz, j, jz, result, element;\n\n        function addToPath(result, path) {\n            if (Array.isArray(path)) {\n                for (j = 0, jz = path.length; j < jz; ++j) {\n                    result.push(path[j]);\n                }\n            } else {\n                result.push(path);\n            }\n        }\n\n        // root node\n        if (!this.__current.path) {\n            return null;\n        }\n\n        // first node is sentinel, second node is root element\n        result = [];\n        for (i = 2, iz = this.__leavelist.length; i < iz; ++i) {\n            element = this.__leavelist[i];\n            addToPath(result, element.path);\n        }\n        addToPath(result, this.__current.path);\n        return result;\n    };\n\n    // API:\n    // return type of current node\n    Controller.prototype.type = function () {\n        var node = this.current();\n        return node.type || this.__current.wrap;\n    };\n\n    // API:\n    // return array of parent elements\n    Controller.prototype.parents = function parents() {\n        var i, iz, result;\n\n        // first node is sentinel\n        result = [];\n        for (i = 1, iz = this.__leavelist.length; i < iz; ++i) {\n            result.push(this.__leavelist[i].node);\n        }\n\n        return result;\n    };\n\n    // API:\n    // return current node\n    Controller.prototype.current = function current() {\n        return this.__current.node;\n    };\n\n    Controller.prototype.__execute = function __execute(callback, element) {\n        var previous, result;\n\n        result = undefined;\n\n        previous  = this.__current;\n        this.__current = element;\n        this.__state = null;\n        if (callback) {\n            result = callback.call(this, element.node, this.__leavelist[this.__leavelist.length - 1].node);\n        }\n        this.__current = previous;\n\n        return result;\n    };\n\n    // API:\n    // notify control skip / break\n    Controller.prototype.notify = function notify(flag) {\n        this.__state = flag;\n    };\n\n    // API:\n    // skip child nodes of current node\n    Controller.prototype.skip = function () {\n        this.notify(SKIP);\n    };\n\n    // API:\n    // break traversals\n    Controller.prototype['break'] = function () {\n        this.notify(BREAK);\n    };\n\n    // API:\n    // remove node\n    Controller.prototype.remove = function () {\n        this.notify(REMOVE);\n    };\n\n    Controller.prototype.__initialize = function(root, visitor) {\n        this.visitor = visitor;\n        this.root = root;\n        this.__worklist = [];\n        this.__leavelist = [];\n        this.__current = null;\n        this.__state = null;\n        this.__fallback = null;\n        if (visitor.fallback === 'iteration') {\n            this.__fallback = Object.keys;\n        } else if (typeof visitor.fallback === 'function') {\n            this.__fallback = visitor.fallback;\n        }\n\n        this.__keys = VisitorKeys;\n        if (visitor.keys) {\n            this.__keys = Object.assign(Object.create(this.__keys), visitor.keys);\n        }\n    };\n\n    function isNode(node) {\n        if (node == null) {\n            return false;\n        }\n        return typeof node === 'object' && typeof node.type === 'string';\n    }\n\n    function isProperty(nodeType, key) {\n        return (nodeType === Syntax.ObjectExpression || nodeType === Syntax.ObjectPattern) && 'properties' === key;\n    }\n  \n    function candidateExistsInLeaveList(leavelist, candidate) {\n        for (var i = leavelist.length - 1; i >= 0; --i) {\n            if (leavelist[i].node === candidate) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    Controller.prototype.traverse = function traverse(root, visitor) {\n        var worklist,\n            leavelist,\n            element,\n            node,\n            nodeType,\n            ret,\n            key,\n            current,\n            current2,\n            candidates,\n            candidate,\n            sentinel;\n\n        this.__initialize(root, visitor);\n\n        sentinel = {};\n\n        // reference\n        worklist = this.__worklist;\n        leavelist = this.__leavelist;\n\n        // initialize\n        worklist.push(new Element(root, null, null, null));\n        leavelist.push(new Element(null, null, null, null));\n\n        while (worklist.length) {\n            element = worklist.pop();\n\n            if (element === sentinel) {\n                element = leavelist.pop();\n\n                ret = this.__execute(visitor.leave, element);\n\n                if (this.__state === BREAK || ret === BREAK) {\n                    return;\n                }\n                continue;\n            }\n\n            if (element.node) {\n\n                ret = this.__execute(visitor.enter, element);\n\n                if (this.__state === BREAK || ret === BREAK) {\n                    return;\n                }\n\n                worklist.push(sentinel);\n                leavelist.push(element);\n\n                if (this.__state === SKIP || ret === SKIP) {\n                    continue;\n                }\n\n                node = element.node;\n                nodeType = node.type || element.wrap;\n                candidates = this.__keys[nodeType];\n                if (!candidates) {\n                    if (this.__fallback) {\n                        candidates = this.__fallback(node);\n                    } else {\n                        throw new Error('Unknown node type ' + nodeType + '.');\n                    }\n                }\n\n                current = candidates.length;\n                while ((current -= 1) >= 0) {\n                    key = candidates[current];\n                    candidate = node[key];\n                    if (!candidate) {\n                        continue;\n                    }\n\n                    if (Array.isArray(candidate)) {\n                        current2 = candidate.length;\n                        while ((current2 -= 1) >= 0) {\n                            if (!candidate[current2]) {\n                                continue;\n                            }\n\n                            if (candidateExistsInLeaveList(leavelist, candidate[current2])) {\n                              continue;\n                            }\n\n                            if (isProperty(nodeType, candidates[current])) {\n                                element = new Element(candidate[current2], [key, current2], 'Property', null);\n                            } else if (isNode(candidate[current2])) {\n                                element = new Element(candidate[current2], [key, current2], null, null);\n                            } else {\n                                continue;\n                            }\n                            worklist.push(element);\n                        }\n                    } else if (isNode(candidate)) {\n                        if (candidateExistsInLeaveList(leavelist, candidate)) {\n                          continue;\n                        }\n\n                        worklist.push(new Element(candidate, key, null, null));\n                    }\n                }\n            }\n        }\n    };\n\n    Controller.prototype.replace = function replace(root, visitor) {\n        var worklist,\n            leavelist,\n            node,\n            nodeType,\n            target,\n            element,\n            current,\n            current2,\n            candidates,\n            candidate,\n            sentinel,\n            outer,\n            key;\n\n        function removeElem(element) {\n            var i,\n                key,\n                nextElem,\n                parent;\n\n            if (element.ref.remove()) {\n                // When the reference is an element of an array.\n                key = element.ref.key;\n                parent = element.ref.parent;\n\n                // If removed from array, then decrease following items' keys.\n                i = worklist.length;\n                while (i--) {\n                    nextElem = worklist[i];\n                    if (nextElem.ref && nextElem.ref.parent === parent) {\n                        if  (nextElem.ref.key < key) {\n                            break;\n                        }\n                        --nextElem.ref.key;\n                    }\n                }\n            }\n        }\n\n        this.__initialize(root, visitor);\n\n        sentinel = {};\n\n        // reference\n        worklist = this.__worklist;\n        leavelist = this.__leavelist;\n\n        // initialize\n        outer = {\n            root: root\n        };\n        element = new Element(root, null, null, new Reference(outer, 'root'));\n        worklist.push(element);\n        leavelist.push(element);\n\n        while (worklist.length) {\n            element = worklist.pop();\n\n            if (element === sentinel) {\n                element = leavelist.pop();\n\n                target = this.__execute(visitor.leave, element);\n\n                // node may be replaced with null,\n                // so distinguish between undefined and null in this place\n                if (target !== undefined && target !== BREAK && target !== SKIP && target !== REMOVE) {\n                    // replace\n                    element.ref.replace(target);\n                }\n\n                if (this.__state === REMOVE || target === REMOVE) {\n                    removeElem(element);\n                }\n\n                if (this.__state === BREAK || target === BREAK) {\n                    return outer.root;\n                }\n                continue;\n            }\n\n            target = this.__execute(visitor.enter, element);\n\n            // node may be replaced with null,\n            // so distinguish between undefined and null in this place\n            if (target !== undefined && target !== BREAK && target !== SKIP && target !== REMOVE) {\n                // replace\n                element.ref.replace(target);\n                element.node = target;\n            }\n\n            if (this.__state === REMOVE || target === REMOVE) {\n                removeElem(element);\n                element.node = null;\n            }\n\n            if (this.__state === BREAK || target === BREAK) {\n                return outer.root;\n            }\n\n            // node may be null\n            node = element.node;\n            if (!node) {\n                continue;\n            }\n\n            worklist.push(sentinel);\n            leavelist.push(element);\n\n            if (this.__state === SKIP || target === SKIP) {\n                continue;\n            }\n\n            nodeType = node.type || element.wrap;\n            candidates = this.__keys[nodeType];\n            if (!candidates) {\n                if (this.__fallback) {\n                    candidates = this.__fallback(node);\n                } else {\n                    throw new Error('Unknown node type ' + nodeType + '.');\n                }\n            }\n\n            current = candidates.length;\n            while ((current -= 1) >= 0) {\n                key = candidates[current];\n                candidate = node[key];\n                if (!candidate) {\n                    continue;\n                }\n\n                if (Array.isArray(candidate)) {\n                    current2 = candidate.length;\n                    while ((current2 -= 1) >= 0) {\n                        if (!candidate[current2]) {\n                            continue;\n                        }\n                        if (isProperty(nodeType, candidates[current])) {\n                            element = new Element(candidate[current2], [key, current2], 'Property', new Reference(candidate, current2));\n                        } else if (isNode(candidate[current2])) {\n                            element = new Element(candidate[current2], [key, current2], null, new Reference(candidate, current2));\n                        } else {\n                            continue;\n                        }\n                        worklist.push(element);\n                    }\n                } else if (isNode(candidate)) {\n                    worklist.push(new Element(candidate, key, null, new Reference(node, key)));\n                }\n            }\n        }\n\n        return outer.root;\n    };\n\n    function traverse(root, visitor) {\n        var controller = new Controller();\n        return controller.traverse(root, visitor);\n    }\n\n    function replace(root, visitor) {\n        var controller = new Controller();\n        return controller.replace(root, visitor);\n    }\n\n    function extendCommentRange(comment, tokens) {\n        var target;\n\n        target = upperBound(tokens, function search(token) {\n            return token.range[0] > comment.range[0];\n        });\n\n        comment.extendedRange = [comment.range[0], comment.range[1]];\n\n        if (target !== tokens.length) {\n            comment.extendedRange[1] = tokens[target].range[0];\n        }\n\n        target -= 1;\n        if (target >= 0) {\n            comment.extendedRange[0] = tokens[target].range[1];\n        }\n\n        return comment;\n    }\n\n    function attachComments(tree, providedComments, tokens) {\n        // At first, we should calculate extended comment ranges.\n        var comments = [], comment, len, i, cursor;\n\n        if (!tree.range) {\n            throw new Error('attachComments needs range information');\n        }\n\n        // tokens array is empty, we attach comments to tree as 'leadingComments'\n        if (!tokens.length) {\n            if (providedComments.length) {\n                for (i = 0, len = providedComments.length; i < len; i += 1) {\n                    comment = deepCopy(providedComments[i]);\n                    comment.extendedRange = [0, tree.range[0]];\n                    comments.push(comment);\n                }\n                tree.leadingComments = comments;\n            }\n            return tree;\n        }\n\n        for (i = 0, len = providedComments.length; i < len; i += 1) {\n            comments.push(extendCommentRange(deepCopy(providedComments[i]), tokens));\n        }\n\n        // This is based on John Freeman's implementation.\n        cursor = 0;\n        traverse(tree, {\n            enter: function (node) {\n                var comment;\n\n                while (cursor < comments.length) {\n                    comment = comments[cursor];\n                    if (comment.extendedRange[1] > node.range[0]) {\n                        break;\n                    }\n\n                    if (comment.extendedRange[1] === node.range[0]) {\n                        if (!node.leadingComments) {\n                            node.leadingComments = [];\n                        }\n                        node.leadingComments.push(comment);\n                        comments.splice(cursor, 1);\n                    } else {\n                        cursor += 1;\n                    }\n                }\n\n                // already out of owned node\n                if (cursor === comments.length) {\n                    return VisitorOption.Break;\n                }\n\n                if (comments[cursor].extendedRange[0] > node.range[1]) {\n                    return VisitorOption.Skip;\n                }\n            }\n        });\n\n        cursor = 0;\n        traverse(tree, {\n            leave: function (node) {\n                var comment;\n\n                while (cursor < comments.length) {\n                    comment = comments[cursor];\n                    if (node.range[1] < comment.extendedRange[0]) {\n                        break;\n                    }\n\n                    if (node.range[1] === comment.extendedRange[0]) {\n                        if (!node.trailingComments) {\n                            node.trailingComments = [];\n                        }\n                        node.trailingComments.push(comment);\n                        comments.splice(cursor, 1);\n                    } else {\n                        cursor += 1;\n                    }\n                }\n\n                // already out of owned node\n                if (cursor === comments.length) {\n                    return VisitorOption.Break;\n                }\n\n                if (comments[cursor].extendedRange[0] > node.range[1]) {\n                    return VisitorOption.Skip;\n                }\n            }\n        });\n\n        return tree;\n    }\n\n    exports.Syntax = Syntax;\n    exports.traverse = traverse;\n    exports.replace = replace;\n    exports.attachComments = attachComments;\n    exports.VisitorKeys = VisitorKeys;\n    exports.VisitorOption = VisitorOption;\n    exports.Controller = Controller;\n    exports.cloneEnvironment = function () { return clone({}); };\n\n    return exports;\n}(exports));\n/* vim: set sw=4 ts=4 et tw=80 : */\n", "/*\n  Copyright (C) 2014 Yusuke Suzuki <utatane.tea@gmail.com>\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n(function () {\n    'use strict';\n\n    var estraverse = require('estraverse');\n\n    function isNode(node) {\n        if (node == null) {\n            return false;\n        }\n        return typeof node === 'object' && typeof node.type === 'string';\n    }\n\n    function isProperty(nodeType, key) {\n        return (nodeType === estraverse.Syntax.ObjectExpression || nodeType === estraverse.Syntax.ObjectPattern) && key === 'properties';\n    }\n\n    function Visitor(visitor, options) {\n        options = options || {};\n\n        this.__visitor = visitor ||  this;\n        this.__childVisitorKeys = options.childVisitorKeys\n            ? Object.assign({}, estraverse.VisitorKeys, options.childVisitorKeys)\n            : estraverse.VisitorKeys;\n        if (options.fallback === 'iteration') {\n            this.__fallback = Object.keys;\n        } else if (typeof options.fallback === 'function') {\n            this.__fallback = options.fallback;\n        }\n    }\n\n    /* Default method for visiting children.\n     * When you need to call default visiting operation inside custom visiting\n     * operation, you can use it with `this.visitChildren(node)`.\n     */\n    Visitor.prototype.visitChildren = function (node) {\n        var type, children, i, iz, j, jz, child;\n\n        if (node == null) {\n            return;\n        }\n\n        type = node.type || estraverse.Syntax.Property;\n\n        children = this.__childVisitorKeys[type];\n        if (!children) {\n            if (this.__fallback) {\n                children = this.__fallback(node);\n            } else {\n                throw new Error('Unknown node type ' + type + '.');\n            }\n        }\n\n        for (i = 0, iz = children.length; i < iz; ++i) {\n            child = node[children[i]];\n            if (child) {\n                if (Array.isArray(child)) {\n                    for (j = 0, jz = child.length; j < jz; ++j) {\n                        if (child[j]) {\n                            if (isNode(child[j]) || isProperty(type, children[i])) {\n                                this.visit(child[j]);\n                            }\n                        }\n                    }\n                } else if (isNode(child)) {\n                    this.visit(child);\n                }\n            }\n        }\n    };\n\n    /* Dispatching node. */\n    Visitor.prototype.visit = function (node) {\n        var type;\n\n        if (node == null) {\n            return;\n        }\n\n        type = node.type || estraverse.Syntax.Property;\n        if (this.__visitor[type]) {\n            this.__visitor[type].call(this, node);\n            return;\n        }\n        this.visitChildren(node);\n    };\n\n    exports.version = require('./package.json').version;\n    exports.Visitor = Visitor;\n    exports.visit = function (node, visitor, options) {\n        var v = new Visitor(visitor, options);\n        v.visit(node);\n    };\n}());\n/* vim: set sw=4 ts=4 et tw=80 : */\n", "/*\n  Copyright (C) 2015 Yusuke Suzuki <utatane.tea@gmail.com>\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\"use strict\";\n\n/* eslint-disable no-undefined */\n\nconst Syntax = require(\"estraverse\").Syntax;\nconst esrecurse = require(\"esrecurse\");\n\n/**\n * Get last array element\n * @param {array} xs - array\n * @returns {any} Last elment\n */\nfunction getLast(xs) {\n    return xs[xs.length - 1] || null;\n}\n\nclass PatternVisitor extends esrecurse.Visitor {\n    static isPattern(node) {\n        const nodeType = node.type;\n\n        return (\n            nodeType === Syntax.Identifier ||\n            nodeType === Syntax.ObjectPattern ||\n            nodeType === Syntax.ArrayPattern ||\n            nodeType === Syntax.SpreadElement ||\n            nodeType === Syntax.RestElement ||\n            nodeType === Syntax.AssignmentPattern\n        );\n    }\n\n    constructor(options, rootPattern, callback) {\n        super(null, options);\n        this.rootPattern = rootPattern;\n        this.callback = callback;\n        this.assignments = [];\n        this.rightHandNodes = [];\n        this.restElements = [];\n    }\n\n    Identifier(pattern) {\n        const lastRestElement = getLast(this.restElements);\n\n        this.callback(pattern, {\n            topLevel: pattern === this.rootPattern,\n            rest: lastRestElement !== null && lastRestElement !== undefined && lastRestElement.argument === pattern,\n            assignments: this.assignments\n        });\n    }\n\n    Property(property) {\n\n        // Computed property's key is a right hand node.\n        if (property.computed) {\n            this.rightHandNodes.push(property.key);\n        }\n\n        // If it's shorthand, its key is same as its value.\n        // If it's shorthand and has its default value, its key is same as its value.left (the value is AssignmentPattern).\n        // If it's not shorthand, the name of new variable is its value's.\n        this.visit(property.value);\n    }\n\n    ArrayPattern(pattern) {\n        for (let i = 0, iz = pattern.elements.length; i < iz; ++i) {\n            const element = pattern.elements[i];\n\n            this.visit(element);\n        }\n    }\n\n    AssignmentPattern(pattern) {\n        this.assignments.push(pattern);\n        this.visit(pattern.left);\n        this.rightHandNodes.push(pattern.right);\n        this.assignments.pop();\n    }\n\n    RestElement(pattern) {\n        this.restElements.push(pattern);\n        this.visit(pattern.argument);\n        this.restElements.pop();\n    }\n\n    MemberExpression(node) {\n\n        // Computed property's key is a right hand node.\n        if (node.computed) {\n            this.rightHandNodes.push(node.property);\n        }\n\n        // the object is only read, write to its property.\n        this.rightHandNodes.push(node.object);\n    }\n\n    //\n    // ForInStatement.left and AssignmentExpression.left are LeftHandSideExpression.\n    // By spec, LeftHandSideExpression is Pattern or MemberExpression.\n    //   (see also: https://github.com/estree/estree/pull/20#issuecomment-74584758)\n    // But espree 2.0 parses to ArrayExpression, ObjectExpression, etc...\n    //\n\n    SpreadElement(node) {\n        this.visit(node.argument);\n    }\n\n    ArrayExpression(node) {\n        node.elements.forEach(this.visit, this);\n    }\n\n    AssignmentExpression(node) {\n        this.assignments.push(node);\n        this.visit(node.left);\n        this.rightHandNodes.push(node.right);\n        this.assignments.pop();\n    }\n\n    CallExpression(node) {\n\n        // arguments are right hand nodes.\n        node.arguments.forEach(a => {\n            this.rightHandNodes.push(a);\n        });\n        this.visit(node.callee);\n    }\n}\n\nmodule.exports = PatternVisitor;\n\n/* vim: set sw=4 ts=4 et tw=80 : */\n", "/*\n  Copyright (C) 2015 Yusuke Suzuki <utatane.tea@gmail.com>\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\"use strict\";\n\n/* eslint-disable no-underscore-dangle */\n/* eslint-disable no-undefined */\n\nconst Syntax = require(\"estraverse\").Syntax;\nconst esrecurse = require(\"esrecurse\");\nconst Reference = require(\"./reference\");\nconst Variable = require(\"./variable\");\nconst PatternVisitor = require(\"./pattern-visitor\");\nconst definition = require(\"./definition\");\nconst assert = require(\"assert\");\n\nconst ParameterDefinition = definition.ParameterDefinition;\nconst Definition = definition.Definition;\n\n/**\n * Traverse identifier in pattern\n * @param {Object} options - options\n * @param {pattern} rootPattern - root pattern\n * @param {Refencer} referencer - referencer\n * @param {callback} callback - callback\n * @returns {void}\n */\nfunction traverseIdentifierInPattern(options, rootPattern, referencer, callback) {\n\n    // Call the callback at left hand identifier nodes, and Collect right hand nodes.\n    const visitor = new PatternVisitor(options, rootPattern, callback);\n\n    visitor.visit(rootPattern);\n\n    // Process the right hand nodes recursively.\n    if (referencer !== null && referencer !== undefined) {\n        visitor.rightHandNodes.forEach(referencer.visit, referencer);\n    }\n}\n\n// Importing ImportDeclaration.\n// http://people.mozilla.org/~jorendorff/es6-draft.html#sec-moduledeclarationinstantiation\n// https://github.com/estree/estree/blob/master/es6.md#importdeclaration\n// FIXME: Now, we don't create module environment, because the context is\n// implementation dependent.\n\nclass Importer extends esrecurse.Visitor {\n    constructor(declaration, referencer) {\n        super(null, referencer.options);\n        this.declaration = declaration;\n        this.referencer = referencer;\n    }\n\n    visitImport(id, specifier) {\n        this.referencer.visitPattern(id, pattern => {\n            this.referencer.currentScope().__define(pattern,\n                new Definition(\n                    Variable.ImportBinding,\n                    pattern,\n                    specifier,\n                    this.declaration,\n                    null,\n                    null\n                ));\n        });\n    }\n\n    ImportNamespaceSpecifier(node) {\n        const local = (node.local || node.id);\n\n        if (local) {\n            this.visitImport(local, node);\n        }\n    }\n\n    ImportDefaultSpecifier(node) {\n        const local = (node.local || node.id);\n\n        this.visitImport(local, node);\n    }\n\n    ImportSpecifier(node) {\n        const local = (node.local || node.id);\n\n        if (node.name) {\n            this.visitImport(node.name, node);\n        } else {\n            this.visitImport(local, node);\n        }\n    }\n}\n\n// Referencing variables and creating bindings.\nclass Referencer extends esrecurse.Visitor {\n    constructor(options, scopeManager) {\n        super(null, options);\n        this.options = options;\n        this.scopeManager = scopeManager;\n        this.parent = null;\n        this.isInnerMethodDefinition = false;\n    }\n\n    currentScope() {\n        return this.scopeManager.__currentScope;\n    }\n\n    close(node) {\n        while (this.currentScope() && node === this.currentScope().block) {\n            this.scopeManager.__currentScope = this.currentScope().__close(this.scopeManager);\n        }\n    }\n\n    pushInnerMethodDefinition(isInnerMethodDefinition) {\n        const previous = this.isInnerMethodDefinition;\n\n        this.isInnerMethodDefinition = isInnerMethodDefinition;\n        return previous;\n    }\n\n    popInnerMethodDefinition(isInnerMethodDefinition) {\n        this.isInnerMethodDefinition = isInnerMethodDefinition;\n    }\n\n    referencingDefaultValue(pattern, assignments, maybeImplicitGlobal, init) {\n        const scope = this.currentScope();\n\n        assignments.forEach(assignment => {\n            scope.__referencing(\n                pattern,\n                Reference.WRITE,\n                assignment.right,\n                maybeImplicitGlobal,\n                pattern !== assignment.left,\n                init\n            );\n        });\n    }\n\n    visitPattern(node, options, callback) {\n        let visitPatternOptions = options;\n        let visitPatternCallback = callback;\n\n        if (typeof options === \"function\") {\n            visitPatternCallback = options;\n            visitPatternOptions = { processRightHandNodes: false };\n        }\n\n        traverseIdentifierInPattern(\n            this.options,\n            node,\n            visitPatternOptions.processRightHandNodes ? this : null,\n            visitPatternCallback\n        );\n    }\n\n    visitFunction(node) {\n        let i, iz;\n\n        // FunctionDeclaration name is defined in upper scope\n        // NOTE: Not referring variableScope. It is intended.\n        // Since\n        //  in ES5, FunctionDeclaration should be in FunctionBody.\n        //  in ES6, FunctionDeclaration should be block scoped.\n\n        if (node.type === Syntax.FunctionDeclaration) {\n\n            // id is defined in upper scope\n            this.currentScope().__define(node.id,\n                new Definition(\n                    Variable.FunctionName,\n                    node.id,\n                    node,\n                    null,\n                    null,\n                    null\n                ));\n        }\n\n        // FunctionExpression with name creates its special scope;\n        // FunctionExpressionNameScope.\n        if (node.type === Syntax.FunctionExpression && node.id) {\n            this.scopeManager.__nestFunctionExpressionNameScope(node);\n        }\n\n        // Consider this function is in the MethodDefinition.\n        this.scopeManager.__nestFunctionScope(node, this.isInnerMethodDefinition);\n\n        const that = this;\n\n        /**\n         * Visit pattern callback\n         * @param {pattern} pattern - pattern\n         * @param {Object} info - info\n         * @returns {void}\n         */\n        function visitPatternCallback(pattern, info) {\n            that.currentScope().__define(pattern,\n                new ParameterDefinition(\n                    pattern,\n                    node,\n                    i,\n                    info.rest\n                ));\n\n            that.referencingDefaultValue(pattern, info.assignments, null, true);\n        }\n\n        // Process parameter declarations.\n        for (i = 0, iz = node.params.length; i < iz; ++i) {\n            this.visitPattern(node.params[i], { processRightHandNodes: true }, visitPatternCallback);\n        }\n\n        // if there's a rest argument, add that\n        if (node.rest) {\n            this.visitPattern({\n                type: \"RestElement\",\n                argument: node.rest\n            }, pattern => {\n                this.currentScope().__define(pattern,\n                    new ParameterDefinition(\n                        pattern,\n                        node,\n                        node.params.length,\n                        true\n                    ));\n            });\n        }\n\n        // In TypeScript there are a number of function-like constructs which have no body,\n        // so check it exists before traversing\n        if (node.body) {\n\n            // Skip BlockStatement to prevent creating BlockStatement scope.\n            if (node.body.type === Syntax.BlockStatement) {\n                this.visitChildren(node.body);\n            } else {\n                this.visit(node.body);\n            }\n        }\n\n        this.close(node);\n    }\n\n    visitClass(node) {\n        if (node.type === Syntax.ClassDeclaration) {\n            this.currentScope().__define(node.id,\n                new Definition(\n                    Variable.ClassName,\n                    node.id,\n                    node,\n                    null,\n                    null,\n                    null\n                ));\n        }\n\n        this.visit(node.superClass);\n\n        this.scopeManager.__nestClassScope(node);\n\n        if (node.id) {\n            this.currentScope().__define(node.id,\n                new Definition(\n                    Variable.ClassName,\n                    node.id,\n                    node\n                ));\n        }\n        this.visit(node.body);\n\n        this.close(node);\n    }\n\n    visitProperty(node) {\n        let previous;\n\n        if (node.computed) {\n            this.visit(node.key);\n        }\n\n        const isMethodDefinition = node.type === Syntax.MethodDefinition;\n\n        if (isMethodDefinition) {\n            previous = this.pushInnerMethodDefinition(true);\n        }\n        this.visit(node.value);\n        if (isMethodDefinition) {\n            this.popInnerMethodDefinition(previous);\n        }\n    }\n\n    visitForIn(node) {\n        if (node.left.type === Syntax.VariableDeclaration && node.left.kind !== \"var\") {\n            this.scopeManager.__nestForScope(node);\n        }\n\n        if (node.left.type === Syntax.VariableDeclaration) {\n            this.visit(node.left);\n            this.visitPattern(node.left.declarations[0].id, pattern => {\n                this.currentScope().__referencing(pattern, Reference.WRITE, node.right, null, true, true);\n            });\n        } else {\n            this.visitPattern(node.left, { processRightHandNodes: true }, (pattern, info) => {\n                let maybeImplicitGlobal = null;\n\n                if (!this.currentScope().isStrict) {\n                    maybeImplicitGlobal = {\n                        pattern,\n                        node\n                    };\n                }\n                this.referencingDefaultValue(pattern, info.assignments, maybeImplicitGlobal, false);\n                this.currentScope().__referencing(pattern, Reference.WRITE, node.right, maybeImplicitGlobal, true, false);\n            });\n        }\n        this.visit(node.right);\n        this.visit(node.body);\n\n        this.close(node);\n    }\n\n    visitVariableDeclaration(variableTargetScope, type, node, index) {\n\n        const decl = node.declarations[index];\n        const init = decl.init;\n\n        this.visitPattern(decl.id, { processRightHandNodes: true }, (pattern, info) => {\n            variableTargetScope.__define(\n                pattern,\n                new Definition(\n                    type,\n                    pattern,\n                    decl,\n                    node,\n                    index,\n                    node.kind\n                )\n            );\n\n            this.referencingDefaultValue(pattern, info.assignments, null, true);\n            if (init) {\n                this.currentScope().__referencing(pattern, Reference.WRITE, init, null, !info.topLevel, true);\n            }\n        });\n    }\n\n    AssignmentExpression(node) {\n        if (PatternVisitor.isPattern(node.left)) {\n            if (node.operator === \"=\") {\n                this.visitPattern(node.left, { processRightHandNodes: true }, (pattern, info) => {\n                    let maybeImplicitGlobal = null;\n\n                    if (!this.currentScope().isStrict) {\n                        maybeImplicitGlobal = {\n                            pattern,\n                            node\n                        };\n                    }\n                    this.referencingDefaultValue(pattern, info.assignments, maybeImplicitGlobal, false);\n                    this.currentScope().__referencing(pattern, Reference.WRITE, node.right, maybeImplicitGlobal, !info.topLevel, false);\n                });\n            } else {\n                this.currentScope().__referencing(node.left, Reference.RW, node.right);\n            }\n        } else {\n            this.visit(node.left);\n        }\n        this.visit(node.right);\n    }\n\n    CatchClause(node) {\n        this.scopeManager.__nestCatchScope(node);\n\n        this.visitPattern(node.param, { processRightHandNodes: true }, (pattern, info) => {\n            this.currentScope().__define(pattern,\n                new Definition(\n                    Variable.CatchClause,\n                    node.param,\n                    node,\n                    null,\n                    null,\n                    null\n                ));\n            this.referencingDefaultValue(pattern, info.assignments, null, true);\n        });\n        this.visit(node.body);\n\n        this.close(node);\n    }\n\n    Program(node) {\n        this.scopeManager.__nestGlobalScope(node);\n\n        if (this.scopeManager.__isNodejsScope()) {\n\n            // Force strictness of GlobalScope to false when using node.js scope.\n            this.currentScope().isStrict = false;\n            this.scopeManager.__nestFunctionScope(node, false);\n        }\n\n        if (this.scopeManager.__isES6() && this.scopeManager.isModule()) {\n            this.scopeManager.__nestModuleScope(node);\n        }\n\n        if (this.scopeManager.isStrictModeSupported() && this.scopeManager.isImpliedStrict()) {\n            this.currentScope().isStrict = true;\n        }\n\n        this.visitChildren(node);\n        this.close(node);\n    }\n\n    Identifier(node) {\n        this.currentScope().__referencing(node);\n    }\n\n    UpdateExpression(node) {\n        if (PatternVisitor.isPattern(node.argument)) {\n            this.currentScope().__referencing(node.argument, Reference.RW, null);\n        } else {\n            this.visitChildren(node);\n        }\n    }\n\n    MemberExpression(node) {\n        this.visit(node.object);\n        if (node.computed) {\n            this.visit(node.property);\n        }\n    }\n\n    Property(node) {\n        this.visitProperty(node);\n    }\n\n    MethodDefinition(node) {\n        this.visitProperty(node);\n    }\n\n    BreakStatement() {} // eslint-disable-line class-methods-use-this\n\n    ContinueStatement() {} // eslint-disable-line class-methods-use-this\n\n    LabeledStatement(node) {\n        this.visit(node.body);\n    }\n\n    ForStatement(node) {\n\n        // Create ForStatement declaration.\n        // NOTE: In ES6, ForStatement dynamically generates\n        // per iteration environment. However, escope is\n        // a static analyzer, we only generate one scope for ForStatement.\n        if (node.init && node.init.type === Syntax.VariableDeclaration && node.init.kind !== \"var\") {\n            this.scopeManager.__nestForScope(node);\n        }\n\n        this.visitChildren(node);\n\n        this.close(node);\n    }\n\n    ClassExpression(node) {\n        this.visitClass(node);\n    }\n\n    ClassDeclaration(node) {\n        this.visitClass(node);\n    }\n\n    CallExpression(node) {\n\n        // Check this is direct call to eval\n        if (!this.scopeManager.__ignoreEval() && node.callee.type === Syntax.Identifier && node.callee.name === \"eval\") {\n\n            // NOTE: This should be `variableScope`. Since direct eval call always creates Lexical environment and\n            // let / const should be enclosed into it. Only VariableDeclaration affects on the caller's environment.\n            this.currentScope().variableScope.__detectEval();\n        }\n        this.visitChildren(node);\n    }\n\n    BlockStatement(node) {\n        if (this.scopeManager.__isES6()) {\n            this.scopeManager.__nestBlockScope(node);\n        }\n\n        this.visitChildren(node);\n\n        this.close(node);\n    }\n\n    ThisExpression() {\n        this.currentScope().variableScope.__detectThis();\n    }\n\n    WithStatement(node) {\n        this.visit(node.object);\n\n        // Then nest scope for WithStatement.\n        this.scopeManager.__nestWithScope(node);\n\n        this.visit(node.body);\n\n        this.close(node);\n    }\n\n    VariableDeclaration(node) {\n        const variableTargetScope = (node.kind === \"var\") ? this.currentScope().variableScope : this.currentScope();\n\n        for (let i = 0, iz = node.declarations.length; i < iz; ++i) {\n            const decl = node.declarations[i];\n\n            this.visitVariableDeclaration(variableTargetScope, Variable.Variable, node, i);\n            if (decl.init) {\n                this.visit(decl.init);\n            }\n        }\n    }\n\n    // sec 13.11.8\n    SwitchStatement(node) {\n        this.visit(node.discriminant);\n\n        if (this.scopeManager.__isES6()) {\n            this.scopeManager.__nestSwitchScope(node);\n        }\n\n        for (let i = 0, iz = node.cases.length; i < iz; ++i) {\n            this.visit(node.cases[i]);\n        }\n\n        this.close(node);\n    }\n\n    FunctionDeclaration(node) {\n        this.visitFunction(node);\n    }\n\n    FunctionExpression(node) {\n        this.visitFunction(node);\n    }\n\n    ForOfStatement(node) {\n        this.visitForIn(node);\n    }\n\n    ForInStatement(node) {\n        this.visitForIn(node);\n    }\n\n    ArrowFunctionExpression(node) {\n        this.visitFunction(node);\n    }\n\n    ImportDeclaration(node) {\n        assert(this.scopeManager.__isES6() && this.scopeManager.isModule(), \"ImportDeclaration should appear when the mode is ES6 and in the module context.\");\n\n        const importer = new Importer(node, this);\n\n        importer.visit(node);\n    }\n\n    visitExportDeclaration(node) {\n        if (node.source) {\n            return;\n        }\n        if (node.declaration) {\n            this.visit(node.declaration);\n            return;\n        }\n\n        this.visitChildren(node);\n    }\n\n    // TODO: ExportDeclaration doesn't exist. for bc?\n    ExportDeclaration(node) {\n        this.visitExportDeclaration(node);\n    }\n\n    ExportAllDeclaration(node) {\n        this.visitExportDeclaration(node);\n    }\n\n    ExportDefaultDeclaration(node) {\n        this.visitExportDeclaration(node);\n    }\n\n    ExportNamedDeclaration(node) {\n        this.visitExportDeclaration(node);\n    }\n\n    ExportSpecifier(node) {\n\n        // TODO: `node.id` doesn't exist. for bc?\n        const local = (node.id || node.local);\n\n        this.visit(local);\n    }\n\n    MetaProperty() { // eslint-disable-line class-methods-use-this\n\n        // do nothing.\n    }\n}\n\nmodule.exports = Referencer;\n\n/* vim: set sw=4 ts=4 et tw=80 : */\n", "/*\n  Copyright (C) 2012-2014 Yusuke Suzuki <utatane.tea@gmail.com>\n  Copyright (C) 2013 Alex Seville <hi@alexanderseville.com>\n  Copyright (C) 2014 Thiago de Arruda <tpadilha84@gmail.com>\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n\n/**\n * Escope (<a href=\"http://github.com/estools/escope\">escope</a>) is an <a\n * href=\"http://www.ecma-international.org/publications/standards/Ecma-262.htm\">ECMAScript</a>\n * scope analyzer extracted from the <a\n * href=\"http://github.com/estools/esmangle\">esmangle project</a/>.\n * <p>\n * <em>escope</em> finds lexical scopes in a source program, i.e. areas of that\n * program where different occurrences of the same identifier refer to the same\n * variable. With each scope the contained variables are collected, and each\n * identifier reference in code is linked to its corresponding variable (if\n * possible).\n * <p>\n * <em>escope</em> works on a syntax tree of the parsed source code which has\n * to adhere to the <a\n * href=\"https://developer.mozilla.org/en-US/docs/SpiderMonkey/Parser_API\">\n * Mozilla Parser API</a>. E.g. <a href=\"https://github.com/eslint/espree\">espree</a> is a parser\n * that produces such syntax trees.\n * <p>\n * The main interface is the {@link analyze} function.\n * @module escope\n */\n\"use strict\";\n\n/* eslint no-underscore-dangle: [\"error\", { \"allow\": [\"__currentScope\"] }] */\n\nconst assert = require(\"assert\");\n\nconst ScopeManager = require(\"./scope-manager\");\nconst Referencer = require(\"./referencer\");\nconst Reference = require(\"./reference\");\nconst Variable = require(\"./variable\");\nconst Scope = require(\"./scope\").Scope;\nconst version = require(\"../package.json\").version;\n\n/**\n * Set the default options\n * @returns {Object} options\n */\nfunction defaultOptions() {\n    return {\n        optimistic: false,\n        directive: false,\n        nodejsScope: false,\n        impliedStrict: false,\n        sourceType: \"script\", // one of ['script', 'module']\n        ecmaVersion: 5,\n        childVisitorKeys: null,\n        fallback: \"iteration\"\n    };\n}\n\n/**\n * Preform deep update on option object\n * @param {Object} target - Options\n * @param {Object} override - Updates\n * @returns {Object} Updated options\n */\nfunction updateDeeply(target, override) {\n\n    /**\n     * Is hash object\n     * @param {Object} value - Test value\n     * @returns {boolean} Result\n     */\n    function isHashObject(value) {\n        return typeof value === \"object\" && value instanceof Object && !(value instanceof Array) && !(value instanceof RegExp);\n    }\n\n    for (const key in override) {\n        if (Object.prototype.hasOwnProperty.call(override, key)) {\n            const val = override[key];\n\n            if (isHashObject(val)) {\n                if (isHashObject(target[key])) {\n                    updateDeeply(target[key], val);\n                } else {\n                    target[key] = updateDeeply({}, val);\n                }\n            } else {\n                target[key] = val;\n            }\n        }\n    }\n    return target;\n}\n\n/**\n * Main interface function. Takes an Espree syntax tree and returns the\n * analyzed scopes.\n * @function analyze\n * @param {espree.Tree} tree - Abstract Syntax Tree\n * @param {Object} providedOptions - Options that tailor the scope analysis\n * @param {boolean} [providedOptions.optimistic=false] - the optimistic flag\n * @param {boolean} [providedOptions.directive=false]- the directive flag\n * @param {boolean} [providedOptions.ignoreEval=false]- whether to check 'eval()' calls\n * @param {boolean} [providedOptions.nodejsScope=false]- whether the whole\n * script is executed under node.js environment. When enabled, escope adds\n * a function scope immediately following the global scope.\n * @param {boolean} [providedOptions.impliedStrict=false]- implied strict mode\n * (if ecmaVersion >= 5).\n * @param {string} [providedOptions.sourceType='script']- the source type of the script. one of 'script' and 'module'\n * @param {number} [providedOptions.ecmaVersion=5]- which ECMAScript version is considered\n * @param {Object} [providedOptions.childVisitorKeys=null] - Additional known visitor keys. See [esrecurse](https://github.com/estools/esrecurse)'s the `childVisitorKeys` option.\n * @param {string} [providedOptions.fallback='iteration'] - A kind of the fallback in order to encounter with unknown node. See [esrecurse](https://github.com/estools/esrecurse)'s the `fallback` option.\n * @returns {ScopeManager} ScopeManager\n */\nfunction analyze(tree, providedOptions) {\n    const options = updateDeeply(defaultOptions(), providedOptions);\n    const scopeManager = new ScopeManager(options);\n    const referencer = new Referencer(options, scopeManager);\n\n    referencer.visit(tree);\n\n    assert(scopeManager.__currentScope === null, \"currentScope should be null.\");\n\n    return scopeManager;\n}\n\nmodule.exports = {\n\n    /** @name module:escope.version */\n    version,\n\n    /** @name module:escope.Reference */\n    Reference,\n\n    /** @name module:escope.Variable */\n    Variable,\n\n    /** @name module:escope.Scope */\n    Scope,\n\n    /** @name module:escope.ScopeManager */\n    ScopeManager,\n    analyze\n};\n\n\n/* vim: set sw=4 ts=4 et tw=80 : */\n", "exports = module.exports = SemVer\n\nvar debug\n/* istanbul ignore next */\nif (typeof process === 'object' &&\n    process.env &&\n    process.env.NODE_DEBUG &&\n    /\\bsemver\\b/i.test(process.env.NODE_DEBUG)) {\n  debug = function () {\n    var args = Array.prototype.slice.call(arguments, 0)\n    args.unshift('SEMVER')\n    console.log.apply(console, args)\n  }\n} else {\n  debug = function () {}\n}\n\n// Note: this is the semver.org version of the spec that it implements\n// Not necessarily the package version of this code.\nexports.SEMVER_SPEC_VERSION = '2.0.0'\n\nvar MAX_LENGTH = 256\nvar MAX_SAFE_INTEGER = Number.MAX_SAFE_INTEGER ||\n  /* istanbul ignore next */ 9007199254740991\n\n// Max safe segment length for coercion.\nvar MAX_SAFE_COMPONENT_LENGTH = 16\n\n// The actual regexps go on exports.re\nvar re = exports.re = []\nvar src = exports.src = []\nvar t = exports.tokens = {}\nvar R = 0\n\nfunction tok (n) {\n  t[n] = R++\n}\n\n// The following Regular Expressions can be used for tokenizing,\n// validating, and parsing SemVer version strings.\n\n// ## Numeric Identifier\n// A single `0`, or a non-zero digit followed by zero or more digits.\n\ntok('NUMERICIDENTIFIER')\nsrc[t.NUMERICIDENTIFIER] = '0|[1-9]\\\\d*'\ntok('NUMERICIDENTIFIERLOOSE')\nsrc[t.NUMERICIDENTIFIERLOOSE] = '[0-9]+'\n\n// ## Non-numeric Identifier\n// Zero or more digits, followed by a letter or hyphen, and then zero or\n// more letters, digits, or hyphens.\n\ntok('NONNUMERICIDENTIFIER')\nsrc[t.NONNUMERICIDENTIFIER] = '\\\\d*[a-zA-Z-][a-zA-Z0-9-]*'\n\n// ## Main Version\n// Three dot-separated numeric identifiers.\n\ntok('MAINVERSION')\nsrc[t.MAINVERSION] = '(' + src[t.NUMERICIDENTIFIER] + ')\\\\.' +\n                   '(' + src[t.NUMERICIDENTIFIER] + ')\\\\.' +\n                   '(' + src[t.NUMERICIDENTIFIER] + ')'\n\ntok('MAINVERSIONLOOSE')\nsrc[t.MAINVERSIONLOOSE] = '(' + src[t.NUMERICIDENTIFIERLOOSE] + ')\\\\.' +\n                        '(' + src[t.NUMERICIDENTIFIERLOOSE] + ')\\\\.' +\n                        '(' + src[t.NUMERICIDENTIFIERLOOSE] + ')'\n\n// ## Pre-release Version Identifier\n// A numeric identifier, or a non-numeric identifier.\n\ntok('PRERELEASEIDENTIFIER')\nsrc[t.PRERELEASEIDENTIFIER] = '(?:' + src[t.NUMERICIDENTIFIER] +\n                            '|' + src[t.NONNUMERICIDENTIFIER] + ')'\n\ntok('PRERELEASEIDENTIFIERLOOSE')\nsrc[t.PRERELEASEIDENTIFIERLOOSE] = '(?:' + src[t.NUMERICIDENTIFIERLOOSE] +\n                                 '|' + src[t.NONNUMERICIDENTIFIER] + ')'\n\n// ## Pre-release Version\n// Hyphen, followed by one or more dot-separated pre-release version\n// identifiers.\n\ntok('PRERELEASE')\nsrc[t.PRERELEASE] = '(?:-(' + src[t.PRERELEASEIDENTIFIER] +\n                  '(?:\\\\.' + src[t.PRERELEASEIDENTIFIER] + ')*))'\n\ntok('PRERELEASELOOSE')\nsrc[t.PRERELEASELOOSE] = '(?:-?(' + src[t.PRERELEASEIDENTIFIERLOOSE] +\n                       '(?:\\\\.' + src[t.PRERELEASEIDENTIFIERLOOSE] + ')*))'\n\n// ## Build Metadata Identifier\n// Any combination of digits, letters, or hyphens.\n\ntok('BUILDIDENTIFIER')\nsrc[t.BUILDIDENTIFIER] = '[0-9A-Za-z-]+'\n\n// ## Build Metadata\n// Plus sign, followed by one or more period-separated build metadata\n// identifiers.\n\ntok('BUILD')\nsrc[t.BUILD] = '(?:\\\\+(' + src[t.BUILDIDENTIFIER] +\n             '(?:\\\\.' + src[t.BUILDIDENTIFIER] + ')*))'\n\n// ## Full Version String\n// A main version, followed optionally by a pre-release version and\n// build metadata.\n\n// Note that the only major, minor, patch, and pre-release sections of\n// the version string are capturing groups.  The build metadata is not a\n// capturing group, because it should not ever be used in version\n// comparison.\n\ntok('FULL')\ntok('FULLPLAIN')\nsrc[t.FULLPLAIN] = 'v?' + src[t.MAINVERSION] +\n                  src[t.PRERELEASE] + '?' +\n                  src[t.BUILD] + '?'\n\nsrc[t.FULL] = '^' + src[t.FULLPLAIN] + '$'\n\n// like full, but allows v1.2.3 and =1.2.3, which people do sometimes.\n// also, 1.0.0alpha1 (prerelease without the hyphen) which is pretty\n// common in the npm registry.\ntok('LOOSEPLAIN')\nsrc[t.LOOSEPLAIN] = '[v=\\\\s]*' + src[t.MAINVERSIONLOOSE] +\n                  src[t.PRERELEASELOOSE] + '?' +\n                  src[t.BUILD] + '?'\n\ntok('LOOSE')\nsrc[t.LOOSE] = '^' + src[t.LOOSEPLAIN] + '$'\n\ntok('GTLT')\nsrc[t.GTLT] = '((?:<|>)?=?)'\n\n// Something like \"2.*\" or \"1.2.x\".\n// Note that \"x.x\" is a valid xRange identifer, meaning \"any version\"\n// Only the first item is strictly required.\ntok('XRANGEIDENTIFIERLOOSE')\nsrc[t.XRANGEIDENTIFIERLOOSE] = src[t.NUMERICIDENTIFIERLOOSE] + '|x|X|\\\\*'\ntok('XRANGEIDENTIFIER')\nsrc[t.XRANGEIDENTIFIER] = src[t.NUMERICIDENTIFIER] + '|x|X|\\\\*'\n\ntok('XRANGEPLAIN')\nsrc[t.XRANGEPLAIN] = '[v=\\\\s]*(' + src[t.XRANGEIDENTIFIER] + ')' +\n                   '(?:\\\\.(' + src[t.XRANGEIDENTIFIER] + ')' +\n                   '(?:\\\\.(' + src[t.XRANGEIDENTIFIER] + ')' +\n                   '(?:' + src[t.PRERELEASE] + ')?' +\n                   src[t.BUILD] + '?' +\n                   ')?)?'\n\ntok('XRANGEPLAINLOOSE')\nsrc[t.XRANGEPLAINLOOSE] = '[v=\\\\s]*(' + src[t.XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:\\\\.(' + src[t.XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:\\\\.(' + src[t.XRANGEIDENTIFIERLOOSE] + ')' +\n                        '(?:' + src[t.PRERELEASELOOSE] + ')?' +\n                        src[t.BUILD] + '?' +\n                        ')?)?'\n\ntok('XRANGE')\nsrc[t.XRANGE] = '^' + src[t.GTLT] + '\\\\s*' + src[t.XRANGEPLAIN] + '$'\ntok('XRANGELOOSE')\nsrc[t.XRANGELOOSE] = '^' + src[t.GTLT] + '\\\\s*' + src[t.XRANGEPLAINLOOSE] + '$'\n\n// Coercion.\n// Extract anything that could conceivably be a part of a valid semver\ntok('COERCE')\nsrc[t.COERCE] = '(^|[^\\\\d])' +\n              '(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '})' +\n              '(?:\\\\.(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '}))?' +\n              '(?:\\\\.(\\\\d{1,' + MAX_SAFE_COMPONENT_LENGTH + '}))?' +\n              '(?:$|[^\\\\d])'\ntok('COERCERTL')\nre[t.COERCERTL] = new RegExp(src[t.COERCE], 'g')\n\n// Tilde ranges.\n// Meaning is \"reasonably at or greater than\"\ntok('LONETILDE')\nsrc[t.LONETILDE] = '(?:~>?)'\n\ntok('TILDETRIM')\nsrc[t.TILDETRIM] = '(\\\\s*)' + src[t.LONETILDE] + '\\\\s+'\nre[t.TILDETRIM] = new RegExp(src[t.TILDETRIM], 'g')\nvar tildeTrimReplace = '$1~'\n\ntok('TILDE')\nsrc[t.TILDE] = '^' + src[t.LONETILDE] + src[t.XRANGEPLAIN] + '$'\ntok('TILDELOOSE')\nsrc[t.TILDELOOSE] = '^' + src[t.LONETILDE] + src[t.XRANGEPLAINLOOSE] + '$'\n\n// Caret ranges.\n// Meaning is \"at least and backwards compatible with\"\ntok('LONECARET')\nsrc[t.LONECARET] = '(?:\\\\^)'\n\ntok('CARETTRIM')\nsrc[t.CARETTRIM] = '(\\\\s*)' + src[t.LONECARET] + '\\\\s+'\nre[t.CARETTRIM] = new RegExp(src[t.CARETTRIM], 'g')\nvar caretTrimReplace = '$1^'\n\ntok('CARET')\nsrc[t.CARET] = '^' + src[t.LONECARET] + src[t.XRANGEPLAIN] + '$'\ntok('CARETLOOSE')\nsrc[t.CARETLOOSE] = '^' + src[t.LONECARET] + src[t.XRANGEPLAINLOOSE] + '$'\n\n// A simple gt/lt/eq thing, or just \"\" to indicate \"any version\"\ntok('COMPARATORLOOSE')\nsrc[t.COMPARATORLOOSE] = '^' + src[t.GTLT] + '\\\\s*(' + src[t.LOOSEPLAIN] + ')$|^$'\ntok('COMPARATOR')\nsrc[t.COMPARATOR] = '^' + src[t.GTLT] + '\\\\s*(' + src[t.FULLPLAIN] + ')$|^$'\n\n// An expression to strip any whitespace between the gtlt and the thing\n// it modifies, so that `> 1.2.3` ==> `>1.2.3`\ntok('COMPARATORTRIM')\nsrc[t.COMPARATORTRIM] = '(\\\\s*)' + src[t.GTLT] +\n                      '\\\\s*(' + src[t.LOOSEPLAIN] + '|' + src[t.XRANGEPLAIN] + ')'\n\n// this one has to use the /g flag\nre[t.COMPARATORTRIM] = new RegExp(src[t.COMPARATORTRIM], 'g')\nvar comparatorTrimReplace = '$1$2$3'\n\n// Something like `1.2.3 - 1.2.4`\n// Note that these all use the loose form, because they'll be\n// checked against either the strict or loose comparator form\n// later.\ntok('HYPHENRANGE')\nsrc[t.HYPHENRANGE] = '^\\\\s*(' + src[t.XRANGEPLAIN] + ')' +\n                   '\\\\s+-\\\\s+' +\n                   '(' + src[t.XRANGEPLAIN] + ')' +\n                   '\\\\s*$'\n\ntok('HYPHENRANGELOOSE')\nsrc[t.HYPHENRANGELOOSE] = '^\\\\s*(' + src[t.XRANGEPLAINLOOSE] + ')' +\n                        '\\\\s+-\\\\s+' +\n                        '(' + src[t.XRANGEPLAINLOOSE] + ')' +\n                        '\\\\s*$'\n\n// Star ranges basically just allow anything at all.\ntok('STAR')\nsrc[t.STAR] = '(<|>)?=?\\\\s*\\\\*'\n\n// Compile to actual regexp objects.\n// All are flag-free, unless they were created above with a flag.\nfor (var i = 0; i < R; i++) {\n  debug(i, src[i])\n  if (!re[i]) {\n    re[i] = new RegExp(src[i])\n  }\n}\n\nexports.parse = parse\nfunction parse (version, options) {\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  if (version.length > MAX_LENGTH) {\n    return null\n  }\n\n  var r = options.loose ? re[t.LOOSE] : re[t.FULL]\n  if (!r.test(version)) {\n    return null\n  }\n\n  try {\n    return new SemVer(version, options)\n  } catch (er) {\n    return null\n  }\n}\n\nexports.valid = valid\nfunction valid (version, options) {\n  var v = parse(version, options)\n  return v ? v.version : null\n}\n\nexports.clean = clean\nfunction clean (version, options) {\n  var s = parse(version.trim().replace(/^[=v]+/, ''), options)\n  return s ? s.version : null\n}\n\nexports.SemVer = SemVer\n\nfunction SemVer (version, options) {\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n  if (version instanceof SemVer) {\n    if (version.loose === options.loose) {\n      return version\n    } else {\n      version = version.version\n    }\n  } else if (typeof version !== 'string') {\n    throw new TypeError('Invalid Version: ' + version)\n  }\n\n  if (version.length > MAX_LENGTH) {\n    throw new TypeError('version is longer than ' + MAX_LENGTH + ' characters')\n  }\n\n  if (!(this instanceof SemVer)) {\n    return new SemVer(version, options)\n  }\n\n  debug('SemVer', version, options)\n  this.options = options\n  this.loose = !!options.loose\n\n  var m = version.trim().match(options.loose ? re[t.LOOSE] : re[t.FULL])\n\n  if (!m) {\n    throw new TypeError('Invalid Version: ' + version)\n  }\n\n  this.raw = version\n\n  // these are actually numbers\n  this.major = +m[1]\n  this.minor = +m[2]\n  this.patch = +m[3]\n\n  if (this.major > MAX_SAFE_INTEGER || this.major < 0) {\n    throw new TypeError('Invalid major version')\n  }\n\n  if (this.minor > MAX_SAFE_INTEGER || this.minor < 0) {\n    throw new TypeError('Invalid minor version')\n  }\n\n  if (this.patch > MAX_SAFE_INTEGER || this.patch < 0) {\n    throw new TypeError('Invalid patch version')\n  }\n\n  // numberify any prerelease numeric ids\n  if (!m[4]) {\n    this.prerelease = []\n  } else {\n    this.prerelease = m[4].split('.').map(function (id) {\n      if (/^[0-9]+$/.test(id)) {\n        var num = +id\n        if (num >= 0 && num < MAX_SAFE_INTEGER) {\n          return num\n        }\n      }\n      return id\n    })\n  }\n\n  this.build = m[5] ? m[5].split('.') : []\n  this.format()\n}\n\nSemVer.prototype.format = function () {\n  this.version = this.major + '.' + this.minor + '.' + this.patch\n  if (this.prerelease.length) {\n    this.version += '-' + this.prerelease.join('.')\n  }\n  return this.version\n}\n\nSemVer.prototype.toString = function () {\n  return this.version\n}\n\nSemVer.prototype.compare = function (other) {\n  debug('SemVer.compare', this.version, this.options, other)\n  if (!(other instanceof SemVer)) {\n    other = new SemVer(other, this.options)\n  }\n\n  return this.compareMain(other) || this.comparePre(other)\n}\n\nSemVer.prototype.compareMain = function (other) {\n  if (!(other instanceof SemVer)) {\n    other = new SemVer(other, this.options)\n  }\n\n  return compareIdentifiers(this.major, other.major) ||\n         compareIdentifiers(this.minor, other.minor) ||\n         compareIdentifiers(this.patch, other.patch)\n}\n\nSemVer.prototype.comparePre = function (other) {\n  if (!(other instanceof SemVer)) {\n    other = new SemVer(other, this.options)\n  }\n\n  // NOT having a prerelease is > having one\n  if (this.prerelease.length && !other.prerelease.length) {\n    return -1\n  } else if (!this.prerelease.length && other.prerelease.length) {\n    return 1\n  } else if (!this.prerelease.length && !other.prerelease.length) {\n    return 0\n  }\n\n  var i = 0\n  do {\n    var a = this.prerelease[i]\n    var b = other.prerelease[i]\n    debug('prerelease compare', i, a, b)\n    if (a === undefined && b === undefined) {\n      return 0\n    } else if (b === undefined) {\n      return 1\n    } else if (a === undefined) {\n      return -1\n    } else if (a === b) {\n      continue\n    } else {\n      return compareIdentifiers(a, b)\n    }\n  } while (++i)\n}\n\nSemVer.prototype.compareBuild = function (other) {\n  if (!(other instanceof SemVer)) {\n    other = new SemVer(other, this.options)\n  }\n\n  var i = 0\n  do {\n    var a = this.build[i]\n    var b = other.build[i]\n    debug('prerelease compare', i, a, b)\n    if (a === undefined && b === undefined) {\n      return 0\n    } else if (b === undefined) {\n      return 1\n    } else if (a === undefined) {\n      return -1\n    } else if (a === b) {\n      continue\n    } else {\n      return compareIdentifiers(a, b)\n    }\n  } while (++i)\n}\n\n// preminor will bump the version up to the next minor release, and immediately\n// down to pre-release. premajor and prepatch work the same way.\nSemVer.prototype.inc = function (release, identifier) {\n  switch (release) {\n    case 'premajor':\n      this.prerelease.length = 0\n      this.patch = 0\n      this.minor = 0\n      this.major++\n      this.inc('pre', identifier)\n      break\n    case 'preminor':\n      this.prerelease.length = 0\n      this.patch = 0\n      this.minor++\n      this.inc('pre', identifier)\n      break\n    case 'prepatch':\n      // If this is already a prerelease, it will bump to the next version\n      // drop any prereleases that might already exist, since they are not\n      // relevant at this point.\n      this.prerelease.length = 0\n      this.inc('patch', identifier)\n      this.inc('pre', identifier)\n      break\n    // If the input is a non-prerelease version, this acts the same as\n    // prepatch.\n    case 'prerelease':\n      if (this.prerelease.length === 0) {\n        this.inc('patch', identifier)\n      }\n      this.inc('pre', identifier)\n      break\n\n    case 'major':\n      // If this is a pre-major version, bump up to the same major version.\n      // Otherwise increment major.\n      // 1.0.0-5 bumps to 1.0.0\n      // 1.1.0 bumps to 2.0.0\n      if (this.minor !== 0 ||\n          this.patch !== 0 ||\n          this.prerelease.length === 0) {\n        this.major++\n      }\n      this.minor = 0\n      this.patch = 0\n      this.prerelease = []\n      break\n    case 'minor':\n      // If this is a pre-minor version, bump up to the same minor version.\n      // Otherwise increment minor.\n      // 1.2.0-5 bumps to 1.2.0\n      // 1.2.1 bumps to 1.3.0\n      if (this.patch !== 0 || this.prerelease.length === 0) {\n        this.minor++\n      }\n      this.patch = 0\n      this.prerelease = []\n      break\n    case 'patch':\n      // If this is not a pre-release version, it will increment the patch.\n      // If it is a pre-release it will bump up to the same patch version.\n      // 1.2.0-5 patches to 1.2.0\n      // 1.2.0 patches to 1.2.1\n      if (this.prerelease.length === 0) {\n        this.patch++\n      }\n      this.prerelease = []\n      break\n    // This probably shouldn't be used publicly.\n    // 1.0.0 \"pre\" would become 1.0.0-0 which is the wrong direction.\n    case 'pre':\n      if (this.prerelease.length === 0) {\n        this.prerelease = [0]\n      } else {\n        var i = this.prerelease.length\n        while (--i >= 0) {\n          if (typeof this.prerelease[i] === 'number') {\n            this.prerelease[i]++\n            i = -2\n          }\n        }\n        if (i === -1) {\n          // didn't increment anything\n          this.prerelease.push(0)\n        }\n      }\n      if (identifier) {\n        // 1.2.0-beta.1 bumps to 1.2.0-beta.2,\n        // 1.2.0-beta.fooblz or 1.2.0-beta bumps to 1.2.0-beta.0\n        if (this.prerelease[0] === identifier) {\n          if (isNaN(this.prerelease[1])) {\n            this.prerelease = [identifier, 0]\n          }\n        } else {\n          this.prerelease = [identifier, 0]\n        }\n      }\n      break\n\n    default:\n      throw new Error('invalid increment argument: ' + release)\n  }\n  this.format()\n  this.raw = this.version\n  return this\n}\n\nexports.inc = inc\nfunction inc (version, release, loose, identifier) {\n  if (typeof (loose) === 'string') {\n    identifier = loose\n    loose = undefined\n  }\n\n  try {\n    return new SemVer(version, loose).inc(release, identifier).version\n  } catch (er) {\n    return null\n  }\n}\n\nexports.diff = diff\nfunction diff (version1, version2) {\n  if (eq(version1, version2)) {\n    return null\n  } else {\n    var v1 = parse(version1)\n    var v2 = parse(version2)\n    var prefix = ''\n    if (v1.prerelease.length || v2.prerelease.length) {\n      prefix = 'pre'\n      var defaultResult = 'prerelease'\n    }\n    for (var key in v1) {\n      if (key === 'major' || key === 'minor' || key === 'patch') {\n        if (v1[key] !== v2[key]) {\n          return prefix + key\n        }\n      }\n    }\n    return defaultResult // may be undefined\n  }\n}\n\nexports.compareIdentifiers = compareIdentifiers\n\nvar numeric = /^[0-9]+$/\nfunction compareIdentifiers (a, b) {\n  var anum = numeric.test(a)\n  var bnum = numeric.test(b)\n\n  if (anum && bnum) {\n    a = +a\n    b = +b\n  }\n\n  return a === b ? 0\n    : (anum && !bnum) ? -1\n    : (bnum && !anum) ? 1\n    : a < b ? -1\n    : 1\n}\n\nexports.rcompareIdentifiers = rcompareIdentifiers\nfunction rcompareIdentifiers (a, b) {\n  return compareIdentifiers(b, a)\n}\n\nexports.major = major\nfunction major (a, loose) {\n  return new SemVer(a, loose).major\n}\n\nexports.minor = minor\nfunction minor (a, loose) {\n  return new SemVer(a, loose).minor\n}\n\nexports.patch = patch\nfunction patch (a, loose) {\n  return new SemVer(a, loose).patch\n}\n\nexports.compare = compare\nfunction compare (a, b, loose) {\n  return new SemVer(a, loose).compare(new SemVer(b, loose))\n}\n\nexports.compareLoose = compareLoose\nfunction compareLoose (a, b) {\n  return compare(a, b, true)\n}\n\nexports.compareBuild = compareBuild\nfunction compareBuild (a, b, loose) {\n  var versionA = new SemVer(a, loose)\n  var versionB = new SemVer(b, loose)\n  return versionA.compare(versionB) || versionA.compareBuild(versionB)\n}\n\nexports.rcompare = rcompare\nfunction rcompare (a, b, loose) {\n  return compare(b, a, loose)\n}\n\nexports.sort = sort\nfunction sort (list, loose) {\n  return list.sort(function (a, b) {\n    return exports.compareBuild(a, b, loose)\n  })\n}\n\nexports.rsort = rsort\nfunction rsort (list, loose) {\n  return list.sort(function (a, b) {\n    return exports.compareBuild(b, a, loose)\n  })\n}\n\nexports.gt = gt\nfunction gt (a, b, loose) {\n  return compare(a, b, loose) > 0\n}\n\nexports.lt = lt\nfunction lt (a, b, loose) {\n  return compare(a, b, loose) < 0\n}\n\nexports.eq = eq\nfunction eq (a, b, loose) {\n  return compare(a, b, loose) === 0\n}\n\nexports.neq = neq\nfunction neq (a, b, loose) {\n  return compare(a, b, loose) !== 0\n}\n\nexports.gte = gte\nfunction gte (a, b, loose) {\n  return compare(a, b, loose) >= 0\n}\n\nexports.lte = lte\nfunction lte (a, b, loose) {\n  return compare(a, b, loose) <= 0\n}\n\nexports.cmp = cmp\nfunction cmp (a, op, b, loose) {\n  switch (op) {\n    case '===':\n      if (typeof a === 'object')\n        a = a.version\n      if (typeof b === 'object')\n        b = b.version\n      return a === b\n\n    case '!==':\n      if (typeof a === 'object')\n        a = a.version\n      if (typeof b === 'object')\n        b = b.version\n      return a !== b\n\n    case '':\n    case '=':\n    case '==':\n      return eq(a, b, loose)\n\n    case '!=':\n      return neq(a, b, loose)\n\n    case '>':\n      return gt(a, b, loose)\n\n    case '>=':\n      return gte(a, b, loose)\n\n    case '<':\n      return lt(a, b, loose)\n\n    case '<=':\n      return lte(a, b, loose)\n\n    default:\n      throw new TypeError('Invalid operator: ' + op)\n  }\n}\n\nexports.Comparator = Comparator\nfunction Comparator (comp, options) {\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n\n  if (comp instanceof Comparator) {\n    if (comp.loose === !!options.loose) {\n      return comp\n    } else {\n      comp = comp.value\n    }\n  }\n\n  if (!(this instanceof Comparator)) {\n    return new Comparator(comp, options)\n  }\n\n  debug('comparator', comp, options)\n  this.options = options\n  this.loose = !!options.loose\n  this.parse(comp)\n\n  if (this.semver === ANY) {\n    this.value = ''\n  } else {\n    this.value = this.operator + this.semver.version\n  }\n\n  debug('comp', this)\n}\n\nvar ANY = {}\nComparator.prototype.parse = function (comp) {\n  var r = this.options.loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\n  var m = comp.match(r)\n\n  if (!m) {\n    throw new TypeError('Invalid comparator: ' + comp)\n  }\n\n  this.operator = m[1] !== undefined ? m[1] : ''\n  if (this.operator === '=') {\n    this.operator = ''\n  }\n\n  // if it literally is just '>' or '' then allow anything.\n  if (!m[2]) {\n    this.semver = ANY\n  } else {\n    this.semver = new SemVer(m[2], this.options.loose)\n  }\n}\n\nComparator.prototype.toString = function () {\n  return this.value\n}\n\nComparator.prototype.test = function (version) {\n  debug('Comparator.test', version, this.options.loose)\n\n  if (this.semver === ANY || version === ANY) {\n    return true\n  }\n\n  if (typeof version === 'string') {\n    try {\n      version = new SemVer(version, this.options)\n    } catch (er) {\n      return false\n    }\n  }\n\n  return cmp(version, this.operator, this.semver, this.options)\n}\n\nComparator.prototype.intersects = function (comp, options) {\n  if (!(comp instanceof Comparator)) {\n    throw new TypeError('a Comparator is required')\n  }\n\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n\n  var rangeTmp\n\n  if (this.operator === '') {\n    if (this.value === '') {\n      return true\n    }\n    rangeTmp = new Range(comp.value, options)\n    return satisfies(this.value, rangeTmp, options)\n  } else if (comp.operator === '') {\n    if (comp.value === '') {\n      return true\n    }\n    rangeTmp = new Range(this.value, options)\n    return satisfies(comp.semver, rangeTmp, options)\n  }\n\n  var sameDirectionIncreasing =\n    (this.operator === '>=' || this.operator === '>') &&\n    (comp.operator === '>=' || comp.operator === '>')\n  var sameDirectionDecreasing =\n    (this.operator === '<=' || this.operator === '<') &&\n    (comp.operator === '<=' || comp.operator === '<')\n  var sameSemVer = this.semver.version === comp.semver.version\n  var differentDirectionsInclusive =\n    (this.operator === '>=' || this.operator === '<=') &&\n    (comp.operator === '>=' || comp.operator === '<=')\n  var oppositeDirectionsLessThan =\n    cmp(this.semver, '<', comp.semver, options) &&\n    ((this.operator === '>=' || this.operator === '>') &&\n    (comp.operator === '<=' || comp.operator === '<'))\n  var oppositeDirectionsGreaterThan =\n    cmp(this.semver, '>', comp.semver, options) &&\n    ((this.operator === '<=' || this.operator === '<') &&\n    (comp.operator === '>=' || comp.operator === '>'))\n\n  return sameDirectionIncreasing || sameDirectionDecreasing ||\n    (sameSemVer && differentDirectionsInclusive) ||\n    oppositeDirectionsLessThan || oppositeDirectionsGreaterThan\n}\n\nexports.Range = Range\nfunction Range (range, options) {\n  if (!options || typeof options !== 'object') {\n    options = {\n      loose: !!options,\n      includePrerelease: false\n    }\n  }\n\n  if (range instanceof Range) {\n    if (range.loose === !!options.loose &&\n        range.includePrerelease === !!options.includePrerelease) {\n      return range\n    } else {\n      return new Range(range.raw, options)\n    }\n  }\n\n  if (range instanceof Comparator) {\n    return new Range(range.value, options)\n  }\n\n  if (!(this instanceof Range)) {\n    return new Range(range, options)\n  }\n\n  this.options = options\n  this.loose = !!options.loose\n  this.includePrerelease = !!options.includePrerelease\n\n  // First, split based on boolean or ||\n  this.raw = range\n  this.set = range.split(/\\s*\\|\\|\\s*/).map(function (range) {\n    return this.parseRange(range.trim())\n  }, this).filter(function (c) {\n    // throw out any that are not relevant for whatever reason\n    return c.length\n  })\n\n  if (!this.set.length) {\n    throw new TypeError('Invalid SemVer Range: ' + range)\n  }\n\n  this.format()\n}\n\nRange.prototype.format = function () {\n  this.range = this.set.map(function (comps) {\n    return comps.join(' ').trim()\n  }).join('||').trim()\n  return this.range\n}\n\nRange.prototype.toString = function () {\n  return this.range\n}\n\nRange.prototype.parseRange = function (range) {\n  var loose = this.options.loose\n  range = range.trim()\n  // `1.2.3 - 1.2.4` => `>=1.2.3 <=1.2.4`\n  var hr = loose ? re[t.HYPHENRANGELOOSE] : re[t.HYPHENRANGE]\n  range = range.replace(hr, hyphenReplace)\n  debug('hyphen replace', range)\n  // `> 1.2.3 < 1.2.5` => `>1.2.3 <1.2.5`\n  range = range.replace(re[t.COMPARATORTRIM], comparatorTrimReplace)\n  debug('comparator trim', range, re[t.COMPARATORTRIM])\n\n  // `~ 1.2.3` => `~1.2.3`\n  range = range.replace(re[t.TILDETRIM], tildeTrimReplace)\n\n  // `^ 1.2.3` => `^1.2.3`\n  range = range.replace(re[t.CARETTRIM], caretTrimReplace)\n\n  // normalize spaces\n  range = range.split(/\\s+/).join(' ')\n\n  // At this point, the range is completely trimmed and\n  // ready to be split into comparators.\n\n  var compRe = loose ? re[t.COMPARATORLOOSE] : re[t.COMPARATOR]\n  var set = range.split(' ').map(function (comp) {\n    return parseComparator(comp, this.options)\n  }, this).join(' ').split(/\\s+/)\n  if (this.options.loose) {\n    // in loose mode, throw out any that are not valid comparators\n    set = set.filter(function (comp) {\n      return !!comp.match(compRe)\n    })\n  }\n  set = set.map(function (comp) {\n    return new Comparator(comp, this.options)\n  }, this)\n\n  return set\n}\n\nRange.prototype.intersects = function (range, options) {\n  if (!(range instanceof Range)) {\n    throw new TypeError('a Range is required')\n  }\n\n  return this.set.some(function (thisComparators) {\n    return (\n      isSatisfiable(thisComparators, options) &&\n      range.set.some(function (rangeComparators) {\n        return (\n          isSatisfiable(rangeComparators, options) &&\n          thisComparators.every(function (thisComparator) {\n            return rangeComparators.every(function (rangeComparator) {\n              return thisComparator.intersects(rangeComparator, options)\n            })\n          })\n        )\n      })\n    )\n  })\n}\n\n// take a set of comparators and determine whether there\n// exists a version which can satisfy it\nfunction isSatisfiable (comparators, options) {\n  var result = true\n  var remainingComparators = comparators.slice()\n  var testComparator = remainingComparators.pop()\n\n  while (result && remainingComparators.length) {\n    result = remainingComparators.every(function (otherComparator) {\n      return testComparator.intersects(otherComparator, options)\n    })\n\n    testComparator = remainingComparators.pop()\n  }\n\n  return result\n}\n\n// Mostly just for testing and legacy API reasons\nexports.toComparators = toComparators\nfunction toComparators (range, options) {\n  return new Range(range, options).set.map(function (comp) {\n    return comp.map(function (c) {\n      return c.value\n    }).join(' ').trim().split(' ')\n  })\n}\n\n// comprised of xranges, tildes, stars, and gtlt's at this point.\n// already replaced the hyphen ranges\n// turn into a set of JUST comparators.\nfunction parseComparator (comp, options) {\n  debug('comp', comp, options)\n  comp = replaceCarets(comp, options)\n  debug('caret', comp)\n  comp = replaceTildes(comp, options)\n  debug('tildes', comp)\n  comp = replaceXRanges(comp, options)\n  debug('xrange', comp)\n  comp = replaceStars(comp, options)\n  debug('stars', comp)\n  return comp\n}\n\nfunction isX (id) {\n  return !id || id.toLowerCase() === 'x' || id === '*'\n}\n\n// ~, ~> --> * (any, kinda silly)\n// ~2, ~2.x, ~2.x.x, ~>2, ~>2.x ~>2.x.x --> >=2.0.0 <3.0.0\n// ~2.0, ~2.0.x, ~>2.0, ~>2.0.x --> >=2.0.0 <2.1.0\n// ~1.2, ~1.2.x, ~>1.2, ~>1.2.x --> >=1.2.0 <1.3.0\n// ~1.2.3, ~>1.2.3 --> >=1.2.3 <1.3.0\n// ~1.2.0, ~>1.2.0 --> >=1.2.0 <1.3.0\nfunction replaceTildes (comp, options) {\n  return comp.trim().split(/\\s+/).map(function (comp) {\n    return replaceTilde(comp, options)\n  }).join(' ')\n}\n\nfunction replaceTilde (comp, options) {\n  var r = options.loose ? re[t.TILDELOOSE] : re[t.TILDE]\n  return comp.replace(r, function (_, M, m, p, pr) {\n    debug('tilde', comp, _, M, m, p, pr)\n    var ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0'\n    } else if (isX(p)) {\n      // ~1.2 == >=1.2.0 <1.3.0\n      ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0'\n    } else if (pr) {\n      debug('replaceTilde pr', pr)\n      ret = '>=' + M + '.' + m + '.' + p + '-' + pr +\n            ' <' + M + '.' + (+m + 1) + '.0'\n    } else {\n      // ~1.2.3 == >=1.2.3 <1.3.0\n      ret = '>=' + M + '.' + m + '.' + p +\n            ' <' + M + '.' + (+m + 1) + '.0'\n    }\n\n    debug('tilde return', ret)\n    return ret\n  })\n}\n\n// ^ --> * (any, kinda silly)\n// ^2, ^2.x, ^2.x.x --> >=2.0.0 <3.0.0\n// ^2.0, ^2.0.x --> >=2.0.0 <3.0.0\n// ^1.2, ^1.2.x --> >=1.2.0 <2.0.0\n// ^1.2.3 --> >=1.2.3 <2.0.0\n// ^1.2.0 --> >=1.2.0 <2.0.0\nfunction replaceCarets (comp, options) {\n  return comp.trim().split(/\\s+/).map(function (comp) {\n    return replaceCaret(comp, options)\n  }).join(' ')\n}\n\nfunction replaceCaret (comp, options) {\n  debug('caret', comp, options)\n  var r = options.loose ? re[t.CARETLOOSE] : re[t.CARET]\n  return comp.replace(r, function (_, M, m, p, pr) {\n    debug('caret', comp, _, M, m, p, pr)\n    var ret\n\n    if (isX(M)) {\n      ret = ''\n    } else if (isX(m)) {\n      ret = '>=' + M + '.0.0 <' + (+M + 1) + '.0.0'\n    } else if (isX(p)) {\n      if (M === '0') {\n        ret = '>=' + M + '.' + m + '.0 <' + M + '.' + (+m + 1) + '.0'\n      } else {\n        ret = '>=' + M + '.' + m + '.0 <' + (+M + 1) + '.0.0'\n      }\n    } else if (pr) {\n      debug('replaceCaret pr', pr)\n      if (M === '0') {\n        if (m === '0') {\n          ret = '>=' + M + '.' + m + '.' + p + '-' + pr +\n                ' <' + M + '.' + m + '.' + (+p + 1)\n        } else {\n          ret = '>=' + M + '.' + m + '.' + p + '-' + pr +\n                ' <' + M + '.' + (+m + 1) + '.0'\n        }\n      } else {\n        ret = '>=' + M + '.' + m + '.' + p + '-' + pr +\n              ' <' + (+M + 1) + '.0.0'\n      }\n    } else {\n      debug('no pr')\n      if (M === '0') {\n        if (m === '0') {\n          ret = '>=' + M + '.' + m + '.' + p +\n                ' <' + M + '.' + m + '.' + (+p + 1)\n        } else {\n          ret = '>=' + M + '.' + m + '.' + p +\n                ' <' + M + '.' + (+m + 1) + '.0'\n        }\n      } else {\n        ret = '>=' + M + '.' + m + '.' + p +\n              ' <' + (+M + 1) + '.0.0'\n      }\n    }\n\n    debug('caret return', ret)\n    return ret\n  })\n}\n\nfunction replaceXRanges (comp, options) {\n  debug('replaceXRanges', comp, options)\n  return comp.split(/\\s+/).map(function (comp) {\n    return replaceXRange(comp, options)\n  }).join(' ')\n}\n\nfunction replaceXRange (comp, options) {\n  comp = comp.trim()\n  var r = options.loose ? re[t.XRANGELOOSE] : re[t.XRANGE]\n  return comp.replace(r, function (ret, gtlt, M, m, p, pr) {\n    debug('xRange', comp, ret, gtlt, M, m, p, pr)\n    var xM = isX(M)\n    var xm = xM || isX(m)\n    var xp = xm || isX(p)\n    var anyX = xp\n\n    if (gtlt === '=' && anyX) {\n      gtlt = ''\n    }\n\n    // if we're including prereleases in the match, then we need\n    // to fix this to -0, the lowest possible prerelease value\n    pr = options.includePrerelease ? '-0' : ''\n\n    if (xM) {\n      if (gtlt === '>' || gtlt === '<') {\n        // nothing is allowed\n        ret = '<0.0.0-0'\n      } else {\n        // nothing is forbidden\n        ret = '*'\n      }\n    } else if (gtlt && anyX) {\n      // we know patch is an x, because we have any x at all.\n      // replace X with 0\n      if (xm) {\n        m = 0\n      }\n      p = 0\n\n      if (gtlt === '>') {\n        // >1 => >=2.0.0\n        // >1.2 => >=1.3.0\n        // >1.2.3 => >= 1.2.4\n        gtlt = '>='\n        if (xm) {\n          M = +M + 1\n          m = 0\n          p = 0\n        } else {\n          m = +m + 1\n          p = 0\n        }\n      } else if (gtlt === '<=') {\n        // <=0.7.x is actually <0.8.0, since any 0.7.x should\n        // pass.  Similarly, <=7.x is actually <8.0.0, etc.\n        gtlt = '<'\n        if (xm) {\n          M = +M + 1\n        } else {\n          m = +m + 1\n        }\n      }\n\n      ret = gtlt + M + '.' + m + '.' + p + pr\n    } else if (xm) {\n      ret = '>=' + M + '.0.0' + pr + ' <' + (+M + 1) + '.0.0' + pr\n    } else if (xp) {\n      ret = '>=' + M + '.' + m + '.0' + pr +\n        ' <' + M + '.' + (+m + 1) + '.0' + pr\n    }\n\n    debug('xRange return', ret)\n\n    return ret\n  })\n}\n\n// Because * is AND-ed with everything else in the comparator,\n// and '' means \"any version\", just remove the *s entirely.\nfunction replaceStars (comp, options) {\n  debug('replaceStars', comp, options)\n  // Looseness is ignored here.  star is always as loose as it gets!\n  return comp.trim().replace(re[t.STAR], '')\n}\n\n// This function is passed to string.replace(re[t.HYPHENRANGE])\n// M, m, patch, prerelease, build\n// 1.2 - 3.4.5 => >=1.2.0 <=3.4.5\n// 1.2.3 - 3.4 => >=1.2.0 <3.5.0 Any 3.4.x will do\n// 1.2 - 3.4 => >=1.2.0 <3.5.0\nfunction hyphenReplace ($0,\n  from, fM, fm, fp, fpr, fb,\n  to, tM, tm, tp, tpr, tb) {\n  if (isX(fM)) {\n    from = ''\n  } else if (isX(fm)) {\n    from = '>=' + fM + '.0.0'\n  } else if (isX(fp)) {\n    from = '>=' + fM + '.' + fm + '.0'\n  } else {\n    from = '>=' + from\n  }\n\n  if (isX(tM)) {\n    to = ''\n  } else if (isX(tm)) {\n    to = '<' + (+tM + 1) + '.0.0'\n  } else if (isX(tp)) {\n    to = '<' + tM + '.' + (+tm + 1) + '.0'\n  } else if (tpr) {\n    to = '<=' + tM + '.' + tm + '.' + tp + '-' + tpr\n  } else {\n    to = '<=' + to\n  }\n\n  return (from + ' ' + to).trim()\n}\n\n// if ANY of the sets match ALL of its comparators, then pass\nRange.prototype.test = function (version) {\n  if (!version) {\n    return false\n  }\n\n  if (typeof version === 'string') {\n    try {\n      version = new SemVer(version, this.options)\n    } catch (er) {\n      return false\n    }\n  }\n\n  for (var i = 0; i < this.set.length; i++) {\n    if (testSet(this.set[i], version, this.options)) {\n      return true\n    }\n  }\n  return false\n}\n\nfunction testSet (set, version, options) {\n  for (var i = 0; i < set.length; i++) {\n    if (!set[i].test(version)) {\n      return false\n    }\n  }\n\n  if (version.prerelease.length && !options.includePrerelease) {\n    // Find the set of versions that are allowed to have prereleases\n    // For example, ^1.2.3-pr.1 desugars to >=1.2.3-pr.1 <2.0.0\n    // That should allow `1.2.3-pr.2` to pass.\n    // However, `1.2.4-alpha.notready` should NOT be allowed,\n    // even though it's within the range set by the comparators.\n    for (i = 0; i < set.length; i++) {\n      debug(set[i].semver)\n      if (set[i].semver === ANY) {\n        continue\n      }\n\n      if (set[i].semver.prerelease.length > 0) {\n        var allowed = set[i].semver\n        if (allowed.major === version.major &&\n            allowed.minor === version.minor &&\n            allowed.patch === version.patch) {\n          return true\n        }\n      }\n    }\n\n    // Version has a -pre, but it's not one of the ones we like.\n    return false\n  }\n\n  return true\n}\n\nexports.satisfies = satisfies\nfunction satisfies (version, range, options) {\n  try {\n    range = new Range(range, options)\n  } catch (er) {\n    return false\n  }\n  return range.test(version)\n}\n\nexports.maxSatisfying = maxSatisfying\nfunction maxSatisfying (versions, range, options) {\n  var max = null\n  var maxSV = null\n  try {\n    var rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach(function (v) {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!max || maxSV.compare(v) === -1) {\n        // compare(max, v, true)\n        max = v\n        maxSV = new SemVer(max, options)\n      }\n    }\n  })\n  return max\n}\n\nexports.minSatisfying = minSatisfying\nfunction minSatisfying (versions, range, options) {\n  var min = null\n  var minSV = null\n  try {\n    var rangeObj = new Range(range, options)\n  } catch (er) {\n    return null\n  }\n  versions.forEach(function (v) {\n    if (rangeObj.test(v)) {\n      // satisfies(v, range, options)\n      if (!min || minSV.compare(v) === 1) {\n        // compare(min, v, true)\n        min = v\n        minSV = new SemVer(min, options)\n      }\n    }\n  })\n  return min\n}\n\nexports.minVersion = minVersion\nfunction minVersion (range, loose) {\n  range = new Range(range, loose)\n\n  var minver = new SemVer('0.0.0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = new SemVer('0.0.0-0')\n  if (range.test(minver)) {\n    return minver\n  }\n\n  minver = null\n  for (var i = 0; i < range.set.length; ++i) {\n    var comparators = range.set[i]\n\n    comparators.forEach(function (comparator) {\n      // Clone to avoid manipulating the comparator's semver object.\n      var compver = new SemVer(comparator.semver.version)\n      switch (comparator.operator) {\n        case '>':\n          if (compver.prerelease.length === 0) {\n            compver.patch++\n          } else {\n            compver.prerelease.push(0)\n          }\n          compver.raw = compver.format()\n          /* fallthrough */\n        case '':\n        case '>=':\n          if (!minver || gt(minver, compver)) {\n            minver = compver\n          }\n          break\n        case '<':\n        case '<=':\n          /* Ignore maximum versions */\n          break\n        /* istanbul ignore next */\n        default:\n          throw new Error('Unexpected operation: ' + comparator.operator)\n      }\n    })\n  }\n\n  if (minver && range.test(minver)) {\n    return minver\n  }\n\n  return null\n}\n\nexports.validRange = validRange\nfunction validRange (range, options) {\n  try {\n    // Return '*' instead of '' so that truthiness works.\n    // This will throw if it's invalid anyway\n    return new Range(range, options).range || '*'\n  } catch (er) {\n    return null\n  }\n}\n\n// Determine if version is less than all the versions possible in the range\nexports.ltr = ltr\nfunction ltr (version, range, options) {\n  return outside(version, range, '<', options)\n}\n\n// Determine if version is greater than all the versions possible in the range.\nexports.gtr = gtr\nfunction gtr (version, range, options) {\n  return outside(version, range, '>', options)\n}\n\nexports.outside = outside\nfunction outside (version, range, hilo, options) {\n  version = new SemVer(version, options)\n  range = new Range(range, options)\n\n  var gtfn, ltefn, ltfn, comp, ecomp\n  switch (hilo) {\n    case '>':\n      gtfn = gt\n      ltefn = lte\n      ltfn = lt\n      comp = '>'\n      ecomp = '>='\n      break\n    case '<':\n      gtfn = lt\n      ltefn = gte\n      ltfn = gt\n      comp = '<'\n      ecomp = '<='\n      break\n    default:\n      throw new TypeError('Must provide a hilo val of \"<\" or \">\"')\n  }\n\n  // If it satisifes the range it is not outside\n  if (satisfies(version, range, options)) {\n    return false\n  }\n\n  // From now on, variable terms are as if we're in \"gtr\" mode.\n  // but note that everything is flipped for the \"ltr\" function.\n\n  for (var i = 0; i < range.set.length; ++i) {\n    var comparators = range.set[i]\n\n    var high = null\n    var low = null\n\n    comparators.forEach(function (comparator) {\n      if (comparator.semver === ANY) {\n        comparator = new Comparator('>=0.0.0')\n      }\n      high = high || comparator\n      low = low || comparator\n      if (gtfn(comparator.semver, high.semver, options)) {\n        high = comparator\n      } else if (ltfn(comparator.semver, low.semver, options)) {\n        low = comparator\n      }\n    })\n\n    // If the edge version comparator has a operator then our version\n    // isn't outside it\n    if (high.operator === comp || high.operator === ecomp) {\n      return false\n    }\n\n    // If the lowest version comparator has an operator and our version\n    // is less than it then it isn't higher than the range\n    if ((!low.operator || low.operator === comp) &&\n        ltefn(version, low.semver)) {\n      return false\n    } else if (low.operator === ecomp && ltfn(version, low.semver)) {\n      return false\n    }\n  }\n  return true\n}\n\nexports.prerelease = prerelease\nfunction prerelease (version, options) {\n  var parsed = parse(version, options)\n  return (parsed && parsed.prerelease.length) ? parsed.prerelease : null\n}\n\nexports.intersects = intersects\nfunction intersects (r1, r2, options) {\n  r1 = new Range(r1, options)\n  r2 = new Range(r2, options)\n  return r1.intersects(r2)\n}\n\nexports.coerce = coerce\nfunction coerce (version, options) {\n  if (version instanceof SemVer) {\n    return version\n  }\n\n  if (typeof version === 'number') {\n    version = String(version)\n  }\n\n  if (typeof version !== 'string') {\n    return null\n  }\n\n  options = options || {}\n\n  var match = null\n  if (!options.rtl) {\n    match = version.match(re[t.COERCE])\n  } else {\n    // Find the right-most coercible string that does not share\n    // a terminus with a more left-ward coercible string.\n    // Eg, '1.2.3.4' wants to coerce '2.3.4', not '3.4' or '4'\n    //\n    // Walk through the string checking with a /g regexp\n    // Manually set the index so as to pick up overlapping matches.\n    // Stop when we get a match that ends at the string end, since no\n    // coercible string can be more right-ward without the same terminus.\n    var next\n    while ((next = re[t.COERCERTL].exec(version)) &&\n      (!match || match.index + match[0].length !== version.length)\n    ) {\n      if (!match ||\n          next.index + next[0].length !== match.index + match[0].length) {\n        match = next\n      }\n      re[t.COERCERTL].lastIndex = next.index + next[1].length + next[2].length\n    }\n    // leave it in a clean state\n    re[t.COERCERTL].lastIndex = -1\n  }\n\n  if (match === null) {\n    return null\n  }\n\n  return parse(match[2] +\n    '.' + (match[3] || '0') +\n    '.' + (match[4] || '0'), options)\n}\n", "(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n  typeof define === 'function' && define.amd ? define(['exports'], factory) :\n  (global = global || self, factory(global.acorn = {}));\n}(this, (function (exports) { 'use strict';\n\n  // Reserved word lists for various dialects of the language\n\n  var reservedWords = {\n    3: \"abstract boolean byte char class double enum export extends final float goto implements import int interface long native package private protected public short static super synchronized throws transient volatile\",\n    5: \"class enum extends super const export import\",\n    6: \"enum\",\n    strict: \"implements interface let package private protected public static yield\",\n    strictBind: \"eval arguments\"\n  };\n\n  // And the keywords\n\n  var ecma5AndLessKeywords = \"break case catch continue debugger default do else finally for function if return switch throw try var while with null true false instanceof typeof void delete new in this\";\n\n  var keywords = {\n    5: ecma5AndLessKeywords,\n    \"5module\": ecma5AndLessKeywords + \" export import\",\n    6: ecma5AndLessKeywords + \" const class extends export import super\"\n  };\n\n  var keywordRelationalOperator = /^in(stanceof)?$/;\n\n  // ## Character categories\n\n  // Big ugly regular expressions that match characters in the\n  // whitespace, identifier, and identifier-start categories. These\n  // are only applied when a character is found to actually have a\n  // code point above 128.\n  // Generated by `bin/generate-identifier-regex.js`.\n  var nonASCIIidentifierStartChars = \"\\xaa\\xb5\\xba\\xc0-\\xd6\\xd8-\\xf6\\xf8-\\u02c1\\u02c6-\\u02d1\\u02e0-\\u02e4\\u02ec\\u02ee\\u0370-\\u0374\\u0376\\u0377\\u037a-\\u037d\\u037f\\u0386\\u0388-\\u038a\\u038c\\u038e-\\u03a1\\u03a3-\\u03f5\\u03f7-\\u0481\\u048a-\\u052f\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05d0-\\u05ea\\u05ef-\\u05f2\\u0620-\\u064a\\u066e\\u066f\\u0671-\\u06d3\\u06d5\\u06e5\\u06e6\\u06ee\\u06ef\\u06fa-\\u06fc\\u06ff\\u0710\\u0712-\\u072f\\u074d-\\u07a5\\u07b1\\u07ca-\\u07ea\\u07f4\\u07f5\\u07fa\\u0800-\\u0815\\u081a\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086a\\u08a0-\\u08b4\\u08b6-\\u08c7\\u0904-\\u0939\\u093d\\u0950\\u0958-\\u0961\\u0971-\\u0980\\u0985-\\u098c\\u098f\\u0990\\u0993-\\u09a8\\u09aa-\\u09b0\\u09b2\\u09b6-\\u09b9\\u09bd\\u09ce\\u09dc\\u09dd\\u09df-\\u09e1\\u09f0\\u09f1\\u09fc\\u0a05-\\u0a0a\\u0a0f\\u0a10\\u0a13-\\u0a28\\u0a2a-\\u0a30\\u0a32\\u0a33\\u0a35\\u0a36\\u0a38\\u0a39\\u0a59-\\u0a5c\\u0a5e\\u0a72-\\u0a74\\u0a85-\\u0a8d\\u0a8f-\\u0a91\\u0a93-\\u0aa8\\u0aaa-\\u0ab0\\u0ab2\\u0ab3\\u0ab5-\\u0ab9\\u0abd\\u0ad0\\u0ae0\\u0ae1\\u0af9\\u0b05-\\u0b0c\\u0b0f\\u0b10\\u0b13-\\u0b28\\u0b2a-\\u0b30\\u0b32\\u0b33\\u0b35-\\u0b39\\u0b3d\\u0b5c\\u0b5d\\u0b5f-\\u0b61\\u0b71\\u0b83\\u0b85-\\u0b8a\\u0b8e-\\u0b90\\u0b92-\\u0b95\\u0b99\\u0b9a\\u0b9c\\u0b9e\\u0b9f\\u0ba3\\u0ba4\\u0ba8-\\u0baa\\u0bae-\\u0bb9\\u0bd0\\u0c05-\\u0c0c\\u0c0e-\\u0c10\\u0c12-\\u0c28\\u0c2a-\\u0c39\\u0c3d\\u0c58-\\u0c5a\\u0c60\\u0c61\\u0c80\\u0c85-\\u0c8c\\u0c8e-\\u0c90\\u0c92-\\u0ca8\\u0caa-\\u0cb3\\u0cb5-\\u0cb9\\u0cbd\\u0cde\\u0ce0\\u0ce1\\u0cf1\\u0cf2\\u0d04-\\u0d0c\\u0d0e-\\u0d10\\u0d12-\\u0d3a\\u0d3d\\u0d4e\\u0d54-\\u0d56\\u0d5f-\\u0d61\\u0d7a-\\u0d7f\\u0d85-\\u0d96\\u0d9a-\\u0db1\\u0db3-\\u0dbb\\u0dbd\\u0dc0-\\u0dc6\\u0e01-\\u0e30\\u0e32\\u0e33\\u0e40-\\u0e46\\u0e81\\u0e82\\u0e84\\u0e86-\\u0e8a\\u0e8c-\\u0ea3\\u0ea5\\u0ea7-\\u0eb0\\u0eb2\\u0eb3\\u0ebd\\u0ec0-\\u0ec4\\u0ec6\\u0edc-\\u0edf\\u0f00\\u0f40-\\u0f47\\u0f49-\\u0f6c\\u0f88-\\u0f8c\\u1000-\\u102a\\u103f\\u1050-\\u1055\\u105a-\\u105d\\u1061\\u1065\\u1066\\u106e-\\u1070\\u1075-\\u1081\\u108e\\u10a0-\\u10c5\\u10c7\\u10cd\\u10d0-\\u10fa\\u10fc-\\u1248\\u124a-\\u124d\\u1250-\\u1256\\u1258\\u125a-\\u125d\\u1260-\\u1288\\u128a-\\u128d\\u1290-\\u12b0\\u12b2-\\u12b5\\u12b8-\\u12be\\u12c0\\u12c2-\\u12c5\\u12c8-\\u12d6\\u12d8-\\u1310\\u1312-\\u1315\\u1318-\\u135a\\u1380-\\u138f\\u13a0-\\u13f5\\u13f8-\\u13fd\\u1401-\\u166c\\u166f-\\u167f\\u1681-\\u169a\\u16a0-\\u16ea\\u16ee-\\u16f8\\u1700-\\u170c\\u170e-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176c\\u176e-\\u1770\\u1780-\\u17b3\\u17d7\\u17dc\\u1820-\\u1878\\u1880-\\u18a8\\u18aa\\u18b0-\\u18f5\\u1900-\\u191e\\u1950-\\u196d\\u1970-\\u1974\\u1980-\\u19ab\\u19b0-\\u19c9\\u1a00-\\u1a16\\u1a20-\\u1a54\\u1aa7\\u1b05-\\u1b33\\u1b45-\\u1b4b\\u1b83-\\u1ba0\\u1bae\\u1baf\\u1bba-\\u1be5\\u1c00-\\u1c23\\u1c4d-\\u1c4f\\u1c5a-\\u1c7d\\u1c80-\\u1c88\\u1c90-\\u1cba\\u1cbd-\\u1cbf\\u1ce9-\\u1cec\\u1cee-\\u1cf3\\u1cf5\\u1cf6\\u1cfa\\u1d00-\\u1dbf\\u1e00-\\u1f15\\u1f18-\\u1f1d\\u1f20-\\u1f45\\u1f48-\\u1f4d\\u1f50-\\u1f57\\u1f59\\u1f5b\\u1f5d\\u1f5f-\\u1f7d\\u1f80-\\u1fb4\\u1fb6-\\u1fbc\\u1fbe\\u1fc2-\\u1fc4\\u1fc6-\\u1fcc\\u1fd0-\\u1fd3\\u1fd6-\\u1fdb\\u1fe0-\\u1fec\\u1ff2-\\u1ff4\\u1ff6-\\u1ffc\\u2071\\u207f\\u2090-\\u209c\\u2102\\u2107\\u210a-\\u2113\\u2115\\u2118-\\u211d\\u2124\\u2126\\u2128\\u212a-\\u2139\\u213c-\\u213f\\u2145-\\u2149\\u214e\\u2160-\\u2188\\u2c00-\\u2c2e\\u2c30-\\u2c5e\\u2c60-\\u2ce4\\u2ceb-\\u2cee\\u2cf2\\u2cf3\\u2d00-\\u2d25\\u2d27\\u2d2d\\u2d30-\\u2d67\\u2d6f\\u2d80-\\u2d96\\u2da0-\\u2da6\\u2da8-\\u2dae\\u2db0-\\u2db6\\u2db8-\\u2dbe\\u2dc0-\\u2dc6\\u2dc8-\\u2dce\\u2dd0-\\u2dd6\\u2dd8-\\u2dde\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303c\\u3041-\\u3096\\u309b-\\u309f\\u30a1-\\u30fa\\u30fc-\\u30ff\\u3105-\\u312f\\u3131-\\u318e\\u31a0-\\u31bf\\u31f0-\\u31ff\\u3400-\\u4dbf\\u4e00-\\u9ffc\\ua000-\\ua48c\\ua4d0-\\ua4fd\\ua500-\\ua60c\\ua610-\\ua61f\\ua62a\\ua62b\\ua640-\\ua66e\\ua67f-\\ua69d\\ua6a0-\\ua6ef\\ua717-\\ua71f\\ua722-\\ua788\\ua78b-\\ua7bf\\ua7c2-\\ua7ca\\ua7f5-\\ua801\\ua803-\\ua805\\ua807-\\ua80a\\ua80c-\\ua822\\ua840-\\ua873\\ua882-\\ua8b3\\ua8f2-\\ua8f7\\ua8fb\\ua8fd\\ua8fe\\ua90a-\\ua925\\ua930-\\ua946\\ua960-\\ua97c\\ua984-\\ua9b2\\ua9cf\\ua9e0-\\ua9e4\\ua9e6-\\ua9ef\\ua9fa-\\ua9fe\\uaa00-\\uaa28\\uaa40-\\uaa42\\uaa44-\\uaa4b\\uaa60-\\uaa76\\uaa7a\\uaa7e-\\uaaaf\\uaab1\\uaab5\\uaab6\\uaab9-\\uaabd\\uaac0\\uaac2\\uaadb-\\uaadd\\uaae0-\\uaaea\\uaaf2-\\uaaf4\\uab01-\\uab06\\uab09-\\uab0e\\uab11-\\uab16\\uab20-\\uab26\\uab28-\\uab2e\\uab30-\\uab5a\\uab5c-\\uab69\\uab70-\\uabe2\\uac00-\\ud7a3\\ud7b0-\\ud7c6\\ud7cb-\\ud7fb\\uf900-\\ufa6d\\ufa70-\\ufad9\\ufb00-\\ufb06\\ufb13-\\ufb17\\ufb1d\\ufb1f-\\ufb28\\ufb2a-\\ufb36\\ufb38-\\ufb3c\\ufb3e\\ufb40\\ufb41\\ufb43\\ufb44\\ufb46-\\ufbb1\\ufbd3-\\ufd3d\\ufd50-\\ufd8f\\ufd92-\\ufdc7\\ufdf0-\\ufdfb\\ufe70-\\ufe74\\ufe76-\\ufefc\\uff21-\\uff3a\\uff41-\\uff5a\\uff66-\\uffbe\\uffc2-\\uffc7\\uffca-\\uffcf\\uffd2-\\uffd7\\uffda-\\uffdc\";\n  var nonASCIIidentifierChars = \"\\u200c\\u200d\\xb7\\u0300-\\u036f\\u0387\\u0483-\\u0487\\u0591-\\u05bd\\u05bf\\u05c1\\u05c2\\u05c4\\u05c5\\u05c7\\u0610-\\u061a\\u064b-\\u0669\\u0670\\u06d6-\\u06dc\\u06df-\\u06e4\\u06e7\\u06e8\\u06ea-\\u06ed\\u06f0-\\u06f9\\u0711\\u0730-\\u074a\\u07a6-\\u07b0\\u07c0-\\u07c9\\u07eb-\\u07f3\\u07fd\\u0816-\\u0819\\u081b-\\u0823\\u0825-\\u0827\\u0829-\\u082d\\u0859-\\u085b\\u08d3-\\u08e1\\u08e3-\\u0903\\u093a-\\u093c\\u093e-\\u094f\\u0951-\\u0957\\u0962\\u0963\\u0966-\\u096f\\u0981-\\u0983\\u09bc\\u09be-\\u09c4\\u09c7\\u09c8\\u09cb-\\u09cd\\u09d7\\u09e2\\u09e3\\u09e6-\\u09ef\\u09fe\\u0a01-\\u0a03\\u0a3c\\u0a3e-\\u0a42\\u0a47\\u0a48\\u0a4b-\\u0a4d\\u0a51\\u0a66-\\u0a71\\u0a75\\u0a81-\\u0a83\\u0abc\\u0abe-\\u0ac5\\u0ac7-\\u0ac9\\u0acb-\\u0acd\\u0ae2\\u0ae3\\u0ae6-\\u0aef\\u0afa-\\u0aff\\u0b01-\\u0b03\\u0b3c\\u0b3e-\\u0b44\\u0b47\\u0b48\\u0b4b-\\u0b4d\\u0b55-\\u0b57\\u0b62\\u0b63\\u0b66-\\u0b6f\\u0b82\\u0bbe-\\u0bc2\\u0bc6-\\u0bc8\\u0bca-\\u0bcd\\u0bd7\\u0be6-\\u0bef\\u0c00-\\u0c04\\u0c3e-\\u0c44\\u0c46-\\u0c48\\u0c4a-\\u0c4d\\u0c55\\u0c56\\u0c62\\u0c63\\u0c66-\\u0c6f\\u0c81-\\u0c83\\u0cbc\\u0cbe-\\u0cc4\\u0cc6-\\u0cc8\\u0cca-\\u0ccd\\u0cd5\\u0cd6\\u0ce2\\u0ce3\\u0ce6-\\u0cef\\u0d00-\\u0d03\\u0d3b\\u0d3c\\u0d3e-\\u0d44\\u0d46-\\u0d48\\u0d4a-\\u0d4d\\u0d57\\u0d62\\u0d63\\u0d66-\\u0d6f\\u0d81-\\u0d83\\u0dca\\u0dcf-\\u0dd4\\u0dd6\\u0dd8-\\u0ddf\\u0de6-\\u0def\\u0df2\\u0df3\\u0e31\\u0e34-\\u0e3a\\u0e47-\\u0e4e\\u0e50-\\u0e59\\u0eb1\\u0eb4-\\u0ebc\\u0ec8-\\u0ecd\\u0ed0-\\u0ed9\\u0f18\\u0f19\\u0f20-\\u0f29\\u0f35\\u0f37\\u0f39\\u0f3e\\u0f3f\\u0f71-\\u0f84\\u0f86\\u0f87\\u0f8d-\\u0f97\\u0f99-\\u0fbc\\u0fc6\\u102b-\\u103e\\u1040-\\u1049\\u1056-\\u1059\\u105e-\\u1060\\u1062-\\u1064\\u1067-\\u106d\\u1071-\\u1074\\u1082-\\u108d\\u108f-\\u109d\\u135d-\\u135f\\u1369-\\u1371\\u1712-\\u1714\\u1732-\\u1734\\u1752\\u1753\\u1772\\u1773\\u17b4-\\u17d3\\u17dd\\u17e0-\\u17e9\\u180b-\\u180d\\u1810-\\u1819\\u18a9\\u1920-\\u192b\\u1930-\\u193b\\u1946-\\u194f\\u19d0-\\u19da\\u1a17-\\u1a1b\\u1a55-\\u1a5e\\u1a60-\\u1a7c\\u1a7f-\\u1a89\\u1a90-\\u1a99\\u1ab0-\\u1abd\\u1abf\\u1ac0\\u1b00-\\u1b04\\u1b34-\\u1b44\\u1b50-\\u1b59\\u1b6b-\\u1b73\\u1b80-\\u1b82\\u1ba1-\\u1bad\\u1bb0-\\u1bb9\\u1be6-\\u1bf3\\u1c24-\\u1c37\\u1c40-\\u1c49\\u1c50-\\u1c59\\u1cd0-\\u1cd2\\u1cd4-\\u1ce8\\u1ced\\u1cf4\\u1cf7-\\u1cf9\\u1dc0-\\u1df9\\u1dfb-\\u1dff\\u203f\\u2040\\u2054\\u20d0-\\u20dc\\u20e1\\u20e5-\\u20f0\\u2cef-\\u2cf1\\u2d7f\\u2de0-\\u2dff\\u302a-\\u302f\\u3099\\u309a\\ua620-\\ua629\\ua66f\\ua674-\\ua67d\\ua69e\\ua69f\\ua6f0\\ua6f1\\ua802\\ua806\\ua80b\\ua823-\\ua827\\ua82c\\ua880\\ua881\\ua8b4-\\ua8c5\\ua8d0-\\ua8d9\\ua8e0-\\ua8f1\\ua8ff-\\ua909\\ua926-\\ua92d\\ua947-\\ua953\\ua980-\\ua983\\ua9b3-\\ua9c0\\ua9d0-\\ua9d9\\ua9e5\\ua9f0-\\ua9f9\\uaa29-\\uaa36\\uaa43\\uaa4c\\uaa4d\\uaa50-\\uaa59\\uaa7b-\\uaa7d\\uaab0\\uaab2-\\uaab4\\uaab7\\uaab8\\uaabe\\uaabf\\uaac1\\uaaeb-\\uaaef\\uaaf5\\uaaf6\\uabe3-\\uabea\\uabec\\uabed\\uabf0-\\uabf9\\ufb1e\\ufe00-\\ufe0f\\ufe20-\\ufe2f\\ufe33\\ufe34\\ufe4d-\\ufe4f\\uff10-\\uff19\\uff3f\";\n\n  var nonASCIIidentifierStart = new RegExp(\"[\" + nonASCIIidentifierStartChars + \"]\");\n  var nonASCIIidentifier = new RegExp(\"[\" + nonASCIIidentifierStartChars + nonASCIIidentifierChars + \"]\");\n\n  nonASCIIidentifierStartChars = nonASCIIidentifierChars = null;\n\n  // These are a run-length and offset encoded representation of the\n  // >0xffff code points that are a valid part of identifiers. The\n  // offset starts at 0x10000, and each pair of numbers represents an\n  // offset to the next range, and then a size of the range. They were\n  // generated by bin/generate-identifier-regex.js\n\n  // eslint-disable-next-line comma-spacing\n  var astralIdentifierStartCodes = [0,11,2,25,2,18,2,1,2,14,3,13,35,122,70,52,268,28,4,48,48,31,14,29,6,37,11,29,3,35,5,7,2,4,43,157,19,35,5,35,5,39,9,51,157,310,10,21,11,7,153,5,3,0,2,43,2,1,4,0,3,22,11,22,10,30,66,18,2,1,11,21,11,25,71,55,7,1,65,0,16,3,2,2,2,28,43,28,4,28,36,7,2,27,28,53,11,21,11,18,14,17,111,72,56,50,14,50,14,35,349,41,7,1,79,28,11,0,9,21,107,20,28,22,13,52,76,44,33,24,27,35,30,0,3,0,9,34,4,0,13,47,15,3,22,0,2,0,36,17,2,24,85,6,2,0,2,3,2,14,2,9,8,46,39,7,3,1,3,21,2,6,2,1,2,4,4,0,19,0,13,4,159,52,19,3,21,2,31,47,21,1,2,0,185,46,42,3,37,47,21,0,60,42,14,0,72,26,230,43,117,63,32,7,3,0,3,7,2,1,2,23,16,0,2,0,95,7,3,38,17,0,2,0,29,0,11,39,8,0,22,0,12,45,20,0,35,56,264,8,2,36,18,0,50,29,113,6,2,1,2,37,22,0,26,5,2,1,2,31,15,0,328,18,190,0,80,921,103,110,18,195,2749,1070,4050,582,8634,568,8,30,114,29,19,47,17,3,32,20,6,18,689,63,129,74,6,0,67,12,65,1,2,0,29,6135,9,1237,43,8,8952,286,50,2,18,3,9,395,2309,106,6,12,4,8,8,9,5991,84,2,70,2,1,3,0,3,1,3,3,2,11,2,0,2,6,2,64,2,3,3,7,2,6,2,27,2,3,2,4,2,0,4,6,2,339,3,24,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,30,2,24,2,7,2357,44,11,6,17,0,370,43,1301,196,60,67,8,0,1205,3,2,26,2,1,2,0,3,0,2,9,2,3,2,0,2,0,7,0,5,0,2,0,2,0,2,2,2,1,2,0,3,0,2,0,2,0,2,0,2,0,2,1,2,0,3,3,2,6,2,3,2,3,2,0,2,9,2,16,6,2,2,4,2,16,4421,42717,35,4148,12,221,3,5761,15,7472,3104,541,1507,4938];\n\n  // eslint-disable-next-line comma-spacing\n  var astralIdentifierCodes = [509,0,227,0,150,4,294,9,1368,2,2,1,6,3,41,2,5,0,166,1,574,3,9,9,370,1,154,10,176,2,54,14,32,9,16,3,46,10,54,9,7,2,37,13,2,9,6,1,45,0,13,2,49,13,9,3,2,11,83,11,7,0,161,11,6,9,7,3,56,1,2,6,3,1,3,2,10,0,11,1,3,6,4,4,193,17,10,9,5,0,82,19,13,9,214,6,3,8,28,1,83,16,16,9,82,12,9,9,84,14,5,9,243,14,166,9,71,5,2,1,3,3,2,0,2,1,13,9,120,6,3,6,4,0,29,9,41,6,2,3,9,0,10,10,47,15,406,7,2,7,17,9,57,21,2,13,123,5,4,0,2,1,2,6,2,0,9,9,49,4,2,1,2,4,9,9,330,3,19306,9,135,4,60,6,26,9,1014,0,2,54,8,3,82,0,12,1,19628,1,5319,4,4,5,9,7,3,6,31,3,149,2,1418,49,513,54,5,49,9,0,15,0,23,4,2,14,1361,6,2,16,3,6,2,1,2,4,262,6,10,9,419,13,1495,6,110,6,6,9,4759,9,787719,239];\n\n  // This has a complexity linear to the value of the code. The\n  // assumption is that looking up astral identifier characters is\n  // rare.\n  function isInAstralSet(code, set) {\n    var pos = 0x10000;\n    for (var i = 0; i < set.length; i += 2) {\n      pos += set[i];\n      if (pos > code) { return false }\n      pos += set[i + 1];\n      if (pos >= code) { return true }\n    }\n  }\n\n  // Test whether a given character code starts an identifier.\n\n  function isIdentifierStart(code, astral) {\n    if (code < 65) { return code === 36 }\n    if (code < 91) { return true }\n    if (code < 97) { return code === 95 }\n    if (code < 123) { return true }\n    if (code <= 0xffff) { return code >= 0xaa && nonASCIIidentifierStart.test(String.fromCharCode(code)) }\n    if (astral === false) { return false }\n    return isInAstralSet(code, astralIdentifierStartCodes)\n  }\n\n  // Test whether a given character is part of an identifier.\n\n  function isIdentifierChar(code, astral) {\n    if (code < 48) { return code === 36 }\n    if (code < 58) { return true }\n    if (code < 65) { return false }\n    if (code < 91) { return true }\n    if (code < 97) { return code === 95 }\n    if (code < 123) { return true }\n    if (code <= 0xffff) { return code >= 0xaa && nonASCIIidentifier.test(String.fromCharCode(code)) }\n    if (astral === false) { return false }\n    return isInAstralSet(code, astralIdentifierStartCodes) || isInAstralSet(code, astralIdentifierCodes)\n  }\n\n  // ## Token types\n\n  // The assignment of fine-grained, information-carrying type objects\n  // allows the tokenizer to store the information it has about a\n  // token in a way that is very cheap for the parser to look up.\n\n  // All token type variables start with an underscore, to make them\n  // easy to recognize.\n\n  // The `beforeExpr` property is used to disambiguate between regular\n  // expressions and divisions. It is set on all token types that can\n  // be followed by an expression (thus, a slash after them would be a\n  // regular expression).\n  //\n  // The `startsExpr` property is used to check if the token ends a\n  // `yield` expression. It is set on all token types that either can\n  // directly start an expression (like a quotation mark) or can\n  // continue an expression (like the body of a string).\n  //\n  // `isLoop` marks a keyword as starting a loop, which is important\n  // to know when parsing a label, in order to allow or disallow\n  // continue jumps to that label.\n\n  var TokenType = function TokenType(label, conf) {\n    if ( conf === void 0 ) conf = {};\n\n    this.label = label;\n    this.keyword = conf.keyword;\n    this.beforeExpr = !!conf.beforeExpr;\n    this.startsExpr = !!conf.startsExpr;\n    this.isLoop = !!conf.isLoop;\n    this.isAssign = !!conf.isAssign;\n    this.prefix = !!conf.prefix;\n    this.postfix = !!conf.postfix;\n    this.binop = conf.binop || null;\n    this.updateContext = null;\n  };\n\n  function binop(name, prec) {\n    return new TokenType(name, {beforeExpr: true, binop: prec})\n  }\n  var beforeExpr = {beforeExpr: true}, startsExpr = {startsExpr: true};\n\n  // Map keyword names to token types.\n\n  var keywords$1 = {};\n\n  // Succinct definitions of keyword token types\n  function kw(name, options) {\n    if ( options === void 0 ) options = {};\n\n    options.keyword = name;\n    return keywords$1[name] = new TokenType(name, options)\n  }\n\n  var types = {\n    num: new TokenType(\"num\", startsExpr),\n    regexp: new TokenType(\"regexp\", startsExpr),\n    string: new TokenType(\"string\", startsExpr),\n    name: new TokenType(\"name\", startsExpr),\n    eof: new TokenType(\"eof\"),\n\n    // Punctuation token types.\n    bracketL: new TokenType(\"[\", {beforeExpr: true, startsExpr: true}),\n    bracketR: new TokenType(\"]\"),\n    braceL: new TokenType(\"{\", {beforeExpr: true, startsExpr: true}),\n    braceR: new TokenType(\"}\"),\n    parenL: new TokenType(\"(\", {beforeExpr: true, startsExpr: true}),\n    parenR: new TokenType(\")\"),\n    comma: new TokenType(\",\", beforeExpr),\n    semi: new TokenType(\";\", beforeExpr),\n    colon: new TokenType(\":\", beforeExpr),\n    dot: new TokenType(\".\"),\n    question: new TokenType(\"?\", beforeExpr),\n    questionDot: new TokenType(\"?.\"),\n    arrow: new TokenType(\"=>\", beforeExpr),\n    template: new TokenType(\"template\"),\n    invalidTemplate: new TokenType(\"invalidTemplate\"),\n    ellipsis: new TokenType(\"...\", beforeExpr),\n    backQuote: new TokenType(\"`\", startsExpr),\n    dollarBraceL: new TokenType(\"${\", {beforeExpr: true, startsExpr: true}),\n\n    // Operators. These carry several kinds of properties to help the\n    // parser use them properly (the presence of these properties is\n    // what categorizes them as operators).\n    //\n    // `binop`, when present, specifies that this operator is a binary\n    // operator, and will refer to its precedence.\n    //\n    // `prefix` and `postfix` mark the operator as a prefix or postfix\n    // unary operator.\n    //\n    // `isAssign` marks all of `=`, `+=`, `-=` etcetera, which act as\n    // binary operators with a very low precedence, that should result\n    // in AssignmentExpression nodes.\n\n    eq: new TokenType(\"=\", {beforeExpr: true, isAssign: true}),\n    assign: new TokenType(\"_=\", {beforeExpr: true, isAssign: true}),\n    incDec: new TokenType(\"++/--\", {prefix: true, postfix: true, startsExpr: true}),\n    prefix: new TokenType(\"!/~\", {beforeExpr: true, prefix: true, startsExpr: true}),\n    logicalOR: binop(\"||\", 1),\n    logicalAND: binop(\"&&\", 2),\n    bitwiseOR: binop(\"|\", 3),\n    bitwiseXOR: binop(\"^\", 4),\n    bitwiseAND: binop(\"&\", 5),\n    equality: binop(\"==/!=/===/!==\", 6),\n    relational: binop(\"</>/<=/>=\", 7),\n    bitShift: binop(\"<</>>/>>>\", 8),\n    plusMin: new TokenType(\"+/-\", {beforeExpr: true, binop: 9, prefix: true, startsExpr: true}),\n    modulo: binop(\"%\", 10),\n    star: binop(\"*\", 10),\n    slash: binop(\"/\", 10),\n    starstar: new TokenType(\"**\", {beforeExpr: true}),\n    coalesce: binop(\"??\", 1),\n\n    // Keyword token types.\n    _break: kw(\"break\"),\n    _case: kw(\"case\", beforeExpr),\n    _catch: kw(\"catch\"),\n    _continue: kw(\"continue\"),\n    _debugger: kw(\"debugger\"),\n    _default: kw(\"default\", beforeExpr),\n    _do: kw(\"do\", {isLoop: true, beforeExpr: true}),\n    _else: kw(\"else\", beforeExpr),\n    _finally: kw(\"finally\"),\n    _for: kw(\"for\", {isLoop: true}),\n    _function: kw(\"function\", startsExpr),\n    _if: kw(\"if\"),\n    _return: kw(\"return\", beforeExpr),\n    _switch: kw(\"switch\"),\n    _throw: kw(\"throw\", beforeExpr),\n    _try: kw(\"try\"),\n    _var: kw(\"var\"),\n    _const: kw(\"const\"),\n    _while: kw(\"while\", {isLoop: true}),\n    _with: kw(\"with\"),\n    _new: kw(\"new\", {beforeExpr: true, startsExpr: true}),\n    _this: kw(\"this\", startsExpr),\n    _super: kw(\"super\", startsExpr),\n    _class: kw(\"class\", startsExpr),\n    _extends: kw(\"extends\", beforeExpr),\n    _export: kw(\"export\"),\n    _import: kw(\"import\", startsExpr),\n    _null: kw(\"null\", startsExpr),\n    _true: kw(\"true\", startsExpr),\n    _false: kw(\"false\", startsExpr),\n    _in: kw(\"in\", {beforeExpr: true, binop: 7}),\n    _instanceof: kw(\"instanceof\", {beforeExpr: true, binop: 7}),\n    _typeof: kw(\"typeof\", {beforeExpr: true, prefix: true, startsExpr: true}),\n    _void: kw(\"void\", {beforeExpr: true, prefix: true, startsExpr: true}),\n    _delete: kw(\"delete\", {beforeExpr: true, prefix: true, startsExpr: true})\n  };\n\n  // Matches a whole line break (where CRLF is considered a single\n  // line break). Used to count lines.\n\n  var lineBreak = /\\r\\n?|\\n|\\u2028|\\u2029/;\n  var lineBreakG = new RegExp(lineBreak.source, \"g\");\n\n  function isNewLine(code, ecma2019String) {\n    return code === 10 || code === 13 || (!ecma2019String && (code === 0x2028 || code === 0x2029))\n  }\n\n  var nonASCIIwhitespace = /[\\u1680\\u2000-\\u200a\\u202f\\u205f\\u3000\\ufeff]/;\n\n  var skipWhiteSpace = /(?:\\s|\\/\\/.*|\\/\\*[^]*?\\*\\/)*/g;\n\n  var ref = Object.prototype;\n  var hasOwnProperty = ref.hasOwnProperty;\n  var toString = ref.toString;\n\n  // Checks if an object has a property.\n\n  function has(obj, propName) {\n    return hasOwnProperty.call(obj, propName)\n  }\n\n  var isArray = Array.isArray || (function (obj) { return (\n    toString.call(obj) === \"[object Array]\"\n  ); });\n\n  function wordsRegexp(words) {\n    return new RegExp(\"^(?:\" + words.replace(/ /g, \"|\") + \")$\")\n  }\n\n  // These are used when `options.locations` is on, for the\n  // `startLoc` and `endLoc` properties.\n\n  var Position = function Position(line, col) {\n    this.line = line;\n    this.column = col;\n  };\n\n  Position.prototype.offset = function offset (n) {\n    return new Position(this.line, this.column + n)\n  };\n\n  var SourceLocation = function SourceLocation(p, start, end) {\n    this.start = start;\n    this.end = end;\n    if (p.sourceFile !== null) { this.source = p.sourceFile; }\n  };\n\n  // The `getLineInfo` function is mostly useful when the\n  // `locations` option is off (for performance reasons) and you\n  // want to find the line/column position for a given character\n  // offset. `input` should be the code string that the offset refers\n  // into.\n\n  function getLineInfo(input, offset) {\n    for (var line = 1, cur = 0;;) {\n      lineBreakG.lastIndex = cur;\n      var match = lineBreakG.exec(input);\n      if (match && match.index < offset) {\n        ++line;\n        cur = match.index + match[0].length;\n      } else {\n        return new Position(line, offset - cur)\n      }\n    }\n  }\n\n  // A second optional argument can be given to further configure\n  // the parser process. These options are recognized:\n\n  var defaultOptions = {\n    // `ecmaVersion` indicates the ECMAScript version to parse. Must be\n    // either 3, 5, 6 (2015), 7 (2016), 8 (2017), 9 (2018), or 10\n    // (2019). This influences support for strict mode, the set of\n    // reserved words, and support for new syntax features. The default\n    // is 10.\n    ecmaVersion: 10,\n    // `sourceType` indicates the mode the code should be parsed in.\n    // Can be either `\"script\"` or `\"module\"`. This influences global\n    // strict mode and parsing of `import` and `export` declarations.\n    sourceType: \"script\",\n    // `onInsertedSemicolon` can be a callback that will be called\n    // when a semicolon is automatically inserted. It will be passed\n    // the position of the comma as an offset, and if `locations` is\n    // enabled, it is given the location as a `{line, column}` object\n    // as second argument.\n    onInsertedSemicolon: null,\n    // `onTrailingComma` is similar to `onInsertedSemicolon`, but for\n    // trailing commas.\n    onTrailingComma: null,\n    // By default, reserved words are only enforced if ecmaVersion >= 5.\n    // Set `allowReserved` to a boolean value to explicitly turn this on\n    // an off. When this option has the value \"never\", reserved words\n    // and keywords can also not be used as property names.\n    allowReserved: null,\n    // When enabled, a return at the top level is not considered an\n    // error.\n    allowReturnOutsideFunction: false,\n    // When enabled, import/export statements are not constrained to\n    // appearing at the top of the program.\n    allowImportExportEverywhere: false,\n    // When enabled, await identifiers are allowed to appear at the top-level scope,\n    // but they are still not allowed in non-async functions.\n    allowAwaitOutsideFunction: false,\n    // When enabled, hashbang directive in the beginning of file\n    // is allowed and treated as a line comment.\n    allowHashBang: false,\n    // When `locations` is on, `loc` properties holding objects with\n    // `start` and `end` properties in `{line, column}` form (with\n    // line being 1-based and column 0-based) will be attached to the\n    // nodes.\n    locations: false,\n    // A function can be passed as `onToken` option, which will\n    // cause Acorn to call that function with object in the same\n    // format as tokens returned from `tokenizer().getToken()`. Note\n    // that you are not allowed to call the parser from the\n    // callback\u2014that will corrupt its internal state.\n    onToken: null,\n    // A function can be passed as `onComment` option, which will\n    // cause Acorn to call that function with `(block, text, start,\n    // end)` parameters whenever a comment is skipped. `block` is a\n    // boolean indicating whether this is a block (`/* */`) comment,\n    // `text` is the content of the comment, and `start` and `end` are\n    // character offsets that denote the start and end of the comment.\n    // When the `locations` option is on, two more parameters are\n    // passed, the full `{line, column}` locations of the start and\n    // end of the comments. Note that you are not allowed to call the\n    // parser from the callback\u2014that will corrupt its internal state.\n    onComment: null,\n    // Nodes have their start and end characters offsets recorded in\n    // `start` and `end` properties (directly on the node, rather than\n    // the `loc` object, which holds line/column data. To also add a\n    // [semi-standardized][range] `range` property holding a `[start,\n    // end]` array with the same numbers, set the `ranges` option to\n    // `true`.\n    //\n    // [range]: https://bugzilla.mozilla.org/show_bug.cgi?id=745678\n    ranges: false,\n    // It is possible to parse multiple files into a single AST by\n    // passing the tree produced by parsing the first file as\n    // `program` option in subsequent parses. This will add the\n    // toplevel forms of the parsed file to the `Program` (top) node\n    // of an existing parse tree.\n    program: null,\n    // When `locations` is on, you can pass this to record the source\n    // file in every node's `loc` object.\n    sourceFile: null,\n    // This value, if given, is stored in every node, whether\n    // `locations` is on or off.\n    directSourceFile: null,\n    // When enabled, parenthesized expressions are represented by\n    // (non-standard) ParenthesizedExpression nodes\n    preserveParens: false\n  };\n\n  // Interpret and default an options object\n\n  function getOptions(opts) {\n    var options = {};\n\n    for (var opt in defaultOptions)\n      { options[opt] = opts && has(opts, opt) ? opts[opt] : defaultOptions[opt]; }\n\n    if (options.ecmaVersion >= 2015)\n      { options.ecmaVersion -= 2009; }\n\n    if (options.allowReserved == null)\n      { options.allowReserved = options.ecmaVersion < 5; }\n\n    if (isArray(options.onToken)) {\n      var tokens = options.onToken;\n      options.onToken = function (token) { return tokens.push(token); };\n    }\n    if (isArray(options.onComment))\n      { options.onComment = pushComment(options, options.onComment); }\n\n    return options\n  }\n\n  function pushComment(options, array) {\n    return function(block, text, start, end, startLoc, endLoc) {\n      var comment = {\n        type: block ? \"Block\" : \"Line\",\n        value: text,\n        start: start,\n        end: end\n      };\n      if (options.locations)\n        { comment.loc = new SourceLocation(this, startLoc, endLoc); }\n      if (options.ranges)\n        { comment.range = [start, end]; }\n      array.push(comment);\n    }\n  }\n\n  // Each scope gets a bitset that may contain these flags\n  var\n      SCOPE_TOP = 1,\n      SCOPE_FUNCTION = 2,\n      SCOPE_VAR = SCOPE_TOP | SCOPE_FUNCTION,\n      SCOPE_ASYNC = 4,\n      SCOPE_GENERATOR = 8,\n      SCOPE_ARROW = 16,\n      SCOPE_SIMPLE_CATCH = 32,\n      SCOPE_SUPER = 64,\n      SCOPE_DIRECT_SUPER = 128;\n\n  function functionFlags(async, generator) {\n    return SCOPE_FUNCTION | (async ? SCOPE_ASYNC : 0) | (generator ? SCOPE_GENERATOR : 0)\n  }\n\n  // Used in checkLVal and declareName to determine the type of a binding\n  var\n      BIND_NONE = 0, // Not a binding\n      BIND_VAR = 1, // Var-style binding\n      BIND_LEXICAL = 2, // Let- or const-style binding\n      BIND_FUNCTION = 3, // Function declaration\n      BIND_SIMPLE_CATCH = 4, // Simple (identifier pattern) catch binding\n      BIND_OUTSIDE = 5; // Special case for function names as bound inside the function\n\n  var Parser = function Parser(options, input, startPos) {\n    this.options = options = getOptions(options);\n    this.sourceFile = options.sourceFile;\n    this.keywords = wordsRegexp(keywords[options.ecmaVersion >= 6 ? 6 : options.sourceType === \"module\" ? \"5module\" : 5]);\n    var reserved = \"\";\n    if (options.allowReserved !== true) {\n      for (var v = options.ecmaVersion;; v--)\n        { if (reserved = reservedWords[v]) { break } }\n      if (options.sourceType === \"module\") { reserved += \" await\"; }\n    }\n    this.reservedWords = wordsRegexp(reserved);\n    var reservedStrict = (reserved ? reserved + \" \" : \"\") + reservedWords.strict;\n    this.reservedWordsStrict = wordsRegexp(reservedStrict);\n    this.reservedWordsStrictBind = wordsRegexp(reservedStrict + \" \" + reservedWords.strictBind);\n    this.input = String(input);\n\n    // Used to signal to callers of `readWord1` whether the word\n    // contained any escape sequences. This is needed because words with\n    // escape sequences must not be interpreted as keywords.\n    this.containsEsc = false;\n\n    // Set up token state\n\n    // The current position of the tokenizer in the input.\n    if (startPos) {\n      this.pos = startPos;\n      this.lineStart = this.input.lastIndexOf(\"\\n\", startPos - 1) + 1;\n      this.curLine = this.input.slice(0, this.lineStart).split(lineBreak).length;\n    } else {\n      this.pos = this.lineStart = 0;\n      this.curLine = 1;\n    }\n\n    // Properties of the current token:\n    // Its type\n    this.type = types.eof;\n    // For tokens that include more information than their type, the value\n    this.value = null;\n    // Its start and end offset\n    this.start = this.end = this.pos;\n    // And, if locations are used, the {line, column} object\n    // corresponding to those offsets\n    this.startLoc = this.endLoc = this.curPosition();\n\n    // Position information for the previous token\n    this.lastTokEndLoc = this.lastTokStartLoc = null;\n    this.lastTokStart = this.lastTokEnd = this.pos;\n\n    // The context stack is used to superficially track syntactic\n    // context to predict whether a regular expression is allowed in a\n    // given position.\n    this.context = this.initialContext();\n    this.exprAllowed = true;\n\n    // Figure out if it's a module code.\n    this.inModule = options.sourceType === \"module\";\n    this.strict = this.inModule || this.strictDirective(this.pos);\n\n    // Used to signify the start of a potential arrow function\n    this.potentialArrowAt = -1;\n\n    // Positions to delayed-check that yield/await does not exist in default parameters.\n    this.yieldPos = this.awaitPos = this.awaitIdentPos = 0;\n    // Labels in scope.\n    this.labels = [];\n    // Thus-far undefined exports.\n    this.undefinedExports = {};\n\n    // If enabled, skip leading hashbang line.\n    if (this.pos === 0 && options.allowHashBang && this.input.slice(0, 2) === \"#!\")\n      { this.skipLineComment(2); }\n\n    // Scope tracking for duplicate variable names (see scope.js)\n    this.scopeStack = [];\n    this.enterScope(SCOPE_TOP);\n\n    // For RegExp validation\n    this.regexpState = null;\n  };\n\n  var prototypeAccessors = { inFunction: { configurable: true },inGenerator: { configurable: true },inAsync: { configurable: true },allowSuper: { configurable: true },allowDirectSuper: { configurable: true },treatFunctionsAsVar: { configurable: true } };\n\n  Parser.prototype.parse = function parse () {\n    var node = this.options.program || this.startNode();\n    this.nextToken();\n    return this.parseTopLevel(node)\n  };\n\n  prototypeAccessors.inFunction.get = function () { return (this.currentVarScope().flags & SCOPE_FUNCTION) > 0 };\n  prototypeAccessors.inGenerator.get = function () { return (this.currentVarScope().flags & SCOPE_GENERATOR) > 0 };\n  prototypeAccessors.inAsync.get = function () { return (this.currentVarScope().flags & SCOPE_ASYNC) > 0 };\n  prototypeAccessors.allowSuper.get = function () { return (this.currentThisScope().flags & SCOPE_SUPER) > 0 };\n  prototypeAccessors.allowDirectSuper.get = function () { return (this.currentThisScope().flags & SCOPE_DIRECT_SUPER) > 0 };\n  prototypeAccessors.treatFunctionsAsVar.get = function () { return this.treatFunctionsAsVarInScope(this.currentScope()) };\n\n  // Switch to a getter for 7.0.0.\n  Parser.prototype.inNonArrowFunction = function inNonArrowFunction () { return (this.currentThisScope().flags & SCOPE_FUNCTION) > 0 };\n\n  Parser.extend = function extend () {\n      var plugins = [], len = arguments.length;\n      while ( len-- ) plugins[ len ] = arguments[ len ];\n\n    var cls = this;\n    for (var i = 0; i < plugins.length; i++) { cls = plugins[i](cls); }\n    return cls\n  };\n\n  Parser.parse = function parse (input, options) {\n    return new this(options, input).parse()\n  };\n\n  Parser.parseExpressionAt = function parseExpressionAt (input, pos, options) {\n    var parser = new this(options, input, pos);\n    parser.nextToken();\n    return parser.parseExpression()\n  };\n\n  Parser.tokenizer = function tokenizer (input, options) {\n    return new this(options, input)\n  };\n\n  Object.defineProperties( Parser.prototype, prototypeAccessors );\n\n  var pp = Parser.prototype;\n\n  // ## Parser utilities\n\n  var literal = /^(?:'((?:\\\\.|[^'\\\\])*?)'|\"((?:\\\\.|[^\"\\\\])*?)\")/;\n  pp.strictDirective = function(start) {\n    for (;;) {\n      // Try to find string literal.\n      skipWhiteSpace.lastIndex = start;\n      start += skipWhiteSpace.exec(this.input)[0].length;\n      var match = literal.exec(this.input.slice(start));\n      if (!match) { return false }\n      if ((match[1] || match[2]) === \"use strict\") {\n        skipWhiteSpace.lastIndex = start + match[0].length;\n        var spaceAfter = skipWhiteSpace.exec(this.input), end = spaceAfter.index + spaceAfter[0].length;\n        var next = this.input.charAt(end);\n        return next === \";\" || next === \"}\" ||\n          (lineBreak.test(spaceAfter[0]) &&\n           !(/[(`.[+\\-/*%<>=,?^&]/.test(next) || next === \"!\" && this.input.charAt(end + 1) === \"=\"))\n      }\n      start += match[0].length;\n\n      // Skip semicolon, if any.\n      skipWhiteSpace.lastIndex = start;\n      start += skipWhiteSpace.exec(this.input)[0].length;\n      if (this.input[start] === \";\")\n        { start++; }\n    }\n  };\n\n  // Predicate that tests whether the next token is of the given\n  // type, and if yes, consumes it as a side effect.\n\n  pp.eat = function(type) {\n    if (this.type === type) {\n      this.next();\n      return true\n    } else {\n      return false\n    }\n  };\n\n  // Tests whether parsed token is a contextual keyword.\n\n  pp.isContextual = function(name) {\n    return this.type === types.name && this.value === name && !this.containsEsc\n  };\n\n  // Consumes contextual keyword if possible.\n\n  pp.eatContextual = function(name) {\n    if (!this.isContextual(name)) { return false }\n    this.next();\n    return true\n  };\n\n  // Asserts that following token is given contextual keyword.\n\n  pp.expectContextual = function(name) {\n    if (!this.eatContextual(name)) { this.unexpected(); }\n  };\n\n  // Test whether a semicolon can be inserted at the current position.\n\n  pp.canInsertSemicolon = function() {\n    return this.type === types.eof ||\n      this.type === types.braceR ||\n      lineBreak.test(this.input.slice(this.lastTokEnd, this.start))\n  };\n\n  pp.insertSemicolon = function() {\n    if (this.canInsertSemicolon()) {\n      if (this.options.onInsertedSemicolon)\n        { this.options.onInsertedSemicolon(this.lastTokEnd, this.lastTokEndLoc); }\n      return true\n    }\n  };\n\n  // Consume a semicolon, or, failing that, see if we are allowed to\n  // pretend that there is a semicolon at this position.\n\n  pp.semicolon = function() {\n    if (!this.eat(types.semi) && !this.insertSemicolon()) { this.unexpected(); }\n  };\n\n  pp.afterTrailingComma = function(tokType, notNext) {\n    if (this.type === tokType) {\n      if (this.options.onTrailingComma)\n        { this.options.onTrailingComma(this.lastTokStart, this.lastTokStartLoc); }\n      if (!notNext)\n        { this.next(); }\n      return true\n    }\n  };\n\n  // Expect a token of a given type. If found, consume it, otherwise,\n  // raise an unexpected token error.\n\n  pp.expect = function(type) {\n    this.eat(type) || this.unexpected();\n  };\n\n  // Raise an unexpected token error.\n\n  pp.unexpected = function(pos) {\n    this.raise(pos != null ? pos : this.start, \"Unexpected token\");\n  };\n\n  function DestructuringErrors() {\n    this.shorthandAssign =\n    this.trailingComma =\n    this.parenthesizedAssign =\n    this.parenthesizedBind =\n    this.doubleProto =\n      -1;\n  }\n\n  pp.checkPatternErrors = function(refDestructuringErrors, isAssign) {\n    if (!refDestructuringErrors) { return }\n    if (refDestructuringErrors.trailingComma > -1)\n      { this.raiseRecoverable(refDestructuringErrors.trailingComma, \"Comma is not permitted after the rest element\"); }\n    var parens = isAssign ? refDestructuringErrors.parenthesizedAssign : refDestructuringErrors.parenthesizedBind;\n    if (parens > -1) { this.raiseRecoverable(parens, \"Parenthesized pattern\"); }\n  };\n\n  pp.checkExpressionErrors = function(refDestructuringErrors, andThrow) {\n    if (!refDestructuringErrors) { return false }\n    var shorthandAssign = refDestructuringErrors.shorthandAssign;\n    var doubleProto = refDestructuringErrors.doubleProto;\n    if (!andThrow) { return shorthandAssign >= 0 || doubleProto >= 0 }\n    if (shorthandAssign >= 0)\n      { this.raise(shorthandAssign, \"Shorthand property assignments are valid only in destructuring patterns\"); }\n    if (doubleProto >= 0)\n      { this.raiseRecoverable(doubleProto, \"Redefinition of __proto__ property\"); }\n  };\n\n  pp.checkYieldAwaitInDefaultParams = function() {\n    if (this.yieldPos && (!this.awaitPos || this.yieldPos < this.awaitPos))\n      { this.raise(this.yieldPos, \"Yield expression cannot be a default value\"); }\n    if (this.awaitPos)\n      { this.raise(this.awaitPos, \"Await expression cannot be a default value\"); }\n  };\n\n  pp.isSimpleAssignTarget = function(expr) {\n    if (expr.type === \"ParenthesizedExpression\")\n      { return this.isSimpleAssignTarget(expr.expression) }\n    return expr.type === \"Identifier\" || expr.type === \"MemberExpression\"\n  };\n\n  var pp$1 = Parser.prototype;\n\n  // ### Statement parsing\n\n  // Parse a program. Initializes the parser, reads any number of\n  // statements, and wraps them in a Program node.  Optionally takes a\n  // `program` argument.  If present, the statements will be appended\n  // to its body instead of creating a new node.\n\n  pp$1.parseTopLevel = function(node) {\n    var exports = {};\n    if (!node.body) { node.body = []; }\n    while (this.type !== types.eof) {\n      var stmt = this.parseStatement(null, true, exports);\n      node.body.push(stmt);\n    }\n    if (this.inModule)\n      { for (var i = 0, list = Object.keys(this.undefinedExports); i < list.length; i += 1)\n        {\n          var name = list[i];\n\n          this.raiseRecoverable(this.undefinedExports[name].start, (\"Export '\" + name + \"' is not defined\"));\n        } }\n    this.adaptDirectivePrologue(node.body);\n    this.next();\n    node.sourceType = this.options.sourceType;\n    return this.finishNode(node, \"Program\")\n  };\n\n  var loopLabel = {kind: \"loop\"}, switchLabel = {kind: \"switch\"};\n\n  pp$1.isLet = function(context) {\n    if (this.options.ecmaVersion < 6 || !this.isContextual(\"let\")) { return false }\n    skipWhiteSpace.lastIndex = this.pos;\n    var skip = skipWhiteSpace.exec(this.input);\n    var next = this.pos + skip[0].length, nextCh = this.input.charCodeAt(next);\n    // For ambiguous cases, determine if a LexicalDeclaration (or only a\n    // Statement) is allowed here. If context is not empty then only a Statement\n    // is allowed. However, `let [` is an explicit negative lookahead for\n    // ExpressionStatement, so special-case it first.\n    if (nextCh === 91) { return true } // '['\n    if (context) { return false }\n\n    if (nextCh === 123) { return true } // '{'\n    if (isIdentifierStart(nextCh, true)) {\n      var pos = next + 1;\n      while (isIdentifierChar(this.input.charCodeAt(pos), true)) { ++pos; }\n      var ident = this.input.slice(next, pos);\n      if (!keywordRelationalOperator.test(ident)) { return true }\n    }\n    return false\n  };\n\n  // check 'async [no LineTerminator here] function'\n  // - 'async /*foo*/ function' is OK.\n  // - 'async /*\\n*/ function' is invalid.\n  pp$1.isAsyncFunction = function() {\n    if (this.options.ecmaVersion < 8 || !this.isContextual(\"async\"))\n      { return false }\n\n    skipWhiteSpace.lastIndex = this.pos;\n    var skip = skipWhiteSpace.exec(this.input);\n    var next = this.pos + skip[0].length;\n    return !lineBreak.test(this.input.slice(this.pos, next)) &&\n      this.input.slice(next, next + 8) === \"function\" &&\n      (next + 8 === this.input.length || !isIdentifierChar(this.input.charAt(next + 8)))\n  };\n\n  // Parse a single statement.\n  //\n  // If expecting a statement and finding a slash operator, parse a\n  // regular expression literal. This is to handle cases like\n  // `if (foo) /blah/.exec(foo)`, where looking at the previous token\n  // does not help.\n\n  pp$1.parseStatement = function(context, topLevel, exports) {\n    var starttype = this.type, node = this.startNode(), kind;\n\n    if (this.isLet(context)) {\n      starttype = types._var;\n      kind = \"let\";\n    }\n\n    // Most types of statements are recognized by the keyword they\n    // start with. Many are trivial to parse, some require a bit of\n    // complexity.\n\n    switch (starttype) {\n    case types._break: case types._continue: return this.parseBreakContinueStatement(node, starttype.keyword)\n    case types._debugger: return this.parseDebuggerStatement(node)\n    case types._do: return this.parseDoStatement(node)\n    case types._for: return this.parseForStatement(node)\n    case types._function:\n      // Function as sole body of either an if statement or a labeled statement\n      // works, but not when it is part of a labeled statement that is the sole\n      // body of an if statement.\n      if ((context && (this.strict || context !== \"if\" && context !== \"label\")) && this.options.ecmaVersion >= 6) { this.unexpected(); }\n      return this.parseFunctionStatement(node, false, !context)\n    case types._class:\n      if (context) { this.unexpected(); }\n      return this.parseClass(node, true)\n    case types._if: return this.parseIfStatement(node)\n    case types._return: return this.parseReturnStatement(node)\n    case types._switch: return this.parseSwitchStatement(node)\n    case types._throw: return this.parseThrowStatement(node)\n    case types._try: return this.parseTryStatement(node)\n    case types._const: case types._var:\n      kind = kind || this.value;\n      if (context && kind !== \"var\") { this.unexpected(); }\n      return this.parseVarStatement(node, kind)\n    case types._while: return this.parseWhileStatement(node)\n    case types._with: return this.parseWithStatement(node)\n    case types.braceL: return this.parseBlock(true, node)\n    case types.semi: return this.parseEmptyStatement(node)\n    case types._export:\n    case types._import:\n      if (this.options.ecmaVersion > 10 && starttype === types._import) {\n        skipWhiteSpace.lastIndex = this.pos;\n        var skip = skipWhiteSpace.exec(this.input);\n        var next = this.pos + skip[0].length, nextCh = this.input.charCodeAt(next);\n        if (nextCh === 40 || nextCh === 46) // '(' or '.'\n          { return this.parseExpressionStatement(node, this.parseExpression()) }\n      }\n\n      if (!this.options.allowImportExportEverywhere) {\n        if (!topLevel)\n          { this.raise(this.start, \"'import' and 'export' may only appear at the top level\"); }\n        if (!this.inModule)\n          { this.raise(this.start, \"'import' and 'export' may appear only with 'sourceType: module'\"); }\n      }\n      return starttype === types._import ? this.parseImport(node) : this.parseExport(node, exports)\n\n      // If the statement does not start with a statement keyword or a\n      // brace, it's an ExpressionStatement or LabeledStatement. We\n      // simply start parsing an expression, and afterwards, if the\n      // next token is a colon and the expression was a simple\n      // Identifier node, we switch to interpreting it as a label.\n    default:\n      if (this.isAsyncFunction()) {\n        if (context) { this.unexpected(); }\n        this.next();\n        return this.parseFunctionStatement(node, true, !context)\n      }\n\n      var maybeName = this.value, expr = this.parseExpression();\n      if (starttype === types.name && expr.type === \"Identifier\" && this.eat(types.colon))\n        { return this.parseLabeledStatement(node, maybeName, expr, context) }\n      else { return this.parseExpressionStatement(node, expr) }\n    }\n  };\n\n  pp$1.parseBreakContinueStatement = function(node, keyword) {\n    var isBreak = keyword === \"break\";\n    this.next();\n    if (this.eat(types.semi) || this.insertSemicolon()) { node.label = null; }\n    else if (this.type !== types.name) { this.unexpected(); }\n    else {\n      node.label = this.parseIdent();\n      this.semicolon();\n    }\n\n    // Verify that there is an actual destination to break or\n    // continue to.\n    var i = 0;\n    for (; i < this.labels.length; ++i) {\n      var lab = this.labels[i];\n      if (node.label == null || lab.name === node.label.name) {\n        if (lab.kind != null && (isBreak || lab.kind === \"loop\")) { break }\n        if (node.label && isBreak) { break }\n      }\n    }\n    if (i === this.labels.length) { this.raise(node.start, \"Unsyntactic \" + keyword); }\n    return this.finishNode(node, isBreak ? \"BreakStatement\" : \"ContinueStatement\")\n  };\n\n  pp$1.parseDebuggerStatement = function(node) {\n    this.next();\n    this.semicolon();\n    return this.finishNode(node, \"DebuggerStatement\")\n  };\n\n  pp$1.parseDoStatement = function(node) {\n    this.next();\n    this.labels.push(loopLabel);\n    node.body = this.parseStatement(\"do\");\n    this.labels.pop();\n    this.expect(types._while);\n    node.test = this.parseParenExpression();\n    if (this.options.ecmaVersion >= 6)\n      { this.eat(types.semi); }\n    else\n      { this.semicolon(); }\n    return this.finishNode(node, \"DoWhileStatement\")\n  };\n\n  // Disambiguating between a `for` and a `for`/`in` or `for`/`of`\n  // loop is non-trivial. Basically, we have to parse the init `var`\n  // statement or expression, disallowing the `in` operator (see\n  // the second parameter to `parseExpression`), and then check\n  // whether the next token is `in` or `of`. When there is no init\n  // part (semicolon immediately after the opening parenthesis), it\n  // is a regular `for` loop.\n\n  pp$1.parseForStatement = function(node) {\n    this.next();\n    var awaitAt = (this.options.ecmaVersion >= 9 && (this.inAsync || (!this.inFunction && this.options.allowAwaitOutsideFunction)) && this.eatContextual(\"await\")) ? this.lastTokStart : -1;\n    this.labels.push(loopLabel);\n    this.enterScope(0);\n    this.expect(types.parenL);\n    if (this.type === types.semi) {\n      if (awaitAt > -1) { this.unexpected(awaitAt); }\n      return this.parseFor(node, null)\n    }\n    var isLet = this.isLet();\n    if (this.type === types._var || this.type === types._const || isLet) {\n      var init$1 = this.startNode(), kind = isLet ? \"let\" : this.value;\n      this.next();\n      this.parseVar(init$1, true, kind);\n      this.finishNode(init$1, \"VariableDeclaration\");\n      if ((this.type === types._in || (this.options.ecmaVersion >= 6 && this.isContextual(\"of\"))) && init$1.declarations.length === 1) {\n        if (this.options.ecmaVersion >= 9) {\n          if (this.type === types._in) {\n            if (awaitAt > -1) { this.unexpected(awaitAt); }\n          } else { node.await = awaitAt > -1; }\n        }\n        return this.parseForIn(node, init$1)\n      }\n      if (awaitAt > -1) { this.unexpected(awaitAt); }\n      return this.parseFor(node, init$1)\n    }\n    var refDestructuringErrors = new DestructuringErrors;\n    var init = this.parseExpression(true, refDestructuringErrors);\n    if (this.type === types._in || (this.options.ecmaVersion >= 6 && this.isContextual(\"of\"))) {\n      if (this.options.ecmaVersion >= 9) {\n        if (this.type === types._in) {\n          if (awaitAt > -1) { this.unexpected(awaitAt); }\n        } else { node.await = awaitAt > -1; }\n      }\n      this.toAssignable(init, false, refDestructuringErrors);\n      this.checkLVal(init);\n      return this.parseForIn(node, init)\n    } else {\n      this.checkExpressionErrors(refDestructuringErrors, true);\n    }\n    if (awaitAt > -1) { this.unexpected(awaitAt); }\n    return this.parseFor(node, init)\n  };\n\n  pp$1.parseFunctionStatement = function(node, isAsync, declarationPosition) {\n    this.next();\n    return this.parseFunction(node, FUNC_STATEMENT | (declarationPosition ? 0 : FUNC_HANGING_STATEMENT), false, isAsync)\n  };\n\n  pp$1.parseIfStatement = function(node) {\n    this.next();\n    node.test = this.parseParenExpression();\n    // allow function declarations in branches, but only in non-strict mode\n    node.consequent = this.parseStatement(\"if\");\n    node.alternate = this.eat(types._else) ? this.parseStatement(\"if\") : null;\n    return this.finishNode(node, \"IfStatement\")\n  };\n\n  pp$1.parseReturnStatement = function(node) {\n    if (!this.inFunction && !this.options.allowReturnOutsideFunction)\n      { this.raise(this.start, \"'return' outside of function\"); }\n    this.next();\n\n    // In `return` (and `break`/`continue`), the keywords with\n    // optional arguments, we eagerly look for a semicolon or the\n    // possibility to insert one.\n\n    if (this.eat(types.semi) || this.insertSemicolon()) { node.argument = null; }\n    else { node.argument = this.parseExpression(); this.semicolon(); }\n    return this.finishNode(node, \"ReturnStatement\")\n  };\n\n  pp$1.parseSwitchStatement = function(node) {\n    this.next();\n    node.discriminant = this.parseParenExpression();\n    node.cases = [];\n    this.expect(types.braceL);\n    this.labels.push(switchLabel);\n    this.enterScope(0);\n\n    // Statements under must be grouped (by label) in SwitchCase\n    // nodes. `cur` is used to keep the node that we are currently\n    // adding statements to.\n\n    var cur;\n    for (var sawDefault = false; this.type !== types.braceR;) {\n      if (this.type === types._case || this.type === types._default) {\n        var isCase = this.type === types._case;\n        if (cur) { this.finishNode(cur, \"SwitchCase\"); }\n        node.cases.push(cur = this.startNode());\n        cur.consequent = [];\n        this.next();\n        if (isCase) {\n          cur.test = this.parseExpression();\n        } else {\n          if (sawDefault) { this.raiseRecoverable(this.lastTokStart, \"Multiple default clauses\"); }\n          sawDefault = true;\n          cur.test = null;\n        }\n        this.expect(types.colon);\n      } else {\n        if (!cur) { this.unexpected(); }\n        cur.consequent.push(this.parseStatement(null));\n      }\n    }\n    this.exitScope();\n    if (cur) { this.finishNode(cur, \"SwitchCase\"); }\n    this.next(); // Closing brace\n    this.labels.pop();\n    return this.finishNode(node, \"SwitchStatement\")\n  };\n\n  pp$1.parseThrowStatement = function(node) {\n    this.next();\n    if (lineBreak.test(this.input.slice(this.lastTokEnd, this.start)))\n      { this.raise(this.lastTokEnd, \"Illegal newline after throw\"); }\n    node.argument = this.parseExpression();\n    this.semicolon();\n    return this.finishNode(node, \"ThrowStatement\")\n  };\n\n  // Reused empty array added for node fields that are always empty.\n\n  var empty = [];\n\n  pp$1.parseTryStatement = function(node) {\n    this.next();\n    node.block = this.parseBlock();\n    node.handler = null;\n    if (this.type === types._catch) {\n      var clause = this.startNode();\n      this.next();\n      if (this.eat(types.parenL)) {\n        clause.param = this.parseBindingAtom();\n        var simple = clause.param.type === \"Identifier\";\n        this.enterScope(simple ? SCOPE_SIMPLE_CATCH : 0);\n        this.checkLVal(clause.param, simple ? BIND_SIMPLE_CATCH : BIND_LEXICAL);\n        this.expect(types.parenR);\n      } else {\n        if (this.options.ecmaVersion < 10) { this.unexpected(); }\n        clause.param = null;\n        this.enterScope(0);\n      }\n      clause.body = this.parseBlock(false);\n      this.exitScope();\n      node.handler = this.finishNode(clause, \"CatchClause\");\n    }\n    node.finalizer = this.eat(types._finally) ? this.parseBlock() : null;\n    if (!node.handler && !node.finalizer)\n      { this.raise(node.start, \"Missing catch or finally clause\"); }\n    return this.finishNode(node, \"TryStatement\")\n  };\n\n  pp$1.parseVarStatement = function(node, kind) {\n    this.next();\n    this.parseVar(node, false, kind);\n    this.semicolon();\n    return this.finishNode(node, \"VariableDeclaration\")\n  };\n\n  pp$1.parseWhileStatement = function(node) {\n    this.next();\n    node.test = this.parseParenExpression();\n    this.labels.push(loopLabel);\n    node.body = this.parseStatement(\"while\");\n    this.labels.pop();\n    return this.finishNode(node, \"WhileStatement\")\n  };\n\n  pp$1.parseWithStatement = function(node) {\n    if (this.strict) { this.raise(this.start, \"'with' in strict mode\"); }\n    this.next();\n    node.object = this.parseParenExpression();\n    node.body = this.parseStatement(\"with\");\n    return this.finishNode(node, \"WithStatement\")\n  };\n\n  pp$1.parseEmptyStatement = function(node) {\n    this.next();\n    return this.finishNode(node, \"EmptyStatement\")\n  };\n\n  pp$1.parseLabeledStatement = function(node, maybeName, expr, context) {\n    for (var i$1 = 0, list = this.labels; i$1 < list.length; i$1 += 1)\n      {\n      var label = list[i$1];\n\n      if (label.name === maybeName)\n        { this.raise(expr.start, \"Label '\" + maybeName + \"' is already declared\");\n    } }\n    var kind = this.type.isLoop ? \"loop\" : this.type === types._switch ? \"switch\" : null;\n    for (var i = this.labels.length - 1; i >= 0; i--) {\n      var label$1 = this.labels[i];\n      if (label$1.statementStart === node.start) {\n        // Update information about previous labels on this node\n        label$1.statementStart = this.start;\n        label$1.kind = kind;\n      } else { break }\n    }\n    this.labels.push({name: maybeName, kind: kind, statementStart: this.start});\n    node.body = this.parseStatement(context ? context.indexOf(\"label\") === -1 ? context + \"label\" : context : \"label\");\n    this.labels.pop();\n    node.label = expr;\n    return this.finishNode(node, \"LabeledStatement\")\n  };\n\n  pp$1.parseExpressionStatement = function(node, expr) {\n    node.expression = expr;\n    this.semicolon();\n    return this.finishNode(node, \"ExpressionStatement\")\n  };\n\n  // Parse a semicolon-enclosed block of statements, handling `\"use\n  // strict\"` declarations when `allowStrict` is true (used for\n  // function bodies).\n\n  pp$1.parseBlock = function(createNewLexicalScope, node, exitStrict) {\n    if ( createNewLexicalScope === void 0 ) createNewLexicalScope = true;\n    if ( node === void 0 ) node = this.startNode();\n\n    node.body = [];\n    this.expect(types.braceL);\n    if (createNewLexicalScope) { this.enterScope(0); }\n    while (this.type !== types.braceR) {\n      var stmt = this.parseStatement(null);\n      node.body.push(stmt);\n    }\n    if (exitStrict) { this.strict = false; }\n    this.next();\n    if (createNewLexicalScope) { this.exitScope(); }\n    return this.finishNode(node, \"BlockStatement\")\n  };\n\n  // Parse a regular `for` loop. The disambiguation code in\n  // `parseStatement` will already have parsed the init statement or\n  // expression.\n\n  pp$1.parseFor = function(node, init) {\n    node.init = init;\n    this.expect(types.semi);\n    node.test = this.type === types.semi ? null : this.parseExpression();\n    this.expect(types.semi);\n    node.update = this.type === types.parenR ? null : this.parseExpression();\n    this.expect(types.parenR);\n    node.body = this.parseStatement(\"for\");\n    this.exitScope();\n    this.labels.pop();\n    return this.finishNode(node, \"ForStatement\")\n  };\n\n  // Parse a `for`/`in` and `for`/`of` loop, which are almost\n  // same from parser's perspective.\n\n  pp$1.parseForIn = function(node, init) {\n    var isForIn = this.type === types._in;\n    this.next();\n\n    if (\n      init.type === \"VariableDeclaration\" &&\n      init.declarations[0].init != null &&\n      (\n        !isForIn ||\n        this.options.ecmaVersion < 8 ||\n        this.strict ||\n        init.kind !== \"var\" ||\n        init.declarations[0].id.type !== \"Identifier\"\n      )\n    ) {\n      this.raise(\n        init.start,\n        ((isForIn ? \"for-in\" : \"for-of\") + \" loop variable declaration may not have an initializer\")\n      );\n    } else if (init.type === \"AssignmentPattern\") {\n      this.raise(init.start, \"Invalid left-hand side in for-loop\");\n    }\n    node.left = init;\n    node.right = isForIn ? this.parseExpression() : this.parseMaybeAssign();\n    this.expect(types.parenR);\n    node.body = this.parseStatement(\"for\");\n    this.exitScope();\n    this.labels.pop();\n    return this.finishNode(node, isForIn ? \"ForInStatement\" : \"ForOfStatement\")\n  };\n\n  // Parse a list of variable declarations.\n\n  pp$1.parseVar = function(node, isFor, kind) {\n    node.declarations = [];\n    node.kind = kind;\n    for (;;) {\n      var decl = this.startNode();\n      this.parseVarId(decl, kind);\n      if (this.eat(types.eq)) {\n        decl.init = this.parseMaybeAssign(isFor);\n      } else if (kind === \"const\" && !(this.type === types._in || (this.options.ecmaVersion >= 6 && this.isContextual(\"of\")))) {\n        this.unexpected();\n      } else if (decl.id.type !== \"Identifier\" && !(isFor && (this.type === types._in || this.isContextual(\"of\")))) {\n        this.raise(this.lastTokEnd, \"Complex binding patterns require an initialization value\");\n      } else {\n        decl.init = null;\n      }\n      node.declarations.push(this.finishNode(decl, \"VariableDeclarator\"));\n      if (!this.eat(types.comma)) { break }\n    }\n    return node\n  };\n\n  pp$1.parseVarId = function(decl, kind) {\n    decl.id = this.parseBindingAtom();\n    this.checkLVal(decl.id, kind === \"var\" ? BIND_VAR : BIND_LEXICAL, false);\n  };\n\n  var FUNC_STATEMENT = 1, FUNC_HANGING_STATEMENT = 2, FUNC_NULLABLE_ID = 4;\n\n  // Parse a function declaration or literal (depending on the\n  // `statement & FUNC_STATEMENT`).\n\n  // Remove `allowExpressionBody` for 7.0.0, as it is only called with false\n  pp$1.parseFunction = function(node, statement, allowExpressionBody, isAsync) {\n    this.initFunction(node);\n    if (this.options.ecmaVersion >= 9 || this.options.ecmaVersion >= 6 && !isAsync) {\n      if (this.type === types.star && (statement & FUNC_HANGING_STATEMENT))\n        { this.unexpected(); }\n      node.generator = this.eat(types.star);\n    }\n    if (this.options.ecmaVersion >= 8)\n      { node.async = !!isAsync; }\n\n    if (statement & FUNC_STATEMENT) {\n      node.id = (statement & FUNC_NULLABLE_ID) && this.type !== types.name ? null : this.parseIdent();\n      if (node.id && !(statement & FUNC_HANGING_STATEMENT))\n        // If it is a regular function declaration in sloppy mode, then it is\n        // subject to Annex B semantics (BIND_FUNCTION). Otherwise, the binding\n        // mode depends on properties of the current scope (see\n        // treatFunctionsAsVar).\n        { this.checkLVal(node.id, (this.strict || node.generator || node.async) ? this.treatFunctionsAsVar ? BIND_VAR : BIND_LEXICAL : BIND_FUNCTION); }\n    }\n\n    var oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n    this.yieldPos = 0;\n    this.awaitPos = 0;\n    this.awaitIdentPos = 0;\n    this.enterScope(functionFlags(node.async, node.generator));\n\n    if (!(statement & FUNC_STATEMENT))\n      { node.id = this.type === types.name ? this.parseIdent() : null; }\n\n    this.parseFunctionParams(node);\n    this.parseFunctionBody(node, allowExpressionBody, false);\n\n    this.yieldPos = oldYieldPos;\n    this.awaitPos = oldAwaitPos;\n    this.awaitIdentPos = oldAwaitIdentPos;\n    return this.finishNode(node, (statement & FUNC_STATEMENT) ? \"FunctionDeclaration\" : \"FunctionExpression\")\n  };\n\n  pp$1.parseFunctionParams = function(node) {\n    this.expect(types.parenL);\n    node.params = this.parseBindingList(types.parenR, false, this.options.ecmaVersion >= 8);\n    this.checkYieldAwaitInDefaultParams();\n  };\n\n  // Parse a class declaration or literal (depending on the\n  // `isStatement` parameter).\n\n  pp$1.parseClass = function(node, isStatement) {\n    this.next();\n\n    // ecma-262 14.6 Class Definitions\n    // A class definition is always strict mode code.\n    var oldStrict = this.strict;\n    this.strict = true;\n\n    this.parseClassId(node, isStatement);\n    this.parseClassSuper(node);\n    var classBody = this.startNode();\n    var hadConstructor = false;\n    classBody.body = [];\n    this.expect(types.braceL);\n    while (this.type !== types.braceR) {\n      var element = this.parseClassElement(node.superClass !== null);\n      if (element) {\n        classBody.body.push(element);\n        if (element.type === \"MethodDefinition\" && element.kind === \"constructor\") {\n          if (hadConstructor) { this.raise(element.start, \"Duplicate constructor in the same class\"); }\n          hadConstructor = true;\n        }\n      }\n    }\n    this.strict = oldStrict;\n    this.next();\n    node.body = this.finishNode(classBody, \"ClassBody\");\n    return this.finishNode(node, isStatement ? \"ClassDeclaration\" : \"ClassExpression\")\n  };\n\n  pp$1.parseClassElement = function(constructorAllowsSuper) {\n    var this$1 = this;\n\n    if (this.eat(types.semi)) { return null }\n\n    var method = this.startNode();\n    var tryContextual = function (k, noLineBreak) {\n      if ( noLineBreak === void 0 ) noLineBreak = false;\n\n      var start = this$1.start, startLoc = this$1.startLoc;\n      if (!this$1.eatContextual(k)) { return false }\n      if (this$1.type !== types.parenL && (!noLineBreak || !this$1.canInsertSemicolon())) { return true }\n      if (method.key) { this$1.unexpected(); }\n      method.computed = false;\n      method.key = this$1.startNodeAt(start, startLoc);\n      method.key.name = k;\n      this$1.finishNode(method.key, \"Identifier\");\n      return false\n    };\n\n    method.kind = \"method\";\n    method.static = tryContextual(\"static\");\n    var isGenerator = this.eat(types.star);\n    var isAsync = false;\n    if (!isGenerator) {\n      if (this.options.ecmaVersion >= 8 && tryContextual(\"async\", true)) {\n        isAsync = true;\n        isGenerator = this.options.ecmaVersion >= 9 && this.eat(types.star);\n      } else if (tryContextual(\"get\")) {\n        method.kind = \"get\";\n      } else if (tryContextual(\"set\")) {\n        method.kind = \"set\";\n      }\n    }\n    if (!method.key) { this.parsePropertyName(method); }\n    var key = method.key;\n    var allowsDirectSuper = false;\n    if (!method.computed && !method.static && (key.type === \"Identifier\" && key.name === \"constructor\" ||\n        key.type === \"Literal\" && key.value === \"constructor\")) {\n      if (method.kind !== \"method\") { this.raise(key.start, \"Constructor can't have get/set modifier\"); }\n      if (isGenerator) { this.raise(key.start, \"Constructor can't be a generator\"); }\n      if (isAsync) { this.raise(key.start, \"Constructor can't be an async method\"); }\n      method.kind = \"constructor\";\n      allowsDirectSuper = constructorAllowsSuper;\n    } else if (method.static && key.type === \"Identifier\" && key.name === \"prototype\") {\n      this.raise(key.start, \"Classes may not have a static property named prototype\");\n    }\n    this.parseClassMethod(method, isGenerator, isAsync, allowsDirectSuper);\n    if (method.kind === \"get\" && method.value.params.length !== 0)\n      { this.raiseRecoverable(method.value.start, \"getter should have no params\"); }\n    if (method.kind === \"set\" && method.value.params.length !== 1)\n      { this.raiseRecoverable(method.value.start, \"setter should have exactly one param\"); }\n    if (method.kind === \"set\" && method.value.params[0].type === \"RestElement\")\n      { this.raiseRecoverable(method.value.params[0].start, \"Setter cannot use rest params\"); }\n    return method\n  };\n\n  pp$1.parseClassMethod = function(method, isGenerator, isAsync, allowsDirectSuper) {\n    method.value = this.parseMethod(isGenerator, isAsync, allowsDirectSuper);\n    return this.finishNode(method, \"MethodDefinition\")\n  };\n\n  pp$1.parseClassId = function(node, isStatement) {\n    if (this.type === types.name) {\n      node.id = this.parseIdent();\n      if (isStatement)\n        { this.checkLVal(node.id, BIND_LEXICAL, false); }\n    } else {\n      if (isStatement === true)\n        { this.unexpected(); }\n      node.id = null;\n    }\n  };\n\n  pp$1.parseClassSuper = function(node) {\n    node.superClass = this.eat(types._extends) ? this.parseExprSubscripts() : null;\n  };\n\n  // Parses module export declaration.\n\n  pp$1.parseExport = function(node, exports) {\n    this.next();\n    // export * from '...'\n    if (this.eat(types.star)) {\n      if (this.options.ecmaVersion >= 11) {\n        if (this.eatContextual(\"as\")) {\n          node.exported = this.parseIdent(true);\n          this.checkExport(exports, node.exported.name, this.lastTokStart);\n        } else {\n          node.exported = null;\n        }\n      }\n      this.expectContextual(\"from\");\n      if (this.type !== types.string) { this.unexpected(); }\n      node.source = this.parseExprAtom();\n      this.semicolon();\n      return this.finishNode(node, \"ExportAllDeclaration\")\n    }\n    if (this.eat(types._default)) { // export default ...\n      this.checkExport(exports, \"default\", this.lastTokStart);\n      var isAsync;\n      if (this.type === types._function || (isAsync = this.isAsyncFunction())) {\n        var fNode = this.startNode();\n        this.next();\n        if (isAsync) { this.next(); }\n        node.declaration = this.parseFunction(fNode, FUNC_STATEMENT | FUNC_NULLABLE_ID, false, isAsync);\n      } else if (this.type === types._class) {\n        var cNode = this.startNode();\n        node.declaration = this.parseClass(cNode, \"nullableID\");\n      } else {\n        node.declaration = this.parseMaybeAssign();\n        this.semicolon();\n      }\n      return this.finishNode(node, \"ExportDefaultDeclaration\")\n    }\n    // export var|const|let|function|class ...\n    if (this.shouldParseExportStatement()) {\n      node.declaration = this.parseStatement(null);\n      if (node.declaration.type === \"VariableDeclaration\")\n        { this.checkVariableExport(exports, node.declaration.declarations); }\n      else\n        { this.checkExport(exports, node.declaration.id.name, node.declaration.id.start); }\n      node.specifiers = [];\n      node.source = null;\n    } else { // export { x, y as z } [from '...']\n      node.declaration = null;\n      node.specifiers = this.parseExportSpecifiers(exports);\n      if (this.eatContextual(\"from\")) {\n        if (this.type !== types.string) { this.unexpected(); }\n        node.source = this.parseExprAtom();\n      } else {\n        for (var i = 0, list = node.specifiers; i < list.length; i += 1) {\n          // check for keywords used as local names\n          var spec = list[i];\n\n          this.checkUnreserved(spec.local);\n          // check if export is defined\n          this.checkLocalExport(spec.local);\n        }\n\n        node.source = null;\n      }\n      this.semicolon();\n    }\n    return this.finishNode(node, \"ExportNamedDeclaration\")\n  };\n\n  pp$1.checkExport = function(exports, name, pos) {\n    if (!exports) { return }\n    if (has(exports, name))\n      { this.raiseRecoverable(pos, \"Duplicate export '\" + name + \"'\"); }\n    exports[name] = true;\n  };\n\n  pp$1.checkPatternExport = function(exports, pat) {\n    var type = pat.type;\n    if (type === \"Identifier\")\n      { this.checkExport(exports, pat.name, pat.start); }\n    else if (type === \"ObjectPattern\")\n      { for (var i = 0, list = pat.properties; i < list.length; i += 1)\n        {\n          var prop = list[i];\n\n          this.checkPatternExport(exports, prop);\n        } }\n    else if (type === \"ArrayPattern\")\n      { for (var i$1 = 0, list$1 = pat.elements; i$1 < list$1.length; i$1 += 1) {\n        var elt = list$1[i$1];\n\n          if (elt) { this.checkPatternExport(exports, elt); }\n      } }\n    else if (type === \"Property\")\n      { this.checkPatternExport(exports, pat.value); }\n    else if (type === \"AssignmentPattern\")\n      { this.checkPatternExport(exports, pat.left); }\n    else if (type === \"RestElement\")\n      { this.checkPatternExport(exports, pat.argument); }\n    else if (type === \"ParenthesizedExpression\")\n      { this.checkPatternExport(exports, pat.expression); }\n  };\n\n  pp$1.checkVariableExport = function(exports, decls) {\n    if (!exports) { return }\n    for (var i = 0, list = decls; i < list.length; i += 1)\n      {\n      var decl = list[i];\n\n      this.checkPatternExport(exports, decl.id);\n    }\n  };\n\n  pp$1.shouldParseExportStatement = function() {\n    return this.type.keyword === \"var\" ||\n      this.type.keyword === \"const\" ||\n      this.type.keyword === \"class\" ||\n      this.type.keyword === \"function\" ||\n      this.isLet() ||\n      this.isAsyncFunction()\n  };\n\n  // Parses a comma-separated list of module exports.\n\n  pp$1.parseExportSpecifiers = function(exports) {\n    var nodes = [], first = true;\n    // export { x, y as z } [from '...']\n    this.expect(types.braceL);\n    while (!this.eat(types.braceR)) {\n      if (!first) {\n        this.expect(types.comma);\n        if (this.afterTrailingComma(types.braceR)) { break }\n      } else { first = false; }\n\n      var node = this.startNode();\n      node.local = this.parseIdent(true);\n      node.exported = this.eatContextual(\"as\") ? this.parseIdent(true) : node.local;\n      this.checkExport(exports, node.exported.name, node.exported.start);\n      nodes.push(this.finishNode(node, \"ExportSpecifier\"));\n    }\n    return nodes\n  };\n\n  // Parses import declaration.\n\n  pp$1.parseImport = function(node) {\n    this.next();\n    // import '...'\n    if (this.type === types.string) {\n      node.specifiers = empty;\n      node.source = this.parseExprAtom();\n    } else {\n      node.specifiers = this.parseImportSpecifiers();\n      this.expectContextual(\"from\");\n      node.source = this.type === types.string ? this.parseExprAtom() : this.unexpected();\n    }\n    this.semicolon();\n    return this.finishNode(node, \"ImportDeclaration\")\n  };\n\n  // Parses a comma-separated list of module imports.\n\n  pp$1.parseImportSpecifiers = function() {\n    var nodes = [], first = true;\n    if (this.type === types.name) {\n      // import defaultObj, { x, y as z } from '...'\n      var node = this.startNode();\n      node.local = this.parseIdent();\n      this.checkLVal(node.local, BIND_LEXICAL);\n      nodes.push(this.finishNode(node, \"ImportDefaultSpecifier\"));\n      if (!this.eat(types.comma)) { return nodes }\n    }\n    if (this.type === types.star) {\n      var node$1 = this.startNode();\n      this.next();\n      this.expectContextual(\"as\");\n      node$1.local = this.parseIdent();\n      this.checkLVal(node$1.local, BIND_LEXICAL);\n      nodes.push(this.finishNode(node$1, \"ImportNamespaceSpecifier\"));\n      return nodes\n    }\n    this.expect(types.braceL);\n    while (!this.eat(types.braceR)) {\n      if (!first) {\n        this.expect(types.comma);\n        if (this.afterTrailingComma(types.braceR)) { break }\n      } else { first = false; }\n\n      var node$2 = this.startNode();\n      node$2.imported = this.parseIdent(true);\n      if (this.eatContextual(\"as\")) {\n        node$2.local = this.parseIdent();\n      } else {\n        this.checkUnreserved(node$2.imported);\n        node$2.local = node$2.imported;\n      }\n      this.checkLVal(node$2.local, BIND_LEXICAL);\n      nodes.push(this.finishNode(node$2, \"ImportSpecifier\"));\n    }\n    return nodes\n  };\n\n  // Set `ExpressionStatement#directive` property for directive prologues.\n  pp$1.adaptDirectivePrologue = function(statements) {\n    for (var i = 0; i < statements.length && this.isDirectiveCandidate(statements[i]); ++i) {\n      statements[i].directive = statements[i].expression.raw.slice(1, -1);\n    }\n  };\n  pp$1.isDirectiveCandidate = function(statement) {\n    return (\n      statement.type === \"ExpressionStatement\" &&\n      statement.expression.type === \"Literal\" &&\n      typeof statement.expression.value === \"string\" &&\n      // Reject parenthesized strings.\n      (this.input[statement.start] === \"\\\"\" || this.input[statement.start] === \"'\")\n    )\n  };\n\n  var pp$2 = Parser.prototype;\n\n  // Convert existing expression atom to assignable pattern\n  // if possible.\n\n  pp$2.toAssignable = function(node, isBinding, refDestructuringErrors) {\n    if (this.options.ecmaVersion >= 6 && node) {\n      switch (node.type) {\n      case \"Identifier\":\n        if (this.inAsync && node.name === \"await\")\n          { this.raise(node.start, \"Cannot use 'await' as identifier inside an async function\"); }\n        break\n\n      case \"ObjectPattern\":\n      case \"ArrayPattern\":\n      case \"RestElement\":\n        break\n\n      case \"ObjectExpression\":\n        node.type = \"ObjectPattern\";\n        if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n        for (var i = 0, list = node.properties; i < list.length; i += 1) {\n          var prop = list[i];\n\n        this.toAssignable(prop, isBinding);\n          // Early error:\n          //   AssignmentRestProperty[Yield, Await] :\n          //     `...` DestructuringAssignmentTarget[Yield, Await]\n          //\n          //   It is a Syntax Error if |DestructuringAssignmentTarget| is an |ArrayLiteral| or an |ObjectLiteral|.\n          if (\n            prop.type === \"RestElement\" &&\n            (prop.argument.type === \"ArrayPattern\" || prop.argument.type === \"ObjectPattern\")\n          ) {\n            this.raise(prop.argument.start, \"Unexpected token\");\n          }\n        }\n        break\n\n      case \"Property\":\n        // AssignmentProperty has type === \"Property\"\n        if (node.kind !== \"init\") { this.raise(node.key.start, \"Object pattern can't contain getter or setter\"); }\n        this.toAssignable(node.value, isBinding);\n        break\n\n      case \"ArrayExpression\":\n        node.type = \"ArrayPattern\";\n        if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n        this.toAssignableList(node.elements, isBinding);\n        break\n\n      case \"SpreadElement\":\n        node.type = \"RestElement\";\n        this.toAssignable(node.argument, isBinding);\n        if (node.argument.type === \"AssignmentPattern\")\n          { this.raise(node.argument.start, \"Rest elements cannot have a default value\"); }\n        break\n\n      case \"AssignmentExpression\":\n        if (node.operator !== \"=\") { this.raise(node.left.end, \"Only '=' operator can be used for specifying default value.\"); }\n        node.type = \"AssignmentPattern\";\n        delete node.operator;\n        this.toAssignable(node.left, isBinding);\n        // falls through to AssignmentPattern\n\n      case \"AssignmentPattern\":\n        break\n\n      case \"ParenthesizedExpression\":\n        this.toAssignable(node.expression, isBinding, refDestructuringErrors);\n        break\n\n      case \"ChainExpression\":\n        this.raiseRecoverable(node.start, \"Optional chaining cannot appear in left-hand side\");\n        break\n\n      case \"MemberExpression\":\n        if (!isBinding) { break }\n\n      default:\n        this.raise(node.start, \"Assigning to rvalue\");\n      }\n    } else if (refDestructuringErrors) { this.checkPatternErrors(refDestructuringErrors, true); }\n    return node\n  };\n\n  // Convert list of expression atoms to binding list.\n\n  pp$2.toAssignableList = function(exprList, isBinding) {\n    var end = exprList.length;\n    for (var i = 0; i < end; i++) {\n      var elt = exprList[i];\n      if (elt) { this.toAssignable(elt, isBinding); }\n    }\n    if (end) {\n      var last = exprList[end - 1];\n      if (this.options.ecmaVersion === 6 && isBinding && last && last.type === \"RestElement\" && last.argument.type !== \"Identifier\")\n        { this.unexpected(last.argument.start); }\n    }\n    return exprList\n  };\n\n  // Parses spread element.\n\n  pp$2.parseSpread = function(refDestructuringErrors) {\n    var node = this.startNode();\n    this.next();\n    node.argument = this.parseMaybeAssign(false, refDestructuringErrors);\n    return this.finishNode(node, \"SpreadElement\")\n  };\n\n  pp$2.parseRestBinding = function() {\n    var node = this.startNode();\n    this.next();\n\n    // RestElement inside of a function parameter must be an identifier\n    if (this.options.ecmaVersion === 6 && this.type !== types.name)\n      { this.unexpected(); }\n\n    node.argument = this.parseBindingAtom();\n\n    return this.finishNode(node, \"RestElement\")\n  };\n\n  // Parses lvalue (assignable) atom.\n\n  pp$2.parseBindingAtom = function() {\n    if (this.options.ecmaVersion >= 6) {\n      switch (this.type) {\n      case types.bracketL:\n        var node = this.startNode();\n        this.next();\n        node.elements = this.parseBindingList(types.bracketR, true, true);\n        return this.finishNode(node, \"ArrayPattern\")\n\n      case types.braceL:\n        return this.parseObj(true)\n      }\n    }\n    return this.parseIdent()\n  };\n\n  pp$2.parseBindingList = function(close, allowEmpty, allowTrailingComma) {\n    var elts = [], first = true;\n    while (!this.eat(close)) {\n      if (first) { first = false; }\n      else { this.expect(types.comma); }\n      if (allowEmpty && this.type === types.comma) {\n        elts.push(null);\n      } else if (allowTrailingComma && this.afterTrailingComma(close)) {\n        break\n      } else if (this.type === types.ellipsis) {\n        var rest = this.parseRestBinding();\n        this.parseBindingListItem(rest);\n        elts.push(rest);\n        if (this.type === types.comma) { this.raise(this.start, \"Comma is not permitted after the rest element\"); }\n        this.expect(close);\n        break\n      } else {\n        var elem = this.parseMaybeDefault(this.start, this.startLoc);\n        this.parseBindingListItem(elem);\n        elts.push(elem);\n      }\n    }\n    return elts\n  };\n\n  pp$2.parseBindingListItem = function(param) {\n    return param\n  };\n\n  // Parses assignment pattern around given atom if possible.\n\n  pp$2.parseMaybeDefault = function(startPos, startLoc, left) {\n    left = left || this.parseBindingAtom();\n    if (this.options.ecmaVersion < 6 || !this.eat(types.eq)) { return left }\n    var node = this.startNodeAt(startPos, startLoc);\n    node.left = left;\n    node.right = this.parseMaybeAssign();\n    return this.finishNode(node, \"AssignmentPattern\")\n  };\n\n  // Verify that a node is an lval \u2014 something that can be assigned\n  // to.\n  // bindingType can be either:\n  // 'var' indicating that the lval creates a 'var' binding\n  // 'let' indicating that the lval creates a lexical ('let' or 'const') binding\n  // 'none' indicating that the binding should be checked for illegal identifiers, but not for duplicate references\n\n  pp$2.checkLVal = function(expr, bindingType, checkClashes) {\n    if ( bindingType === void 0 ) bindingType = BIND_NONE;\n\n    switch (expr.type) {\n    case \"Identifier\":\n      if (bindingType === BIND_LEXICAL && expr.name === \"let\")\n        { this.raiseRecoverable(expr.start, \"let is disallowed as a lexically bound name\"); }\n      if (this.strict && this.reservedWordsStrictBind.test(expr.name))\n        { this.raiseRecoverable(expr.start, (bindingType ? \"Binding \" : \"Assigning to \") + expr.name + \" in strict mode\"); }\n      if (checkClashes) {\n        if (has(checkClashes, expr.name))\n          { this.raiseRecoverable(expr.start, \"Argument name clash\"); }\n        checkClashes[expr.name] = true;\n      }\n      if (bindingType !== BIND_NONE && bindingType !== BIND_OUTSIDE) { this.declareName(expr.name, bindingType, expr.start); }\n      break\n\n    case \"ChainExpression\":\n      this.raiseRecoverable(expr.start, \"Optional chaining cannot appear in left-hand side\");\n      break\n\n    case \"MemberExpression\":\n      if (bindingType) { this.raiseRecoverable(expr.start, \"Binding member expression\"); }\n      break\n\n    case \"ObjectPattern\":\n      for (var i = 0, list = expr.properties; i < list.length; i += 1)\n        {\n      var prop = list[i];\n\n      this.checkLVal(prop, bindingType, checkClashes);\n    }\n      break\n\n    case \"Property\":\n      // AssignmentProperty has type === \"Property\"\n      this.checkLVal(expr.value, bindingType, checkClashes);\n      break\n\n    case \"ArrayPattern\":\n      for (var i$1 = 0, list$1 = expr.elements; i$1 < list$1.length; i$1 += 1) {\n        var elem = list$1[i$1];\n\n      if (elem) { this.checkLVal(elem, bindingType, checkClashes); }\n      }\n      break\n\n    case \"AssignmentPattern\":\n      this.checkLVal(expr.left, bindingType, checkClashes);\n      break\n\n    case \"RestElement\":\n      this.checkLVal(expr.argument, bindingType, checkClashes);\n      break\n\n    case \"ParenthesizedExpression\":\n      this.checkLVal(expr.expression, bindingType, checkClashes);\n      break\n\n    default:\n      this.raise(expr.start, (bindingType ? \"Binding\" : \"Assigning to\") + \" rvalue\");\n    }\n  };\n\n  // A recursive descent parser operates by defining functions for all\n\n  var pp$3 = Parser.prototype;\n\n  // Check if property name clashes with already added.\n  // Object/class getters and setters are not allowed to clash \u2014\n  // either with each other or with an init property \u2014 and in\n  // strict mode, init properties are also not allowed to be repeated.\n\n  pp$3.checkPropClash = function(prop, propHash, refDestructuringErrors) {\n    if (this.options.ecmaVersion >= 9 && prop.type === \"SpreadElement\")\n      { return }\n    if (this.options.ecmaVersion >= 6 && (prop.computed || prop.method || prop.shorthand))\n      { return }\n    var key = prop.key;\n    var name;\n    switch (key.type) {\n    case \"Identifier\": name = key.name; break\n    case \"Literal\": name = String(key.value); break\n    default: return\n    }\n    var kind = prop.kind;\n    if (this.options.ecmaVersion >= 6) {\n      if (name === \"__proto__\" && kind === \"init\") {\n        if (propHash.proto) {\n          if (refDestructuringErrors) {\n            if (refDestructuringErrors.doubleProto < 0)\n              { refDestructuringErrors.doubleProto = key.start; }\n            // Backwards-compat kludge. Can be removed in version 6.0\n          } else { this.raiseRecoverable(key.start, \"Redefinition of __proto__ property\"); }\n        }\n        propHash.proto = true;\n      }\n      return\n    }\n    name = \"$\" + name;\n    var other = propHash[name];\n    if (other) {\n      var redefinition;\n      if (kind === \"init\") {\n        redefinition = this.strict && other.init || other.get || other.set;\n      } else {\n        redefinition = other.init || other[kind];\n      }\n      if (redefinition)\n        { this.raiseRecoverable(key.start, \"Redefinition of property\"); }\n    } else {\n      other = propHash[name] = {\n        init: false,\n        get: false,\n        set: false\n      };\n    }\n    other[kind] = true;\n  };\n\n  // ### Expression parsing\n\n  // These nest, from the most general expression type at the top to\n  // 'atomic', nondivisible expression types at the bottom. Most of\n  // the functions will simply let the function(s) below them parse,\n  // and, *if* the syntactic construct they handle is present, wrap\n  // the AST node that the inner parser gave them in another node.\n\n  // Parse a full expression. The optional arguments are used to\n  // forbid the `in` operator (in for loops initalization expressions)\n  // and provide reference for storing '=' operator inside shorthand\n  // property assignment in contexts where both object expression\n  // and object pattern might appear (so it's possible to raise\n  // delayed syntax error at correct position).\n\n  pp$3.parseExpression = function(noIn, refDestructuringErrors) {\n    var startPos = this.start, startLoc = this.startLoc;\n    var expr = this.parseMaybeAssign(noIn, refDestructuringErrors);\n    if (this.type === types.comma) {\n      var node = this.startNodeAt(startPos, startLoc);\n      node.expressions = [expr];\n      while (this.eat(types.comma)) { node.expressions.push(this.parseMaybeAssign(noIn, refDestructuringErrors)); }\n      return this.finishNode(node, \"SequenceExpression\")\n    }\n    return expr\n  };\n\n  // Parse an assignment expression. This includes applications of\n  // operators like `+=`.\n\n  pp$3.parseMaybeAssign = function(noIn, refDestructuringErrors, afterLeftParse) {\n    if (this.isContextual(\"yield\")) {\n      if (this.inGenerator) { return this.parseYield(noIn) }\n      // The tokenizer will assume an expression is allowed after\n      // `yield`, but this isn't that kind of yield\n      else { this.exprAllowed = false; }\n    }\n\n    var ownDestructuringErrors = false, oldParenAssign = -1, oldTrailingComma = -1;\n    if (refDestructuringErrors) {\n      oldParenAssign = refDestructuringErrors.parenthesizedAssign;\n      oldTrailingComma = refDestructuringErrors.trailingComma;\n      refDestructuringErrors.parenthesizedAssign = refDestructuringErrors.trailingComma = -1;\n    } else {\n      refDestructuringErrors = new DestructuringErrors;\n      ownDestructuringErrors = true;\n    }\n\n    var startPos = this.start, startLoc = this.startLoc;\n    if (this.type === types.parenL || this.type === types.name)\n      { this.potentialArrowAt = this.start; }\n    var left = this.parseMaybeConditional(noIn, refDestructuringErrors);\n    if (afterLeftParse) { left = afterLeftParse.call(this, left, startPos, startLoc); }\n    if (this.type.isAssign) {\n      var node = this.startNodeAt(startPos, startLoc);\n      node.operator = this.value;\n      node.left = this.type === types.eq ? this.toAssignable(left, false, refDestructuringErrors) : left;\n      if (!ownDestructuringErrors) {\n        refDestructuringErrors.parenthesizedAssign = refDestructuringErrors.trailingComma = refDestructuringErrors.doubleProto = -1;\n      }\n      if (refDestructuringErrors.shorthandAssign >= node.left.start)\n        { refDestructuringErrors.shorthandAssign = -1; } // reset because shorthand default was used correctly\n      this.checkLVal(left);\n      this.next();\n      node.right = this.parseMaybeAssign(noIn);\n      return this.finishNode(node, \"AssignmentExpression\")\n    } else {\n      if (ownDestructuringErrors) { this.checkExpressionErrors(refDestructuringErrors, true); }\n    }\n    if (oldParenAssign > -1) { refDestructuringErrors.parenthesizedAssign = oldParenAssign; }\n    if (oldTrailingComma > -1) { refDestructuringErrors.trailingComma = oldTrailingComma; }\n    return left\n  };\n\n  // Parse a ternary conditional (`?:`) operator.\n\n  pp$3.parseMaybeConditional = function(noIn, refDestructuringErrors) {\n    var startPos = this.start, startLoc = this.startLoc;\n    var expr = this.parseExprOps(noIn, refDestructuringErrors);\n    if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n    if (this.eat(types.question)) {\n      var node = this.startNodeAt(startPos, startLoc);\n      node.test = expr;\n      node.consequent = this.parseMaybeAssign();\n      this.expect(types.colon);\n      node.alternate = this.parseMaybeAssign(noIn);\n      return this.finishNode(node, \"ConditionalExpression\")\n    }\n    return expr\n  };\n\n  // Start the precedence parser.\n\n  pp$3.parseExprOps = function(noIn, refDestructuringErrors) {\n    var startPos = this.start, startLoc = this.startLoc;\n    var expr = this.parseMaybeUnary(refDestructuringErrors, false);\n    if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n    return expr.start === startPos && expr.type === \"ArrowFunctionExpression\" ? expr : this.parseExprOp(expr, startPos, startLoc, -1, noIn)\n  };\n\n  // Parse binary operators with the operator precedence parsing\n  // algorithm. `left` is the left-hand side of the operator.\n  // `minPrec` provides context that allows the function to stop and\n  // defer further parser to one of its callers when it encounters an\n  // operator that has a lower precedence than the set it is parsing.\n\n  pp$3.parseExprOp = function(left, leftStartPos, leftStartLoc, minPrec, noIn) {\n    var prec = this.type.binop;\n    if (prec != null && (!noIn || this.type !== types._in)) {\n      if (prec > minPrec) {\n        var logical = this.type === types.logicalOR || this.type === types.logicalAND;\n        var coalesce = this.type === types.coalesce;\n        if (coalesce) {\n          // Handle the precedence of `tt.coalesce` as equal to the range of logical expressions.\n          // In other words, `node.right` shouldn't contain logical expressions in order to check the mixed error.\n          prec = types.logicalAND.binop;\n        }\n        var op = this.value;\n        this.next();\n        var startPos = this.start, startLoc = this.startLoc;\n        var right = this.parseExprOp(this.parseMaybeUnary(null, false), startPos, startLoc, prec, noIn);\n        var node = this.buildBinary(leftStartPos, leftStartLoc, left, right, op, logical || coalesce);\n        if ((logical && this.type === types.coalesce) || (coalesce && (this.type === types.logicalOR || this.type === types.logicalAND))) {\n          this.raiseRecoverable(this.start, \"Logical expressions and coalesce expressions cannot be mixed. Wrap either by parentheses\");\n        }\n        return this.parseExprOp(node, leftStartPos, leftStartLoc, minPrec, noIn)\n      }\n    }\n    return left\n  };\n\n  pp$3.buildBinary = function(startPos, startLoc, left, right, op, logical) {\n    var node = this.startNodeAt(startPos, startLoc);\n    node.left = left;\n    node.operator = op;\n    node.right = right;\n    return this.finishNode(node, logical ? \"LogicalExpression\" : \"BinaryExpression\")\n  };\n\n  // Parse unary operators, both prefix and postfix.\n\n  pp$3.parseMaybeUnary = function(refDestructuringErrors, sawUnary) {\n    var startPos = this.start, startLoc = this.startLoc, expr;\n    if (this.isContextual(\"await\") && (this.inAsync || (!this.inFunction && this.options.allowAwaitOutsideFunction))) {\n      expr = this.parseAwait();\n      sawUnary = true;\n    } else if (this.type.prefix) {\n      var node = this.startNode(), update = this.type === types.incDec;\n      node.operator = this.value;\n      node.prefix = true;\n      this.next();\n      node.argument = this.parseMaybeUnary(null, true);\n      this.checkExpressionErrors(refDestructuringErrors, true);\n      if (update) { this.checkLVal(node.argument); }\n      else if (this.strict && node.operator === \"delete\" &&\n               node.argument.type === \"Identifier\")\n        { this.raiseRecoverable(node.start, \"Deleting local variable in strict mode\"); }\n      else { sawUnary = true; }\n      expr = this.finishNode(node, update ? \"UpdateExpression\" : \"UnaryExpression\");\n    } else {\n      expr = this.parseExprSubscripts(refDestructuringErrors);\n      if (this.checkExpressionErrors(refDestructuringErrors)) { return expr }\n      while (this.type.postfix && !this.canInsertSemicolon()) {\n        var node$1 = this.startNodeAt(startPos, startLoc);\n        node$1.operator = this.value;\n        node$1.prefix = false;\n        node$1.argument = expr;\n        this.checkLVal(expr);\n        this.next();\n        expr = this.finishNode(node$1, \"UpdateExpression\");\n      }\n    }\n\n    if (!sawUnary && this.eat(types.starstar))\n      { return this.buildBinary(startPos, startLoc, expr, this.parseMaybeUnary(null, false), \"**\", false) }\n    else\n      { return expr }\n  };\n\n  // Parse call, dot, and `[]`-subscript expressions.\n\n  pp$3.parseExprSubscripts = function(refDestructuringErrors) {\n    var startPos = this.start, startLoc = this.startLoc;\n    var expr = this.parseExprAtom(refDestructuringErrors);\n    if (expr.type === \"ArrowFunctionExpression\" && this.input.slice(this.lastTokStart, this.lastTokEnd) !== \")\")\n      { return expr }\n    var result = this.parseSubscripts(expr, startPos, startLoc);\n    if (refDestructuringErrors && result.type === \"MemberExpression\") {\n      if (refDestructuringErrors.parenthesizedAssign >= result.start) { refDestructuringErrors.parenthesizedAssign = -1; }\n      if (refDestructuringErrors.parenthesizedBind >= result.start) { refDestructuringErrors.parenthesizedBind = -1; }\n    }\n    return result\n  };\n\n  pp$3.parseSubscripts = function(base, startPos, startLoc, noCalls) {\n    var maybeAsyncArrow = this.options.ecmaVersion >= 8 && base.type === \"Identifier\" && base.name === \"async\" &&\n        this.lastTokEnd === base.end && !this.canInsertSemicolon() && base.end - base.start === 5 &&\n        this.potentialArrowAt === base.start;\n    var optionalChained = false;\n\n    while (true) {\n      var element = this.parseSubscript(base, startPos, startLoc, noCalls, maybeAsyncArrow, optionalChained);\n\n      if (element.optional) { optionalChained = true; }\n      if (element === base || element.type === \"ArrowFunctionExpression\") {\n        if (optionalChained) {\n          var chainNode = this.startNodeAt(startPos, startLoc);\n          chainNode.expression = element;\n          element = this.finishNode(chainNode, \"ChainExpression\");\n        }\n        return element\n      }\n\n      base = element;\n    }\n  };\n\n  pp$3.parseSubscript = function(base, startPos, startLoc, noCalls, maybeAsyncArrow, optionalChained) {\n    var optionalSupported = this.options.ecmaVersion >= 11;\n    var optional = optionalSupported && this.eat(types.questionDot);\n    if (noCalls && optional) { this.raise(this.lastTokStart, \"Optional chaining cannot appear in the callee of new expressions\"); }\n\n    var computed = this.eat(types.bracketL);\n    if (computed || (optional && this.type !== types.parenL && this.type !== types.backQuote) || this.eat(types.dot)) {\n      var node = this.startNodeAt(startPos, startLoc);\n      node.object = base;\n      node.property = computed ? this.parseExpression() : this.parseIdent(this.options.allowReserved !== \"never\");\n      node.computed = !!computed;\n      if (computed) { this.expect(types.bracketR); }\n      if (optionalSupported) {\n        node.optional = optional;\n      }\n      base = this.finishNode(node, \"MemberExpression\");\n    } else if (!noCalls && this.eat(types.parenL)) {\n      var refDestructuringErrors = new DestructuringErrors, oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n      this.yieldPos = 0;\n      this.awaitPos = 0;\n      this.awaitIdentPos = 0;\n      var exprList = this.parseExprList(types.parenR, this.options.ecmaVersion >= 8, false, refDestructuringErrors);\n      if (maybeAsyncArrow && !optional && !this.canInsertSemicolon() && this.eat(types.arrow)) {\n        this.checkPatternErrors(refDestructuringErrors, false);\n        this.checkYieldAwaitInDefaultParams();\n        if (this.awaitIdentPos > 0)\n          { this.raise(this.awaitIdentPos, \"Cannot use 'await' as identifier inside an async function\"); }\n        this.yieldPos = oldYieldPos;\n        this.awaitPos = oldAwaitPos;\n        this.awaitIdentPos = oldAwaitIdentPos;\n        return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList, true)\n      }\n      this.checkExpressionErrors(refDestructuringErrors, true);\n      this.yieldPos = oldYieldPos || this.yieldPos;\n      this.awaitPos = oldAwaitPos || this.awaitPos;\n      this.awaitIdentPos = oldAwaitIdentPos || this.awaitIdentPos;\n      var node$1 = this.startNodeAt(startPos, startLoc);\n      node$1.callee = base;\n      node$1.arguments = exprList;\n      if (optionalSupported) {\n        node$1.optional = optional;\n      }\n      base = this.finishNode(node$1, \"CallExpression\");\n    } else if (this.type === types.backQuote) {\n      if (optional || optionalChained) {\n        this.raise(this.start, \"Optional chaining cannot appear in the tag of tagged template expressions\");\n      }\n      var node$2 = this.startNodeAt(startPos, startLoc);\n      node$2.tag = base;\n      node$2.quasi = this.parseTemplate({isTagged: true});\n      base = this.finishNode(node$2, \"TaggedTemplateExpression\");\n    }\n    return base\n  };\n\n  // Parse an atomic expression \u2014 either a single token that is an\n  // expression, an expression started by a keyword like `function` or\n  // `new`, or an expression wrapped in punctuation like `()`, `[]`,\n  // or `{}`.\n\n  pp$3.parseExprAtom = function(refDestructuringErrors) {\n    // If a division operator appears in an expression position, the\n    // tokenizer got confused, and we force it to read a regexp instead.\n    if (this.type === types.slash) { this.readRegexp(); }\n\n    var node, canBeArrow = this.potentialArrowAt === this.start;\n    switch (this.type) {\n    case types._super:\n      if (!this.allowSuper)\n        { this.raise(this.start, \"'super' keyword outside a method\"); }\n      node = this.startNode();\n      this.next();\n      if (this.type === types.parenL && !this.allowDirectSuper)\n        { this.raise(node.start, \"super() call outside constructor of a subclass\"); }\n      // The `super` keyword can appear at below:\n      // SuperProperty:\n      //     super [ Expression ]\n      //     super . IdentifierName\n      // SuperCall:\n      //     super ( Arguments )\n      if (this.type !== types.dot && this.type !== types.bracketL && this.type !== types.parenL)\n        { this.unexpected(); }\n      return this.finishNode(node, \"Super\")\n\n    case types._this:\n      node = this.startNode();\n      this.next();\n      return this.finishNode(node, \"ThisExpression\")\n\n    case types.name:\n      var startPos = this.start, startLoc = this.startLoc, containsEsc = this.containsEsc;\n      var id = this.parseIdent(false);\n      if (this.options.ecmaVersion >= 8 && !containsEsc && id.name === \"async\" && !this.canInsertSemicolon() && this.eat(types._function))\n        { return this.parseFunction(this.startNodeAt(startPos, startLoc), 0, false, true) }\n      if (canBeArrow && !this.canInsertSemicolon()) {\n        if (this.eat(types.arrow))\n          { return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], false) }\n        if (this.options.ecmaVersion >= 8 && id.name === \"async\" && this.type === types.name && !containsEsc) {\n          id = this.parseIdent(false);\n          if (this.canInsertSemicolon() || !this.eat(types.arrow))\n            { this.unexpected(); }\n          return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), [id], true)\n        }\n      }\n      return id\n\n    case types.regexp:\n      var value = this.value;\n      node = this.parseLiteral(value.value);\n      node.regex = {pattern: value.pattern, flags: value.flags};\n      return node\n\n    case types.num: case types.string:\n      return this.parseLiteral(this.value)\n\n    case types._null: case types._true: case types._false:\n      node = this.startNode();\n      node.value = this.type === types._null ? null : this.type === types._true;\n      node.raw = this.type.keyword;\n      this.next();\n      return this.finishNode(node, \"Literal\")\n\n    case types.parenL:\n      var start = this.start, expr = this.parseParenAndDistinguishExpression(canBeArrow);\n      if (refDestructuringErrors) {\n        if (refDestructuringErrors.parenthesizedAssign < 0 && !this.isSimpleAssignTarget(expr))\n          { refDestructuringErrors.parenthesizedAssign = start; }\n        if (refDestructuringErrors.parenthesizedBind < 0)\n          { refDestructuringErrors.parenthesizedBind = start; }\n      }\n      return expr\n\n    case types.bracketL:\n      node = this.startNode();\n      this.next();\n      node.elements = this.parseExprList(types.bracketR, true, true, refDestructuringErrors);\n      return this.finishNode(node, \"ArrayExpression\")\n\n    case types.braceL:\n      return this.parseObj(false, refDestructuringErrors)\n\n    case types._function:\n      node = this.startNode();\n      this.next();\n      return this.parseFunction(node, 0)\n\n    case types._class:\n      return this.parseClass(this.startNode(), false)\n\n    case types._new:\n      return this.parseNew()\n\n    case types.backQuote:\n      return this.parseTemplate()\n\n    case types._import:\n      if (this.options.ecmaVersion >= 11) {\n        return this.parseExprImport()\n      } else {\n        return this.unexpected()\n      }\n\n    default:\n      this.unexpected();\n    }\n  };\n\n  pp$3.parseExprImport = function() {\n    var node = this.startNode();\n\n    // Consume `import` as an identifier for `import.meta`.\n    // Because `this.parseIdent(true)` doesn't check escape sequences, it needs the check of `this.containsEsc`.\n    if (this.containsEsc) { this.raiseRecoverable(this.start, \"Escape sequence in keyword import\"); }\n    var meta = this.parseIdent(true);\n\n    switch (this.type) {\n    case types.parenL:\n      return this.parseDynamicImport(node)\n    case types.dot:\n      node.meta = meta;\n      return this.parseImportMeta(node)\n    default:\n      this.unexpected();\n    }\n  };\n\n  pp$3.parseDynamicImport = function(node) {\n    this.next(); // skip `(`\n\n    // Parse node.source.\n    node.source = this.parseMaybeAssign();\n\n    // Verify ending.\n    if (!this.eat(types.parenR)) {\n      var errorPos = this.start;\n      if (this.eat(types.comma) && this.eat(types.parenR)) {\n        this.raiseRecoverable(errorPos, \"Trailing comma is not allowed in import()\");\n      } else {\n        this.unexpected(errorPos);\n      }\n    }\n\n    return this.finishNode(node, \"ImportExpression\")\n  };\n\n  pp$3.parseImportMeta = function(node) {\n    this.next(); // skip `.`\n\n    var containsEsc = this.containsEsc;\n    node.property = this.parseIdent(true);\n\n    if (node.property.name !== \"meta\")\n      { this.raiseRecoverable(node.property.start, \"The only valid meta property for import is 'import.meta'\"); }\n    if (containsEsc)\n      { this.raiseRecoverable(node.start, \"'import.meta' must not contain escaped characters\"); }\n    if (this.options.sourceType !== \"module\")\n      { this.raiseRecoverable(node.start, \"Cannot use 'import.meta' outside a module\"); }\n\n    return this.finishNode(node, \"MetaProperty\")\n  };\n\n  pp$3.parseLiteral = function(value) {\n    var node = this.startNode();\n    node.value = value;\n    node.raw = this.input.slice(this.start, this.end);\n    if (node.raw.charCodeAt(node.raw.length - 1) === 110) { node.bigint = node.raw.slice(0, -1).replace(/_/g, \"\"); }\n    this.next();\n    return this.finishNode(node, \"Literal\")\n  };\n\n  pp$3.parseParenExpression = function() {\n    this.expect(types.parenL);\n    var val = this.parseExpression();\n    this.expect(types.parenR);\n    return val\n  };\n\n  pp$3.parseParenAndDistinguishExpression = function(canBeArrow) {\n    var startPos = this.start, startLoc = this.startLoc, val, allowTrailingComma = this.options.ecmaVersion >= 8;\n    if (this.options.ecmaVersion >= 6) {\n      this.next();\n\n      var innerStartPos = this.start, innerStartLoc = this.startLoc;\n      var exprList = [], first = true, lastIsComma = false;\n      var refDestructuringErrors = new DestructuringErrors, oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, spreadStart;\n      this.yieldPos = 0;\n      this.awaitPos = 0;\n      // Do not save awaitIdentPos to allow checking awaits nested in parameters\n      while (this.type !== types.parenR) {\n        first ? first = false : this.expect(types.comma);\n        if (allowTrailingComma && this.afterTrailingComma(types.parenR, true)) {\n          lastIsComma = true;\n          break\n        } else if (this.type === types.ellipsis) {\n          spreadStart = this.start;\n          exprList.push(this.parseParenItem(this.parseRestBinding()));\n          if (this.type === types.comma) { this.raise(this.start, \"Comma is not permitted after the rest element\"); }\n          break\n        } else {\n          exprList.push(this.parseMaybeAssign(false, refDestructuringErrors, this.parseParenItem));\n        }\n      }\n      var innerEndPos = this.start, innerEndLoc = this.startLoc;\n      this.expect(types.parenR);\n\n      if (canBeArrow && !this.canInsertSemicolon() && this.eat(types.arrow)) {\n        this.checkPatternErrors(refDestructuringErrors, false);\n        this.checkYieldAwaitInDefaultParams();\n        this.yieldPos = oldYieldPos;\n        this.awaitPos = oldAwaitPos;\n        return this.parseParenArrowList(startPos, startLoc, exprList)\n      }\n\n      if (!exprList.length || lastIsComma) { this.unexpected(this.lastTokStart); }\n      if (spreadStart) { this.unexpected(spreadStart); }\n      this.checkExpressionErrors(refDestructuringErrors, true);\n      this.yieldPos = oldYieldPos || this.yieldPos;\n      this.awaitPos = oldAwaitPos || this.awaitPos;\n\n      if (exprList.length > 1) {\n        val = this.startNodeAt(innerStartPos, innerStartLoc);\n        val.expressions = exprList;\n        this.finishNodeAt(val, \"SequenceExpression\", innerEndPos, innerEndLoc);\n      } else {\n        val = exprList[0];\n      }\n    } else {\n      val = this.parseParenExpression();\n    }\n\n    if (this.options.preserveParens) {\n      var par = this.startNodeAt(startPos, startLoc);\n      par.expression = val;\n      return this.finishNode(par, \"ParenthesizedExpression\")\n    } else {\n      return val\n    }\n  };\n\n  pp$3.parseParenItem = function(item) {\n    return item\n  };\n\n  pp$3.parseParenArrowList = function(startPos, startLoc, exprList) {\n    return this.parseArrowExpression(this.startNodeAt(startPos, startLoc), exprList)\n  };\n\n  // New's precedence is slightly tricky. It must allow its argument to\n  // be a `[]` or dot subscript expression, but not a call \u2014 at least,\n  // not without wrapping it in parentheses. Thus, it uses the noCalls\n  // argument to parseSubscripts to prevent it from consuming the\n  // argument list.\n\n  var empty$1 = [];\n\n  pp$3.parseNew = function() {\n    if (this.containsEsc) { this.raiseRecoverable(this.start, \"Escape sequence in keyword new\"); }\n    var node = this.startNode();\n    var meta = this.parseIdent(true);\n    if (this.options.ecmaVersion >= 6 && this.eat(types.dot)) {\n      node.meta = meta;\n      var containsEsc = this.containsEsc;\n      node.property = this.parseIdent(true);\n      if (node.property.name !== \"target\")\n        { this.raiseRecoverable(node.property.start, \"The only valid meta property for new is 'new.target'\"); }\n      if (containsEsc)\n        { this.raiseRecoverable(node.start, \"'new.target' must not contain escaped characters\"); }\n      if (!this.inNonArrowFunction())\n        { this.raiseRecoverable(node.start, \"'new.target' can only be used in functions\"); }\n      return this.finishNode(node, \"MetaProperty\")\n    }\n    var startPos = this.start, startLoc = this.startLoc, isImport = this.type === types._import;\n    node.callee = this.parseSubscripts(this.parseExprAtom(), startPos, startLoc, true);\n    if (isImport && node.callee.type === \"ImportExpression\") {\n      this.raise(startPos, \"Cannot use new with import()\");\n    }\n    if (this.eat(types.parenL)) { node.arguments = this.parseExprList(types.parenR, this.options.ecmaVersion >= 8, false); }\n    else { node.arguments = empty$1; }\n    return this.finishNode(node, \"NewExpression\")\n  };\n\n  // Parse template expression.\n\n  pp$3.parseTemplateElement = function(ref) {\n    var isTagged = ref.isTagged;\n\n    var elem = this.startNode();\n    if (this.type === types.invalidTemplate) {\n      if (!isTagged) {\n        this.raiseRecoverable(this.start, \"Bad escape sequence in untagged template literal\");\n      }\n      elem.value = {\n        raw: this.value,\n        cooked: null\n      };\n    } else {\n      elem.value = {\n        raw: this.input.slice(this.start, this.end).replace(/\\r\\n?/g, \"\\n\"),\n        cooked: this.value\n      };\n    }\n    this.next();\n    elem.tail = this.type === types.backQuote;\n    return this.finishNode(elem, \"TemplateElement\")\n  };\n\n  pp$3.parseTemplate = function(ref) {\n    if ( ref === void 0 ) ref = {};\n    var isTagged = ref.isTagged; if ( isTagged === void 0 ) isTagged = false;\n\n    var node = this.startNode();\n    this.next();\n    node.expressions = [];\n    var curElt = this.parseTemplateElement({isTagged: isTagged});\n    node.quasis = [curElt];\n    while (!curElt.tail) {\n      if (this.type === types.eof) { this.raise(this.pos, \"Unterminated template literal\"); }\n      this.expect(types.dollarBraceL);\n      node.expressions.push(this.parseExpression());\n      this.expect(types.braceR);\n      node.quasis.push(curElt = this.parseTemplateElement({isTagged: isTagged}));\n    }\n    this.next();\n    return this.finishNode(node, \"TemplateLiteral\")\n  };\n\n  pp$3.isAsyncProp = function(prop) {\n    return !prop.computed && prop.key.type === \"Identifier\" && prop.key.name === \"async\" &&\n      (this.type === types.name || this.type === types.num || this.type === types.string || this.type === types.bracketL || this.type.keyword || (this.options.ecmaVersion >= 9 && this.type === types.star)) &&\n      !lineBreak.test(this.input.slice(this.lastTokEnd, this.start))\n  };\n\n  // Parse an object literal or binding pattern.\n\n  pp$3.parseObj = function(isPattern, refDestructuringErrors) {\n    var node = this.startNode(), first = true, propHash = {};\n    node.properties = [];\n    this.next();\n    while (!this.eat(types.braceR)) {\n      if (!first) {\n        this.expect(types.comma);\n        if (this.options.ecmaVersion >= 5 && this.afterTrailingComma(types.braceR)) { break }\n      } else { first = false; }\n\n      var prop = this.parseProperty(isPattern, refDestructuringErrors);\n      if (!isPattern) { this.checkPropClash(prop, propHash, refDestructuringErrors); }\n      node.properties.push(prop);\n    }\n    return this.finishNode(node, isPattern ? \"ObjectPattern\" : \"ObjectExpression\")\n  };\n\n  pp$3.parseProperty = function(isPattern, refDestructuringErrors) {\n    var prop = this.startNode(), isGenerator, isAsync, startPos, startLoc;\n    if (this.options.ecmaVersion >= 9 && this.eat(types.ellipsis)) {\n      if (isPattern) {\n        prop.argument = this.parseIdent(false);\n        if (this.type === types.comma) {\n          this.raise(this.start, \"Comma is not permitted after the rest element\");\n        }\n        return this.finishNode(prop, \"RestElement\")\n      }\n      // To disallow parenthesized identifier via `this.toAssignable()`.\n      if (this.type === types.parenL && refDestructuringErrors) {\n        if (refDestructuringErrors.parenthesizedAssign < 0) {\n          refDestructuringErrors.parenthesizedAssign = this.start;\n        }\n        if (refDestructuringErrors.parenthesizedBind < 0) {\n          refDestructuringErrors.parenthesizedBind = this.start;\n        }\n      }\n      // Parse argument.\n      prop.argument = this.parseMaybeAssign(false, refDestructuringErrors);\n      // To disallow trailing comma via `this.toAssignable()`.\n      if (this.type === types.comma && refDestructuringErrors && refDestructuringErrors.trailingComma < 0) {\n        refDestructuringErrors.trailingComma = this.start;\n      }\n      // Finish\n      return this.finishNode(prop, \"SpreadElement\")\n    }\n    if (this.options.ecmaVersion >= 6) {\n      prop.method = false;\n      prop.shorthand = false;\n      if (isPattern || refDestructuringErrors) {\n        startPos = this.start;\n        startLoc = this.startLoc;\n      }\n      if (!isPattern)\n        { isGenerator = this.eat(types.star); }\n    }\n    var containsEsc = this.containsEsc;\n    this.parsePropertyName(prop);\n    if (!isPattern && !containsEsc && this.options.ecmaVersion >= 8 && !isGenerator && this.isAsyncProp(prop)) {\n      isAsync = true;\n      isGenerator = this.options.ecmaVersion >= 9 && this.eat(types.star);\n      this.parsePropertyName(prop, refDestructuringErrors);\n    } else {\n      isAsync = false;\n    }\n    this.parsePropertyValue(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc);\n    return this.finishNode(prop, \"Property\")\n  };\n\n  pp$3.parsePropertyValue = function(prop, isPattern, isGenerator, isAsync, startPos, startLoc, refDestructuringErrors, containsEsc) {\n    if ((isGenerator || isAsync) && this.type === types.colon)\n      { this.unexpected(); }\n\n    if (this.eat(types.colon)) {\n      prop.value = isPattern ? this.parseMaybeDefault(this.start, this.startLoc) : this.parseMaybeAssign(false, refDestructuringErrors);\n      prop.kind = \"init\";\n    } else if (this.options.ecmaVersion >= 6 && this.type === types.parenL) {\n      if (isPattern) { this.unexpected(); }\n      prop.kind = \"init\";\n      prop.method = true;\n      prop.value = this.parseMethod(isGenerator, isAsync);\n    } else if (!isPattern && !containsEsc &&\n               this.options.ecmaVersion >= 5 && !prop.computed && prop.key.type === \"Identifier\" &&\n               (prop.key.name === \"get\" || prop.key.name === \"set\") &&\n               (this.type !== types.comma && this.type !== types.braceR && this.type !== types.eq)) {\n      if (isGenerator || isAsync) { this.unexpected(); }\n      prop.kind = prop.key.name;\n      this.parsePropertyName(prop);\n      prop.value = this.parseMethod(false);\n      var paramCount = prop.kind === \"get\" ? 0 : 1;\n      if (prop.value.params.length !== paramCount) {\n        var start = prop.value.start;\n        if (prop.kind === \"get\")\n          { this.raiseRecoverable(start, \"getter should have no params\"); }\n        else\n          { this.raiseRecoverable(start, \"setter should have exactly one param\"); }\n      } else {\n        if (prop.kind === \"set\" && prop.value.params[0].type === \"RestElement\")\n          { this.raiseRecoverable(prop.value.params[0].start, \"Setter cannot use rest params\"); }\n      }\n    } else if (this.options.ecmaVersion >= 6 && !prop.computed && prop.key.type === \"Identifier\") {\n      if (isGenerator || isAsync) { this.unexpected(); }\n      this.checkUnreserved(prop.key);\n      if (prop.key.name === \"await\" && !this.awaitIdentPos)\n        { this.awaitIdentPos = startPos; }\n      prop.kind = \"init\";\n      if (isPattern) {\n        prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key);\n      } else if (this.type === types.eq && refDestructuringErrors) {\n        if (refDestructuringErrors.shorthandAssign < 0)\n          { refDestructuringErrors.shorthandAssign = this.start; }\n        prop.value = this.parseMaybeDefault(startPos, startLoc, prop.key);\n      } else {\n        prop.value = prop.key;\n      }\n      prop.shorthand = true;\n    } else { this.unexpected(); }\n  };\n\n  pp$3.parsePropertyName = function(prop) {\n    if (this.options.ecmaVersion >= 6) {\n      if (this.eat(types.bracketL)) {\n        prop.computed = true;\n        prop.key = this.parseMaybeAssign();\n        this.expect(types.bracketR);\n        return prop.key\n      } else {\n        prop.computed = false;\n      }\n    }\n    return prop.key = this.type === types.num || this.type === types.string ? this.parseExprAtom() : this.parseIdent(this.options.allowReserved !== \"never\")\n  };\n\n  // Initialize empty function node.\n\n  pp$3.initFunction = function(node) {\n    node.id = null;\n    if (this.options.ecmaVersion >= 6) { node.generator = node.expression = false; }\n    if (this.options.ecmaVersion >= 8) { node.async = false; }\n  };\n\n  // Parse object or class method.\n\n  pp$3.parseMethod = function(isGenerator, isAsync, allowDirectSuper) {\n    var node = this.startNode(), oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n\n    this.initFunction(node);\n    if (this.options.ecmaVersion >= 6)\n      { node.generator = isGenerator; }\n    if (this.options.ecmaVersion >= 8)\n      { node.async = !!isAsync; }\n\n    this.yieldPos = 0;\n    this.awaitPos = 0;\n    this.awaitIdentPos = 0;\n    this.enterScope(functionFlags(isAsync, node.generator) | SCOPE_SUPER | (allowDirectSuper ? SCOPE_DIRECT_SUPER : 0));\n\n    this.expect(types.parenL);\n    node.params = this.parseBindingList(types.parenR, false, this.options.ecmaVersion >= 8);\n    this.checkYieldAwaitInDefaultParams();\n    this.parseFunctionBody(node, false, true);\n\n    this.yieldPos = oldYieldPos;\n    this.awaitPos = oldAwaitPos;\n    this.awaitIdentPos = oldAwaitIdentPos;\n    return this.finishNode(node, \"FunctionExpression\")\n  };\n\n  // Parse arrow function expression with given parameters.\n\n  pp$3.parseArrowExpression = function(node, params, isAsync) {\n    var oldYieldPos = this.yieldPos, oldAwaitPos = this.awaitPos, oldAwaitIdentPos = this.awaitIdentPos;\n\n    this.enterScope(functionFlags(isAsync, false) | SCOPE_ARROW);\n    this.initFunction(node);\n    if (this.options.ecmaVersion >= 8) { node.async = !!isAsync; }\n\n    this.yieldPos = 0;\n    this.awaitPos = 0;\n    this.awaitIdentPos = 0;\n\n    node.params = this.toAssignableList(params, true);\n    this.parseFunctionBody(node, true, false);\n\n    this.yieldPos = oldYieldPos;\n    this.awaitPos = oldAwaitPos;\n    this.awaitIdentPos = oldAwaitIdentPos;\n    return this.finishNode(node, \"ArrowFunctionExpression\")\n  };\n\n  // Parse function body and check parameters.\n\n  pp$3.parseFunctionBody = function(node, isArrowFunction, isMethod) {\n    var isExpression = isArrowFunction && this.type !== types.braceL;\n    var oldStrict = this.strict, useStrict = false;\n\n    if (isExpression) {\n      node.body = this.parseMaybeAssign();\n      node.expression = true;\n      this.checkParams(node, false);\n    } else {\n      var nonSimple = this.options.ecmaVersion >= 7 && !this.isSimpleParamList(node.params);\n      if (!oldStrict || nonSimple) {\n        useStrict = this.strictDirective(this.end);\n        // If this is a strict mode function, verify that argument names\n        // are not repeated, and it does not try to bind the words `eval`\n        // or `arguments`.\n        if (useStrict && nonSimple)\n          { this.raiseRecoverable(node.start, \"Illegal 'use strict' directive in function with non-simple parameter list\"); }\n      }\n      // Start a new scope with regard to labels and the `inFunction`\n      // flag (restore them to their old value afterwards).\n      var oldLabels = this.labels;\n      this.labels = [];\n      if (useStrict) { this.strict = true; }\n\n      // Add the params to varDeclaredNames to ensure that an error is thrown\n      // if a let/const declaration in the function clashes with one of the params.\n      this.checkParams(node, !oldStrict && !useStrict && !isArrowFunction && !isMethod && this.isSimpleParamList(node.params));\n      // Ensure the function name isn't a forbidden identifier in strict mode, e.g. 'eval'\n      if (this.strict && node.id) { this.checkLVal(node.id, BIND_OUTSIDE); }\n      node.body = this.parseBlock(false, undefined, useStrict && !oldStrict);\n      node.expression = false;\n      this.adaptDirectivePrologue(node.body.body);\n      this.labels = oldLabels;\n    }\n    this.exitScope();\n  };\n\n  pp$3.isSimpleParamList = function(params) {\n    for (var i = 0, list = params; i < list.length; i += 1)\n      {\n      var param = list[i];\n\n      if (param.type !== \"Identifier\") { return false\n    } }\n    return true\n  };\n\n  // Checks function params for various disallowed patterns such as using \"eval\"\n  // or \"arguments\" and duplicate parameters.\n\n  pp$3.checkParams = function(node, allowDuplicates) {\n    var nameHash = {};\n    for (var i = 0, list = node.params; i < list.length; i += 1)\n      {\n      var param = list[i];\n\n      this.checkLVal(param, BIND_VAR, allowDuplicates ? null : nameHash);\n    }\n  };\n\n  // Parses a comma-separated list of expressions, and returns them as\n  // an array. `close` is the token type that ends the list, and\n  // `allowEmpty` can be turned on to allow subsequent commas with\n  // nothing in between them to be parsed as `null` (which is needed\n  // for array literals).\n\n  pp$3.parseExprList = function(close, allowTrailingComma, allowEmpty, refDestructuringErrors) {\n    var elts = [], first = true;\n    while (!this.eat(close)) {\n      if (!first) {\n        this.expect(types.comma);\n        if (allowTrailingComma && this.afterTrailingComma(close)) { break }\n      } else { first = false; }\n\n      var elt = (void 0);\n      if (allowEmpty && this.type === types.comma)\n        { elt = null; }\n      else if (this.type === types.ellipsis) {\n        elt = this.parseSpread(refDestructuringErrors);\n        if (refDestructuringErrors && this.type === types.comma && refDestructuringErrors.trailingComma < 0)\n          { refDestructuringErrors.trailingComma = this.start; }\n      } else {\n        elt = this.parseMaybeAssign(false, refDestructuringErrors);\n      }\n      elts.push(elt);\n    }\n    return elts\n  };\n\n  pp$3.checkUnreserved = function(ref) {\n    var start = ref.start;\n    var end = ref.end;\n    var name = ref.name;\n\n    if (this.inGenerator && name === \"yield\")\n      { this.raiseRecoverable(start, \"Cannot use 'yield' as identifier inside a generator\"); }\n    if (this.inAsync && name === \"await\")\n      { this.raiseRecoverable(start, \"Cannot use 'await' as identifier inside an async function\"); }\n    if (this.keywords.test(name))\n      { this.raise(start, (\"Unexpected keyword '\" + name + \"'\")); }\n    if (this.options.ecmaVersion < 6 &&\n      this.input.slice(start, end).indexOf(\"\\\\\") !== -1) { return }\n    var re = this.strict ? this.reservedWordsStrict : this.reservedWords;\n    if (re.test(name)) {\n      if (!this.inAsync && name === \"await\")\n        { this.raiseRecoverable(start, \"Cannot use keyword 'await' outside an async function\"); }\n      this.raiseRecoverable(start, (\"The keyword '\" + name + \"' is reserved\"));\n    }\n  };\n\n  // Parse the next token as an identifier. If `liberal` is true (used\n  // when parsing properties), it will also convert keywords into\n  // identifiers.\n\n  pp$3.parseIdent = function(liberal, isBinding) {\n    var node = this.startNode();\n    if (this.type === types.name) {\n      node.name = this.value;\n    } else if (this.type.keyword) {\n      node.name = this.type.keyword;\n\n      // To fix https://github.com/acornjs/acorn/issues/575\n      // `class` and `function` keywords push new context into this.context.\n      // But there is no chance to pop the context if the keyword is consumed as an identifier such as a property name.\n      // If the previous token is a dot, this does not apply because the context-managing code already ignored the keyword\n      if ((node.name === \"class\" || node.name === \"function\") &&\n          (this.lastTokEnd !== this.lastTokStart + 1 || this.input.charCodeAt(this.lastTokStart) !== 46)) {\n        this.context.pop();\n      }\n    } else {\n      this.unexpected();\n    }\n    this.next(!!liberal);\n    this.finishNode(node, \"Identifier\");\n    if (!liberal) {\n      this.checkUnreserved(node);\n      if (node.name === \"await\" && !this.awaitIdentPos)\n        { this.awaitIdentPos = node.start; }\n    }\n    return node\n  };\n\n  // Parses yield expression inside generator.\n\n  pp$3.parseYield = function(noIn) {\n    if (!this.yieldPos) { this.yieldPos = this.start; }\n\n    var node = this.startNode();\n    this.next();\n    if (this.type === types.semi || this.canInsertSemicolon() || (this.type !== types.star && !this.type.startsExpr)) {\n      node.delegate = false;\n      node.argument = null;\n    } else {\n      node.delegate = this.eat(types.star);\n      node.argument = this.parseMaybeAssign(noIn);\n    }\n    return this.finishNode(node, \"YieldExpression\")\n  };\n\n  pp$3.parseAwait = function() {\n    if (!this.awaitPos) { this.awaitPos = this.start; }\n\n    var node = this.startNode();\n    this.next();\n    node.argument = this.parseMaybeUnary(null, false);\n    return this.finishNode(node, \"AwaitExpression\")\n  };\n\n  var pp$4 = Parser.prototype;\n\n  // This function is used to raise exceptions on parse errors. It\n  // takes an offset integer (into the current `input`) to indicate\n  // the location of the error, attaches the position to the end\n  // of the error message, and then raises a `SyntaxError` with that\n  // message.\n\n  pp$4.raise = function(pos, message) {\n    var loc = getLineInfo(this.input, pos);\n    message += \" (\" + loc.line + \":\" + loc.column + \")\";\n    var err = new SyntaxError(message);\n    err.pos = pos; err.loc = loc; err.raisedAt = this.pos;\n    throw err\n  };\n\n  pp$4.raiseRecoverable = pp$4.raise;\n\n  pp$4.curPosition = function() {\n    if (this.options.locations) {\n      return new Position(this.curLine, this.pos - this.lineStart)\n    }\n  };\n\n  var pp$5 = Parser.prototype;\n\n  var Scope = function Scope(flags) {\n    this.flags = flags;\n    // A list of var-declared names in the current lexical scope\n    this.var = [];\n    // A list of lexically-declared names in the current lexical scope\n    this.lexical = [];\n    // A list of lexically-declared FunctionDeclaration names in the current lexical scope\n    this.functions = [];\n  };\n\n  // The functions in this module keep track of declared variables in the current scope in order to detect duplicate variable names.\n\n  pp$5.enterScope = function(flags) {\n    this.scopeStack.push(new Scope(flags));\n  };\n\n  pp$5.exitScope = function() {\n    this.scopeStack.pop();\n  };\n\n  // The spec says:\n  // > At the top level of a function, or script, function declarations are\n  // > treated like var declarations rather than like lexical declarations.\n  pp$5.treatFunctionsAsVarInScope = function(scope) {\n    return (scope.flags & SCOPE_FUNCTION) || !this.inModule && (scope.flags & SCOPE_TOP)\n  };\n\n  pp$5.declareName = function(name, bindingType, pos) {\n    var redeclared = false;\n    if (bindingType === BIND_LEXICAL) {\n      var scope = this.currentScope();\n      redeclared = scope.lexical.indexOf(name) > -1 || scope.functions.indexOf(name) > -1 || scope.var.indexOf(name) > -1;\n      scope.lexical.push(name);\n      if (this.inModule && (scope.flags & SCOPE_TOP))\n        { delete this.undefinedExports[name]; }\n    } else if (bindingType === BIND_SIMPLE_CATCH) {\n      var scope$1 = this.currentScope();\n      scope$1.lexical.push(name);\n    } else if (bindingType === BIND_FUNCTION) {\n      var scope$2 = this.currentScope();\n      if (this.treatFunctionsAsVar)\n        { redeclared = scope$2.lexical.indexOf(name) > -1; }\n      else\n        { redeclared = scope$2.lexical.indexOf(name) > -1 || scope$2.var.indexOf(name) > -1; }\n      scope$2.functions.push(name);\n    } else {\n      for (var i = this.scopeStack.length - 1; i >= 0; --i) {\n        var scope$3 = this.scopeStack[i];\n        if (scope$3.lexical.indexOf(name) > -1 && !((scope$3.flags & SCOPE_SIMPLE_CATCH) && scope$3.lexical[0] === name) ||\n            !this.treatFunctionsAsVarInScope(scope$3) && scope$3.functions.indexOf(name) > -1) {\n          redeclared = true;\n          break\n        }\n        scope$3.var.push(name);\n        if (this.inModule && (scope$3.flags & SCOPE_TOP))\n          { delete this.undefinedExports[name]; }\n        if (scope$3.flags & SCOPE_VAR) { break }\n      }\n    }\n    if (redeclared) { this.raiseRecoverable(pos, (\"Identifier '\" + name + \"' has already been declared\")); }\n  };\n\n  pp$5.checkLocalExport = function(id) {\n    // scope.functions must be empty as Module code is always strict.\n    if (this.scopeStack[0].lexical.indexOf(id.name) === -1 &&\n        this.scopeStack[0].var.indexOf(id.name) === -1) {\n      this.undefinedExports[id.name] = id;\n    }\n  };\n\n  pp$5.currentScope = function() {\n    return this.scopeStack[this.scopeStack.length - 1]\n  };\n\n  pp$5.currentVarScope = function() {\n    for (var i = this.scopeStack.length - 1;; i--) {\n      var scope = this.scopeStack[i];\n      if (scope.flags & SCOPE_VAR) { return scope }\n    }\n  };\n\n  // Could be useful for `this`, `new.target`, `super()`, `super.property`, and `super[property]`.\n  pp$5.currentThisScope = function() {\n    for (var i = this.scopeStack.length - 1;; i--) {\n      var scope = this.scopeStack[i];\n      if (scope.flags & SCOPE_VAR && !(scope.flags & SCOPE_ARROW)) { return scope }\n    }\n  };\n\n  var Node = function Node(parser, pos, loc) {\n    this.type = \"\";\n    this.start = pos;\n    this.end = 0;\n    if (parser.options.locations)\n      { this.loc = new SourceLocation(parser, loc); }\n    if (parser.options.directSourceFile)\n      { this.sourceFile = parser.options.directSourceFile; }\n    if (parser.options.ranges)\n      { this.range = [pos, 0]; }\n  };\n\n  // Start an AST node, attaching a start offset.\n\n  var pp$6 = Parser.prototype;\n\n  pp$6.startNode = function() {\n    return new Node(this, this.start, this.startLoc)\n  };\n\n  pp$6.startNodeAt = function(pos, loc) {\n    return new Node(this, pos, loc)\n  };\n\n  // Finish an AST node, adding `type` and `end` properties.\n\n  function finishNodeAt(node, type, pos, loc) {\n    node.type = type;\n    node.end = pos;\n    if (this.options.locations)\n      { node.loc.end = loc; }\n    if (this.options.ranges)\n      { node.range[1] = pos; }\n    return node\n  }\n\n  pp$6.finishNode = function(node, type) {\n    return finishNodeAt.call(this, node, type, this.lastTokEnd, this.lastTokEndLoc)\n  };\n\n  // Finish node at given position\n\n  pp$6.finishNodeAt = function(node, type, pos, loc) {\n    return finishNodeAt.call(this, node, type, pos, loc)\n  };\n\n  // The algorithm used to determine whether a regexp can appear at a\n\n  var TokContext = function TokContext(token, isExpr, preserveSpace, override, generator) {\n    this.token = token;\n    this.isExpr = !!isExpr;\n    this.preserveSpace = !!preserveSpace;\n    this.override = override;\n    this.generator = !!generator;\n  };\n\n  var types$1 = {\n    b_stat: new TokContext(\"{\", false),\n    b_expr: new TokContext(\"{\", true),\n    b_tmpl: new TokContext(\"${\", false),\n    p_stat: new TokContext(\"(\", false),\n    p_expr: new TokContext(\"(\", true),\n    q_tmpl: new TokContext(\"`\", true, true, function (p) { return p.tryReadTemplateToken(); }),\n    f_stat: new TokContext(\"function\", false),\n    f_expr: new TokContext(\"function\", true),\n    f_expr_gen: new TokContext(\"function\", true, false, null, true),\n    f_gen: new TokContext(\"function\", false, false, null, true)\n  };\n\n  var pp$7 = Parser.prototype;\n\n  pp$7.initialContext = function() {\n    return [types$1.b_stat]\n  };\n\n  pp$7.braceIsBlock = function(prevType) {\n    var parent = this.curContext();\n    if (parent === types$1.f_expr || parent === types$1.f_stat)\n      { return true }\n    if (prevType === types.colon && (parent === types$1.b_stat || parent === types$1.b_expr))\n      { return !parent.isExpr }\n\n    // The check for `tt.name && exprAllowed` detects whether we are\n    // after a `yield` or `of` construct. See the `updateContext` for\n    // `tt.name`.\n    if (prevType === types._return || prevType === types.name && this.exprAllowed)\n      { return lineBreak.test(this.input.slice(this.lastTokEnd, this.start)) }\n    if (prevType === types._else || prevType === types.semi || prevType === types.eof || prevType === types.parenR || prevType === types.arrow)\n      { return true }\n    if (prevType === types.braceL)\n      { return parent === types$1.b_stat }\n    if (prevType === types._var || prevType === types._const || prevType === types.name)\n      { return false }\n    return !this.exprAllowed\n  };\n\n  pp$7.inGeneratorContext = function() {\n    for (var i = this.context.length - 1; i >= 1; i--) {\n      var context = this.context[i];\n      if (context.token === \"function\")\n        { return context.generator }\n    }\n    return false\n  };\n\n  pp$7.updateContext = function(prevType) {\n    var update, type = this.type;\n    if (type.keyword && prevType === types.dot)\n      { this.exprAllowed = false; }\n    else if (update = type.updateContext)\n      { update.call(this, prevType); }\n    else\n      { this.exprAllowed = type.beforeExpr; }\n  };\n\n  // Token-specific context update code\n\n  types.parenR.updateContext = types.braceR.updateContext = function() {\n    if (this.context.length === 1) {\n      this.exprAllowed = true;\n      return\n    }\n    var out = this.context.pop();\n    if (out === types$1.b_stat && this.curContext().token === \"function\") {\n      out = this.context.pop();\n    }\n    this.exprAllowed = !out.isExpr;\n  };\n\n  types.braceL.updateContext = function(prevType) {\n    this.context.push(this.braceIsBlock(prevType) ? types$1.b_stat : types$1.b_expr);\n    this.exprAllowed = true;\n  };\n\n  types.dollarBraceL.updateContext = function() {\n    this.context.push(types$1.b_tmpl);\n    this.exprAllowed = true;\n  };\n\n  types.parenL.updateContext = function(prevType) {\n    var statementParens = prevType === types._if || prevType === types._for || prevType === types._with || prevType === types._while;\n    this.context.push(statementParens ? types$1.p_stat : types$1.p_expr);\n    this.exprAllowed = true;\n  };\n\n  types.incDec.updateContext = function() {\n    // tokExprAllowed stays unchanged\n  };\n\n  types._function.updateContext = types._class.updateContext = function(prevType) {\n    if (prevType.beforeExpr && prevType !== types.semi && prevType !== types._else &&\n        !(prevType === types._return && lineBreak.test(this.input.slice(this.lastTokEnd, this.start))) &&\n        !((prevType === types.colon || prevType === types.braceL) && this.curContext() === types$1.b_stat))\n      { this.context.push(types$1.f_expr); }\n    else\n      { this.context.push(types$1.f_stat); }\n    this.exprAllowed = false;\n  };\n\n  types.backQuote.updateContext = function() {\n    if (this.curContext() === types$1.q_tmpl)\n      { this.context.pop(); }\n    else\n      { this.context.push(types$1.q_tmpl); }\n    this.exprAllowed = false;\n  };\n\n  types.star.updateContext = function(prevType) {\n    if (prevType === types._function) {\n      var index = this.context.length - 1;\n      if (this.context[index] === types$1.f_expr)\n        { this.context[index] = types$1.f_expr_gen; }\n      else\n        { this.context[index] = types$1.f_gen; }\n    }\n    this.exprAllowed = true;\n  };\n\n  types.name.updateContext = function(prevType) {\n    var allowed = false;\n    if (this.options.ecmaVersion >= 6 && prevType !== types.dot) {\n      if (this.value === \"of\" && !this.exprAllowed ||\n          this.value === \"yield\" && this.inGeneratorContext())\n        { allowed = true; }\n    }\n    this.exprAllowed = allowed;\n  };\n\n  // This file contains Unicode properties extracted from the ECMAScript\n  // specification. The lists are extracted like so:\n  // $$('#table-binary-unicode-properties > figure > table > tbody > tr > td:nth-child(1) code').map(el => el.innerText)\n\n  // #table-binary-unicode-properties\n  var ecma9BinaryProperties = \"ASCII ASCII_Hex_Digit AHex Alphabetic Alpha Any Assigned Bidi_Control Bidi_C Bidi_Mirrored Bidi_M Case_Ignorable CI Cased Changes_When_Casefolded CWCF Changes_When_Casemapped CWCM Changes_When_Lowercased CWL Changes_When_NFKC_Casefolded CWKCF Changes_When_Titlecased CWT Changes_When_Uppercased CWU Dash Default_Ignorable_Code_Point DI Deprecated Dep Diacritic Dia Emoji Emoji_Component Emoji_Modifier Emoji_Modifier_Base Emoji_Presentation Extender Ext Grapheme_Base Gr_Base Grapheme_Extend Gr_Ext Hex_Digit Hex IDS_Binary_Operator IDSB IDS_Trinary_Operator IDST ID_Continue IDC ID_Start IDS Ideographic Ideo Join_Control Join_C Logical_Order_Exception LOE Lowercase Lower Math Noncharacter_Code_Point NChar Pattern_Syntax Pat_Syn Pattern_White_Space Pat_WS Quotation_Mark QMark Radical Regional_Indicator RI Sentence_Terminal STerm Soft_Dotted SD Terminal_Punctuation Term Unified_Ideograph UIdeo Uppercase Upper Variation_Selector VS White_Space space XID_Continue XIDC XID_Start XIDS\";\n  var ecma10BinaryProperties = ecma9BinaryProperties + \" Extended_Pictographic\";\n  var ecma11BinaryProperties = ecma10BinaryProperties;\n  var unicodeBinaryProperties = {\n    9: ecma9BinaryProperties,\n    10: ecma10BinaryProperties,\n    11: ecma11BinaryProperties\n  };\n\n  // #table-unicode-general-category-values\n  var unicodeGeneralCategoryValues = \"Cased_Letter LC Close_Punctuation Pe Connector_Punctuation Pc Control Cc cntrl Currency_Symbol Sc Dash_Punctuation Pd Decimal_Number Nd digit Enclosing_Mark Me Final_Punctuation Pf Format Cf Initial_Punctuation Pi Letter L Letter_Number Nl Line_Separator Zl Lowercase_Letter Ll Mark M Combining_Mark Math_Symbol Sm Modifier_Letter Lm Modifier_Symbol Sk Nonspacing_Mark Mn Number N Open_Punctuation Ps Other C Other_Letter Lo Other_Number No Other_Punctuation Po Other_Symbol So Paragraph_Separator Zp Private_Use Co Punctuation P punct Separator Z Space_Separator Zs Spacing_Mark Mc Surrogate Cs Symbol S Titlecase_Letter Lt Unassigned Cn Uppercase_Letter Lu\";\n\n  // #table-unicode-script-values\n  var ecma9ScriptValues = \"Adlam Adlm Ahom Ahom Anatolian_Hieroglyphs Hluw Arabic Arab Armenian Armn Avestan Avst Balinese Bali Bamum Bamu Bassa_Vah Bass Batak Batk Bengali Beng Bhaiksuki Bhks Bopomofo Bopo Brahmi Brah Braille Brai Buginese Bugi Buhid Buhd Canadian_Aboriginal Cans Carian Cari Caucasian_Albanian Aghb Chakma Cakm Cham Cham Cherokee Cher Common Zyyy Coptic Copt Qaac Cuneiform Xsux Cypriot Cprt Cyrillic Cyrl Deseret Dsrt Devanagari Deva Duployan Dupl Egyptian_Hieroglyphs Egyp Elbasan Elba Ethiopic Ethi Georgian Geor Glagolitic Glag Gothic Goth Grantha Gran Greek Grek Gujarati Gujr Gurmukhi Guru Han Hani Hangul Hang Hanunoo Hano Hatran Hatr Hebrew Hebr Hiragana Hira Imperial_Aramaic Armi Inherited Zinh Qaai Inscriptional_Pahlavi Phli Inscriptional_Parthian Prti Javanese Java Kaithi Kthi Kannada Knda Katakana Kana Kayah_Li Kali Kharoshthi Khar Khmer Khmr Khojki Khoj Khudawadi Sind Lao Laoo Latin Latn Lepcha Lepc Limbu Limb Linear_A Lina Linear_B Linb Lisu Lisu Lycian Lyci Lydian Lydi Mahajani Mahj Malayalam Mlym Mandaic Mand Manichaean Mani Marchen Marc Masaram_Gondi Gonm Meetei_Mayek Mtei Mende_Kikakui Mend Meroitic_Cursive Merc Meroitic_Hieroglyphs Mero Miao Plrd Modi Modi Mongolian Mong Mro Mroo Multani Mult Myanmar Mymr Nabataean Nbat New_Tai_Lue Talu Newa Newa Nko Nkoo Nushu Nshu Ogham Ogam Ol_Chiki Olck Old_Hungarian Hung Old_Italic Ital Old_North_Arabian Narb Old_Permic Perm Old_Persian Xpeo Old_South_Arabian Sarb Old_Turkic Orkh Oriya Orya Osage Osge Osmanya Osma Pahawh_Hmong Hmng Palmyrene Palm Pau_Cin_Hau Pauc Phags_Pa Phag Phoenician Phnx Psalter_Pahlavi Phlp Rejang Rjng Runic Runr Samaritan Samr Saurashtra Saur Sharada Shrd Shavian Shaw Siddham Sidd SignWriting Sgnw Sinhala Sinh Sora_Sompeng Sora Soyombo Soyo Sundanese Sund Syloti_Nagri Sylo Syriac Syrc Tagalog Tglg Tagbanwa Tagb Tai_Le Tale Tai_Tham Lana Tai_Viet Tavt Takri Takr Tamil Taml Tangut Tang Telugu Telu Thaana Thaa Thai Thai Tibetan Tibt Tifinagh Tfng Tirhuta Tirh Ugaritic Ugar Vai Vaii Warang_Citi Wara Yi Yiii Zanabazar_Square Zanb\";\n  var ecma10ScriptValues = ecma9ScriptValues + \" Dogra Dogr Gunjala_Gondi Gong Hanifi_Rohingya Rohg Makasar Maka Medefaidrin Medf Old_Sogdian Sogo Sogdian Sogd\";\n  var ecma11ScriptValues = ecma10ScriptValues + \" Elymaic Elym Nandinagari Nand Nyiakeng_Puachue_Hmong Hmnp Wancho Wcho\";\n  var unicodeScriptValues = {\n    9: ecma9ScriptValues,\n    10: ecma10ScriptValues,\n    11: ecma11ScriptValues\n  };\n\n  var data = {};\n  function buildUnicodeData(ecmaVersion) {\n    var d = data[ecmaVersion] = {\n      binary: wordsRegexp(unicodeBinaryProperties[ecmaVersion] + \" \" + unicodeGeneralCategoryValues),\n      nonBinary: {\n        General_Category: wordsRegexp(unicodeGeneralCategoryValues),\n        Script: wordsRegexp(unicodeScriptValues[ecmaVersion])\n      }\n    };\n    d.nonBinary.Script_Extensions = d.nonBinary.Script;\n\n    d.nonBinary.gc = d.nonBinary.General_Category;\n    d.nonBinary.sc = d.nonBinary.Script;\n    d.nonBinary.scx = d.nonBinary.Script_Extensions;\n  }\n  buildUnicodeData(9);\n  buildUnicodeData(10);\n  buildUnicodeData(11);\n\n  var pp$8 = Parser.prototype;\n\n  var RegExpValidationState = function RegExpValidationState(parser) {\n    this.parser = parser;\n    this.validFlags = \"gim\" + (parser.options.ecmaVersion >= 6 ? \"uy\" : \"\") + (parser.options.ecmaVersion >= 9 ? \"s\" : \"\");\n    this.unicodeProperties = data[parser.options.ecmaVersion >= 11 ? 11 : parser.options.ecmaVersion];\n    this.source = \"\";\n    this.flags = \"\";\n    this.start = 0;\n    this.switchU = false;\n    this.switchN = false;\n    this.pos = 0;\n    this.lastIntValue = 0;\n    this.lastStringValue = \"\";\n    this.lastAssertionIsQuantifiable = false;\n    this.numCapturingParens = 0;\n    this.maxBackReference = 0;\n    this.groupNames = [];\n    this.backReferenceNames = [];\n  };\n\n  RegExpValidationState.prototype.reset = function reset (start, pattern, flags) {\n    var unicode = flags.indexOf(\"u\") !== -1;\n    this.start = start | 0;\n    this.source = pattern + \"\";\n    this.flags = flags;\n    this.switchU = unicode && this.parser.options.ecmaVersion >= 6;\n    this.switchN = unicode && this.parser.options.ecmaVersion >= 9;\n  };\n\n  RegExpValidationState.prototype.raise = function raise (message) {\n    this.parser.raiseRecoverable(this.start, (\"Invalid regular expression: /\" + (this.source) + \"/: \" + message));\n  };\n\n  // If u flag is given, this returns the code point at the index (it combines a surrogate pair).\n  // Otherwise, this returns the code unit of the index (can be a part of a surrogate pair).\n  RegExpValidationState.prototype.at = function at (i, forceU) {\n      if ( forceU === void 0 ) forceU = false;\n\n    var s = this.source;\n    var l = s.length;\n    if (i >= l) {\n      return -1\n    }\n    var c = s.charCodeAt(i);\n    if (!(forceU || this.switchU) || c <= 0xD7FF || c >= 0xE000 || i + 1 >= l) {\n      return c\n    }\n    var next = s.charCodeAt(i + 1);\n    return next >= 0xDC00 && next <= 0xDFFF ? (c << 10) + next - 0x35FDC00 : c\n  };\n\n  RegExpValidationState.prototype.nextIndex = function nextIndex (i, forceU) {\n      if ( forceU === void 0 ) forceU = false;\n\n    var s = this.source;\n    var l = s.length;\n    if (i >= l) {\n      return l\n    }\n    var c = s.charCodeAt(i), next;\n    if (!(forceU || this.switchU) || c <= 0xD7FF || c >= 0xE000 || i + 1 >= l ||\n        (next = s.charCodeAt(i + 1)) < 0xDC00 || next > 0xDFFF) {\n      return i + 1\n    }\n    return i + 2\n  };\n\n  RegExpValidationState.prototype.current = function current (forceU) {\n      if ( forceU === void 0 ) forceU = false;\n\n    return this.at(this.pos, forceU)\n  };\n\n  RegExpValidationState.prototype.lookahead = function lookahead (forceU) {\n      if ( forceU === void 0 ) forceU = false;\n\n    return this.at(this.nextIndex(this.pos, forceU), forceU)\n  };\n\n  RegExpValidationState.prototype.advance = function advance (forceU) {\n      if ( forceU === void 0 ) forceU = false;\n\n    this.pos = this.nextIndex(this.pos, forceU);\n  };\n\n  RegExpValidationState.prototype.eat = function eat (ch, forceU) {\n      if ( forceU === void 0 ) forceU = false;\n\n    if (this.current(forceU) === ch) {\n      this.advance(forceU);\n      return true\n    }\n    return false\n  };\n\n  function codePointToString(ch) {\n    if (ch <= 0xFFFF) { return String.fromCharCode(ch) }\n    ch -= 0x10000;\n    return String.fromCharCode((ch >> 10) + 0xD800, (ch & 0x03FF) + 0xDC00)\n  }\n\n  /**\n   * Validate the flags part of a given RegExpLiteral.\n   *\n   * @param {RegExpValidationState} state The state to validate RegExp.\n   * @returns {void}\n   */\n  pp$8.validateRegExpFlags = function(state) {\n    var validFlags = state.validFlags;\n    var flags = state.flags;\n\n    for (var i = 0; i < flags.length; i++) {\n      var flag = flags.charAt(i);\n      if (validFlags.indexOf(flag) === -1) {\n        this.raise(state.start, \"Invalid regular expression flag\");\n      }\n      if (flags.indexOf(flag, i + 1) > -1) {\n        this.raise(state.start, \"Duplicate regular expression flag\");\n      }\n    }\n  };\n\n  /**\n   * Validate the pattern part of a given RegExpLiteral.\n   *\n   * @param {RegExpValidationState} state The state to validate RegExp.\n   * @returns {void}\n   */\n  pp$8.validateRegExpPattern = function(state) {\n    this.regexp_pattern(state);\n\n    // The goal symbol for the parse is |Pattern[~U, ~N]|. If the result of\n    // parsing contains a |GroupName|, reparse with the goal symbol\n    // |Pattern[~U, +N]| and use this result instead. Throw a *SyntaxError*\n    // exception if _P_ did not conform to the grammar, if any elements of _P_\n    // were not matched by the parse, or if any Early Error conditions exist.\n    if (!state.switchN && this.options.ecmaVersion >= 9 && state.groupNames.length > 0) {\n      state.switchN = true;\n      this.regexp_pattern(state);\n    }\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-Pattern\n  pp$8.regexp_pattern = function(state) {\n    state.pos = 0;\n    state.lastIntValue = 0;\n    state.lastStringValue = \"\";\n    state.lastAssertionIsQuantifiable = false;\n    state.numCapturingParens = 0;\n    state.maxBackReference = 0;\n    state.groupNames.length = 0;\n    state.backReferenceNames.length = 0;\n\n    this.regexp_disjunction(state);\n\n    if (state.pos !== state.source.length) {\n      // Make the same messages as V8.\n      if (state.eat(0x29 /* ) */)) {\n        state.raise(\"Unmatched ')'\");\n      }\n      if (state.eat(0x5D /* ] */) || state.eat(0x7D /* } */)) {\n        state.raise(\"Lone quantifier brackets\");\n      }\n    }\n    if (state.maxBackReference > state.numCapturingParens) {\n      state.raise(\"Invalid escape\");\n    }\n    for (var i = 0, list = state.backReferenceNames; i < list.length; i += 1) {\n      var name = list[i];\n\n      if (state.groupNames.indexOf(name) === -1) {\n        state.raise(\"Invalid named capture referenced\");\n      }\n    }\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-Disjunction\n  pp$8.regexp_disjunction = function(state) {\n    this.regexp_alternative(state);\n    while (state.eat(0x7C /* | */)) {\n      this.regexp_alternative(state);\n    }\n\n    // Make the same message as V8.\n    if (this.regexp_eatQuantifier(state, true)) {\n      state.raise(\"Nothing to repeat\");\n    }\n    if (state.eat(0x7B /* { */)) {\n      state.raise(\"Lone quantifier brackets\");\n    }\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-Alternative\n  pp$8.regexp_alternative = function(state) {\n    while (state.pos < state.source.length && this.regexp_eatTerm(state))\n      { }\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-Term\n  pp$8.regexp_eatTerm = function(state) {\n    if (this.regexp_eatAssertion(state)) {\n      // Handle `QuantifiableAssertion Quantifier` alternative.\n      // `state.lastAssertionIsQuantifiable` is true if the last eaten Assertion\n      // is a QuantifiableAssertion.\n      if (state.lastAssertionIsQuantifiable && this.regexp_eatQuantifier(state)) {\n        // Make the same message as V8.\n        if (state.switchU) {\n          state.raise(\"Invalid quantifier\");\n        }\n      }\n      return true\n    }\n\n    if (state.switchU ? this.regexp_eatAtom(state) : this.regexp_eatExtendedAtom(state)) {\n      this.regexp_eatQuantifier(state);\n      return true\n    }\n\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-Assertion\n  pp$8.regexp_eatAssertion = function(state) {\n    var start = state.pos;\n    state.lastAssertionIsQuantifiable = false;\n\n    // ^, $\n    if (state.eat(0x5E /* ^ */) || state.eat(0x24 /* $ */)) {\n      return true\n    }\n\n    // \\b \\B\n    if (state.eat(0x5C /* \\ */)) {\n      if (state.eat(0x42 /* B */) || state.eat(0x62 /* b */)) {\n        return true\n      }\n      state.pos = start;\n    }\n\n    // Lookahead / Lookbehind\n    if (state.eat(0x28 /* ( */) && state.eat(0x3F /* ? */)) {\n      var lookbehind = false;\n      if (this.options.ecmaVersion >= 9) {\n        lookbehind = state.eat(0x3C /* < */);\n      }\n      if (state.eat(0x3D /* = */) || state.eat(0x21 /* ! */)) {\n        this.regexp_disjunction(state);\n        if (!state.eat(0x29 /* ) */)) {\n          state.raise(\"Unterminated group\");\n        }\n        state.lastAssertionIsQuantifiable = !lookbehind;\n        return true\n      }\n    }\n\n    state.pos = start;\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-Quantifier\n  pp$8.regexp_eatQuantifier = function(state, noError) {\n    if ( noError === void 0 ) noError = false;\n\n    if (this.regexp_eatQuantifierPrefix(state, noError)) {\n      state.eat(0x3F /* ? */);\n      return true\n    }\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-QuantifierPrefix\n  pp$8.regexp_eatQuantifierPrefix = function(state, noError) {\n    return (\n      state.eat(0x2A /* * */) ||\n      state.eat(0x2B /* + */) ||\n      state.eat(0x3F /* ? */) ||\n      this.regexp_eatBracedQuantifier(state, noError)\n    )\n  };\n  pp$8.regexp_eatBracedQuantifier = function(state, noError) {\n    var start = state.pos;\n    if (state.eat(0x7B /* { */)) {\n      var min = 0, max = -1;\n      if (this.regexp_eatDecimalDigits(state)) {\n        min = state.lastIntValue;\n        if (state.eat(0x2C /* , */) && this.regexp_eatDecimalDigits(state)) {\n          max = state.lastIntValue;\n        }\n        if (state.eat(0x7D /* } */)) {\n          // SyntaxError in https://www.ecma-international.org/ecma-262/8.0/#sec-term\n          if (max !== -1 && max < min && !noError) {\n            state.raise(\"numbers out of order in {} quantifier\");\n          }\n          return true\n        }\n      }\n      if (state.switchU && !noError) {\n        state.raise(\"Incomplete quantifier\");\n      }\n      state.pos = start;\n    }\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-Atom\n  pp$8.regexp_eatAtom = function(state) {\n    return (\n      this.regexp_eatPatternCharacters(state) ||\n      state.eat(0x2E /* . */) ||\n      this.regexp_eatReverseSolidusAtomEscape(state) ||\n      this.regexp_eatCharacterClass(state) ||\n      this.regexp_eatUncapturingGroup(state) ||\n      this.regexp_eatCapturingGroup(state)\n    )\n  };\n  pp$8.regexp_eatReverseSolidusAtomEscape = function(state) {\n    var start = state.pos;\n    if (state.eat(0x5C /* \\ */)) {\n      if (this.regexp_eatAtomEscape(state)) {\n        return true\n      }\n      state.pos = start;\n    }\n    return false\n  };\n  pp$8.regexp_eatUncapturingGroup = function(state) {\n    var start = state.pos;\n    if (state.eat(0x28 /* ( */)) {\n      if (state.eat(0x3F /* ? */) && state.eat(0x3A /* : */)) {\n        this.regexp_disjunction(state);\n        if (state.eat(0x29 /* ) */)) {\n          return true\n        }\n        state.raise(\"Unterminated group\");\n      }\n      state.pos = start;\n    }\n    return false\n  };\n  pp$8.regexp_eatCapturingGroup = function(state) {\n    if (state.eat(0x28 /* ( */)) {\n      if (this.options.ecmaVersion >= 9) {\n        this.regexp_groupSpecifier(state);\n      } else if (state.current() === 0x3F /* ? */) {\n        state.raise(\"Invalid group\");\n      }\n      this.regexp_disjunction(state);\n      if (state.eat(0x29 /* ) */)) {\n        state.numCapturingParens += 1;\n        return true\n      }\n      state.raise(\"Unterminated group\");\n    }\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ExtendedAtom\n  pp$8.regexp_eatExtendedAtom = function(state) {\n    return (\n      state.eat(0x2E /* . */) ||\n      this.regexp_eatReverseSolidusAtomEscape(state) ||\n      this.regexp_eatCharacterClass(state) ||\n      this.regexp_eatUncapturingGroup(state) ||\n      this.regexp_eatCapturingGroup(state) ||\n      this.regexp_eatInvalidBracedQuantifier(state) ||\n      this.regexp_eatExtendedPatternCharacter(state)\n    )\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-InvalidBracedQuantifier\n  pp$8.regexp_eatInvalidBracedQuantifier = function(state) {\n    if (this.regexp_eatBracedQuantifier(state, true)) {\n      state.raise(\"Nothing to repeat\");\n    }\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-SyntaxCharacter\n  pp$8.regexp_eatSyntaxCharacter = function(state) {\n    var ch = state.current();\n    if (isSyntaxCharacter(ch)) {\n      state.lastIntValue = ch;\n      state.advance();\n      return true\n    }\n    return false\n  };\n  function isSyntaxCharacter(ch) {\n    return (\n      ch === 0x24 /* $ */ ||\n      ch >= 0x28 /* ( */ && ch <= 0x2B /* + */ ||\n      ch === 0x2E /* . */ ||\n      ch === 0x3F /* ? */ ||\n      ch >= 0x5B /* [ */ && ch <= 0x5E /* ^ */ ||\n      ch >= 0x7B /* { */ && ch <= 0x7D /* } */\n    )\n  }\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-PatternCharacter\n  // But eat eager.\n  pp$8.regexp_eatPatternCharacters = function(state) {\n    var start = state.pos;\n    var ch = 0;\n    while ((ch = state.current()) !== -1 && !isSyntaxCharacter(ch)) {\n      state.advance();\n    }\n    return state.pos !== start\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ExtendedPatternCharacter\n  pp$8.regexp_eatExtendedPatternCharacter = function(state) {\n    var ch = state.current();\n    if (\n      ch !== -1 &&\n      ch !== 0x24 /* $ */ &&\n      !(ch >= 0x28 /* ( */ && ch <= 0x2B /* + */) &&\n      ch !== 0x2E /* . */ &&\n      ch !== 0x3F /* ? */ &&\n      ch !== 0x5B /* [ */ &&\n      ch !== 0x5E /* ^ */ &&\n      ch !== 0x7C /* | */\n    ) {\n      state.advance();\n      return true\n    }\n    return false\n  };\n\n  // GroupSpecifier ::\n  //   [empty]\n  //   `?` GroupName\n  pp$8.regexp_groupSpecifier = function(state) {\n    if (state.eat(0x3F /* ? */)) {\n      if (this.regexp_eatGroupName(state)) {\n        if (state.groupNames.indexOf(state.lastStringValue) !== -1) {\n          state.raise(\"Duplicate capture group name\");\n        }\n        state.groupNames.push(state.lastStringValue);\n        return\n      }\n      state.raise(\"Invalid group\");\n    }\n  };\n\n  // GroupName ::\n  //   `<` RegExpIdentifierName `>`\n  // Note: this updates `state.lastStringValue` property with the eaten name.\n  pp$8.regexp_eatGroupName = function(state) {\n    state.lastStringValue = \"\";\n    if (state.eat(0x3C /* < */)) {\n      if (this.regexp_eatRegExpIdentifierName(state) && state.eat(0x3E /* > */)) {\n        return true\n      }\n      state.raise(\"Invalid capture group name\");\n    }\n    return false\n  };\n\n  // RegExpIdentifierName ::\n  //   RegExpIdentifierStart\n  //   RegExpIdentifierName RegExpIdentifierPart\n  // Note: this updates `state.lastStringValue` property with the eaten name.\n  pp$8.regexp_eatRegExpIdentifierName = function(state) {\n    state.lastStringValue = \"\";\n    if (this.regexp_eatRegExpIdentifierStart(state)) {\n      state.lastStringValue += codePointToString(state.lastIntValue);\n      while (this.regexp_eatRegExpIdentifierPart(state)) {\n        state.lastStringValue += codePointToString(state.lastIntValue);\n      }\n      return true\n    }\n    return false\n  };\n\n  // RegExpIdentifierStart ::\n  //   UnicodeIDStart\n  //   `$`\n  //   `_`\n  //   `\\` RegExpUnicodeEscapeSequence[+U]\n  pp$8.regexp_eatRegExpIdentifierStart = function(state) {\n    var start = state.pos;\n    var forceU = this.options.ecmaVersion >= 11;\n    var ch = state.current(forceU);\n    state.advance(forceU);\n\n    if (ch === 0x5C /* \\ */ && this.regexp_eatRegExpUnicodeEscapeSequence(state, forceU)) {\n      ch = state.lastIntValue;\n    }\n    if (isRegExpIdentifierStart(ch)) {\n      state.lastIntValue = ch;\n      return true\n    }\n\n    state.pos = start;\n    return false\n  };\n  function isRegExpIdentifierStart(ch) {\n    return isIdentifierStart(ch, true) || ch === 0x24 /* $ */ || ch === 0x5F /* _ */\n  }\n\n  // RegExpIdentifierPart ::\n  //   UnicodeIDContinue\n  //   `$`\n  //   `_`\n  //   `\\` RegExpUnicodeEscapeSequence[+U]\n  //   <ZWNJ>\n  //   <ZWJ>\n  pp$8.regexp_eatRegExpIdentifierPart = function(state) {\n    var start = state.pos;\n    var forceU = this.options.ecmaVersion >= 11;\n    var ch = state.current(forceU);\n    state.advance(forceU);\n\n    if (ch === 0x5C /* \\ */ && this.regexp_eatRegExpUnicodeEscapeSequence(state, forceU)) {\n      ch = state.lastIntValue;\n    }\n    if (isRegExpIdentifierPart(ch)) {\n      state.lastIntValue = ch;\n      return true\n    }\n\n    state.pos = start;\n    return false\n  };\n  function isRegExpIdentifierPart(ch) {\n    return isIdentifierChar(ch, true) || ch === 0x24 /* $ */ || ch === 0x5F /* _ */ || ch === 0x200C /* <ZWNJ> */ || ch === 0x200D /* <ZWJ> */\n  }\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-AtomEscape\n  pp$8.regexp_eatAtomEscape = function(state) {\n    if (\n      this.regexp_eatBackReference(state) ||\n      this.regexp_eatCharacterClassEscape(state) ||\n      this.regexp_eatCharacterEscape(state) ||\n      (state.switchN && this.regexp_eatKGroupName(state))\n    ) {\n      return true\n    }\n    if (state.switchU) {\n      // Make the same message as V8.\n      if (state.current() === 0x63 /* c */) {\n        state.raise(\"Invalid unicode escape\");\n      }\n      state.raise(\"Invalid escape\");\n    }\n    return false\n  };\n  pp$8.regexp_eatBackReference = function(state) {\n    var start = state.pos;\n    if (this.regexp_eatDecimalEscape(state)) {\n      var n = state.lastIntValue;\n      if (state.switchU) {\n        // For SyntaxError in https://www.ecma-international.org/ecma-262/8.0/#sec-atomescape\n        if (n > state.maxBackReference) {\n          state.maxBackReference = n;\n        }\n        return true\n      }\n      if (n <= state.numCapturingParens) {\n        return true\n      }\n      state.pos = start;\n    }\n    return false\n  };\n  pp$8.regexp_eatKGroupName = function(state) {\n    if (state.eat(0x6B /* k */)) {\n      if (this.regexp_eatGroupName(state)) {\n        state.backReferenceNames.push(state.lastStringValue);\n        return true\n      }\n      state.raise(\"Invalid named reference\");\n    }\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-CharacterEscape\n  pp$8.regexp_eatCharacterEscape = function(state) {\n    return (\n      this.regexp_eatControlEscape(state) ||\n      this.regexp_eatCControlLetter(state) ||\n      this.regexp_eatZero(state) ||\n      this.regexp_eatHexEscapeSequence(state) ||\n      this.regexp_eatRegExpUnicodeEscapeSequence(state, false) ||\n      (!state.switchU && this.regexp_eatLegacyOctalEscapeSequence(state)) ||\n      this.regexp_eatIdentityEscape(state)\n    )\n  };\n  pp$8.regexp_eatCControlLetter = function(state) {\n    var start = state.pos;\n    if (state.eat(0x63 /* c */)) {\n      if (this.regexp_eatControlLetter(state)) {\n        return true\n      }\n      state.pos = start;\n    }\n    return false\n  };\n  pp$8.regexp_eatZero = function(state) {\n    if (state.current() === 0x30 /* 0 */ && !isDecimalDigit(state.lookahead())) {\n      state.lastIntValue = 0;\n      state.advance();\n      return true\n    }\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-ControlEscape\n  pp$8.regexp_eatControlEscape = function(state) {\n    var ch = state.current();\n    if (ch === 0x74 /* t */) {\n      state.lastIntValue = 0x09; /* \\t */\n      state.advance();\n      return true\n    }\n    if (ch === 0x6E /* n */) {\n      state.lastIntValue = 0x0A; /* \\n */\n      state.advance();\n      return true\n    }\n    if (ch === 0x76 /* v */) {\n      state.lastIntValue = 0x0B; /* \\v */\n      state.advance();\n      return true\n    }\n    if (ch === 0x66 /* f */) {\n      state.lastIntValue = 0x0C; /* \\f */\n      state.advance();\n      return true\n    }\n    if (ch === 0x72 /* r */) {\n      state.lastIntValue = 0x0D; /* \\r */\n      state.advance();\n      return true\n    }\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-ControlLetter\n  pp$8.regexp_eatControlLetter = function(state) {\n    var ch = state.current();\n    if (isControlLetter(ch)) {\n      state.lastIntValue = ch % 0x20;\n      state.advance();\n      return true\n    }\n    return false\n  };\n  function isControlLetter(ch) {\n    return (\n      (ch >= 0x41 /* A */ && ch <= 0x5A /* Z */) ||\n      (ch >= 0x61 /* a */ && ch <= 0x7A /* z */)\n    )\n  }\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-RegExpUnicodeEscapeSequence\n  pp$8.regexp_eatRegExpUnicodeEscapeSequence = function(state, forceU) {\n    if ( forceU === void 0 ) forceU = false;\n\n    var start = state.pos;\n    var switchU = forceU || state.switchU;\n\n    if (state.eat(0x75 /* u */)) {\n      if (this.regexp_eatFixedHexDigits(state, 4)) {\n        var lead = state.lastIntValue;\n        if (switchU && lead >= 0xD800 && lead <= 0xDBFF) {\n          var leadSurrogateEnd = state.pos;\n          if (state.eat(0x5C /* \\ */) && state.eat(0x75 /* u */) && this.regexp_eatFixedHexDigits(state, 4)) {\n            var trail = state.lastIntValue;\n            if (trail >= 0xDC00 && trail <= 0xDFFF) {\n              state.lastIntValue = (lead - 0xD800) * 0x400 + (trail - 0xDC00) + 0x10000;\n              return true\n            }\n          }\n          state.pos = leadSurrogateEnd;\n          state.lastIntValue = lead;\n        }\n        return true\n      }\n      if (\n        switchU &&\n        state.eat(0x7B /* { */) &&\n        this.regexp_eatHexDigits(state) &&\n        state.eat(0x7D /* } */) &&\n        isValidUnicode(state.lastIntValue)\n      ) {\n        return true\n      }\n      if (switchU) {\n        state.raise(\"Invalid unicode escape\");\n      }\n      state.pos = start;\n    }\n\n    return false\n  };\n  function isValidUnicode(ch) {\n    return ch >= 0 && ch <= 0x10FFFF\n  }\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-IdentityEscape\n  pp$8.regexp_eatIdentityEscape = function(state) {\n    if (state.switchU) {\n      if (this.regexp_eatSyntaxCharacter(state)) {\n        return true\n      }\n      if (state.eat(0x2F /* / */)) {\n        state.lastIntValue = 0x2F; /* / */\n        return true\n      }\n      return false\n    }\n\n    var ch = state.current();\n    if (ch !== 0x63 /* c */ && (!state.switchN || ch !== 0x6B /* k */)) {\n      state.lastIntValue = ch;\n      state.advance();\n      return true\n    }\n\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-DecimalEscape\n  pp$8.regexp_eatDecimalEscape = function(state) {\n    state.lastIntValue = 0;\n    var ch = state.current();\n    if (ch >= 0x31 /* 1 */ && ch <= 0x39 /* 9 */) {\n      do {\n        state.lastIntValue = 10 * state.lastIntValue + (ch - 0x30 /* 0 */);\n        state.advance();\n      } while ((ch = state.current()) >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */)\n      return true\n    }\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-CharacterClassEscape\n  pp$8.regexp_eatCharacterClassEscape = function(state) {\n    var ch = state.current();\n\n    if (isCharacterClassEscape(ch)) {\n      state.lastIntValue = -1;\n      state.advance();\n      return true\n    }\n\n    if (\n      state.switchU &&\n      this.options.ecmaVersion >= 9 &&\n      (ch === 0x50 /* P */ || ch === 0x70 /* p */)\n    ) {\n      state.lastIntValue = -1;\n      state.advance();\n      if (\n        state.eat(0x7B /* { */) &&\n        this.regexp_eatUnicodePropertyValueExpression(state) &&\n        state.eat(0x7D /* } */)\n      ) {\n        return true\n      }\n      state.raise(\"Invalid property name\");\n    }\n\n    return false\n  };\n  function isCharacterClassEscape(ch) {\n    return (\n      ch === 0x64 /* d */ ||\n      ch === 0x44 /* D */ ||\n      ch === 0x73 /* s */ ||\n      ch === 0x53 /* S */ ||\n      ch === 0x77 /* w */ ||\n      ch === 0x57 /* W */\n    )\n  }\n\n  // UnicodePropertyValueExpression ::\n  //   UnicodePropertyName `=` UnicodePropertyValue\n  //   LoneUnicodePropertyNameOrValue\n  pp$8.regexp_eatUnicodePropertyValueExpression = function(state) {\n    var start = state.pos;\n\n    // UnicodePropertyName `=` UnicodePropertyValue\n    if (this.regexp_eatUnicodePropertyName(state) && state.eat(0x3D /* = */)) {\n      var name = state.lastStringValue;\n      if (this.regexp_eatUnicodePropertyValue(state)) {\n        var value = state.lastStringValue;\n        this.regexp_validateUnicodePropertyNameAndValue(state, name, value);\n        return true\n      }\n    }\n    state.pos = start;\n\n    // LoneUnicodePropertyNameOrValue\n    if (this.regexp_eatLoneUnicodePropertyNameOrValue(state)) {\n      var nameOrValue = state.lastStringValue;\n      this.regexp_validateUnicodePropertyNameOrValue(state, nameOrValue);\n      return true\n    }\n    return false\n  };\n  pp$8.regexp_validateUnicodePropertyNameAndValue = function(state, name, value) {\n    if (!has(state.unicodeProperties.nonBinary, name))\n      { state.raise(\"Invalid property name\"); }\n    if (!state.unicodeProperties.nonBinary[name].test(value))\n      { state.raise(\"Invalid property value\"); }\n  };\n  pp$8.regexp_validateUnicodePropertyNameOrValue = function(state, nameOrValue) {\n    if (!state.unicodeProperties.binary.test(nameOrValue))\n      { state.raise(\"Invalid property name\"); }\n  };\n\n  // UnicodePropertyName ::\n  //   UnicodePropertyNameCharacters\n  pp$8.regexp_eatUnicodePropertyName = function(state) {\n    var ch = 0;\n    state.lastStringValue = \"\";\n    while (isUnicodePropertyNameCharacter(ch = state.current())) {\n      state.lastStringValue += codePointToString(ch);\n      state.advance();\n    }\n    return state.lastStringValue !== \"\"\n  };\n  function isUnicodePropertyNameCharacter(ch) {\n    return isControlLetter(ch) || ch === 0x5F /* _ */\n  }\n\n  // UnicodePropertyValue ::\n  //   UnicodePropertyValueCharacters\n  pp$8.regexp_eatUnicodePropertyValue = function(state) {\n    var ch = 0;\n    state.lastStringValue = \"\";\n    while (isUnicodePropertyValueCharacter(ch = state.current())) {\n      state.lastStringValue += codePointToString(ch);\n      state.advance();\n    }\n    return state.lastStringValue !== \"\"\n  };\n  function isUnicodePropertyValueCharacter(ch) {\n    return isUnicodePropertyNameCharacter(ch) || isDecimalDigit(ch)\n  }\n\n  // LoneUnicodePropertyNameOrValue ::\n  //   UnicodePropertyValueCharacters\n  pp$8.regexp_eatLoneUnicodePropertyNameOrValue = function(state) {\n    return this.regexp_eatUnicodePropertyValue(state)\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-CharacterClass\n  pp$8.regexp_eatCharacterClass = function(state) {\n    if (state.eat(0x5B /* [ */)) {\n      state.eat(0x5E /* ^ */);\n      this.regexp_classRanges(state);\n      if (state.eat(0x5D /* ] */)) {\n        return true\n      }\n      // Unreachable since it threw \"unterminated regular expression\" error before.\n      state.raise(\"Unterminated character class\");\n    }\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-ClassRanges\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-NonemptyClassRanges\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-NonemptyClassRangesNoDash\n  pp$8.regexp_classRanges = function(state) {\n    while (this.regexp_eatClassAtom(state)) {\n      var left = state.lastIntValue;\n      if (state.eat(0x2D /* - */) && this.regexp_eatClassAtom(state)) {\n        var right = state.lastIntValue;\n        if (state.switchU && (left === -1 || right === -1)) {\n          state.raise(\"Invalid character class\");\n        }\n        if (left !== -1 && right !== -1 && left > right) {\n          state.raise(\"Range out of order in character class\");\n        }\n      }\n    }\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-ClassAtom\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-ClassAtomNoDash\n  pp$8.regexp_eatClassAtom = function(state) {\n    var start = state.pos;\n\n    if (state.eat(0x5C /* \\ */)) {\n      if (this.regexp_eatClassEscape(state)) {\n        return true\n      }\n      if (state.switchU) {\n        // Make the same message as V8.\n        var ch$1 = state.current();\n        if (ch$1 === 0x63 /* c */ || isOctalDigit(ch$1)) {\n          state.raise(\"Invalid class escape\");\n        }\n        state.raise(\"Invalid escape\");\n      }\n      state.pos = start;\n    }\n\n    var ch = state.current();\n    if (ch !== 0x5D /* ] */) {\n      state.lastIntValue = ch;\n      state.advance();\n      return true\n    }\n\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ClassEscape\n  pp$8.regexp_eatClassEscape = function(state) {\n    var start = state.pos;\n\n    if (state.eat(0x62 /* b */)) {\n      state.lastIntValue = 0x08; /* <BS> */\n      return true\n    }\n\n    if (state.switchU && state.eat(0x2D /* - */)) {\n      state.lastIntValue = 0x2D; /* - */\n      return true\n    }\n\n    if (!state.switchU && state.eat(0x63 /* c */)) {\n      if (this.regexp_eatClassControlLetter(state)) {\n        return true\n      }\n      state.pos = start;\n    }\n\n    return (\n      this.regexp_eatCharacterClassEscape(state) ||\n      this.regexp_eatCharacterEscape(state)\n    )\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-ClassControlLetter\n  pp$8.regexp_eatClassControlLetter = function(state) {\n    var ch = state.current();\n    if (isDecimalDigit(ch) || ch === 0x5F /* _ */) {\n      state.lastIntValue = ch % 0x20;\n      state.advance();\n      return true\n    }\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-HexEscapeSequence\n  pp$8.regexp_eatHexEscapeSequence = function(state) {\n    var start = state.pos;\n    if (state.eat(0x78 /* x */)) {\n      if (this.regexp_eatFixedHexDigits(state, 2)) {\n        return true\n      }\n      if (state.switchU) {\n        state.raise(\"Invalid escape\");\n      }\n      state.pos = start;\n    }\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-DecimalDigits\n  pp$8.regexp_eatDecimalDigits = function(state) {\n    var start = state.pos;\n    var ch = 0;\n    state.lastIntValue = 0;\n    while (isDecimalDigit(ch = state.current())) {\n      state.lastIntValue = 10 * state.lastIntValue + (ch - 0x30 /* 0 */);\n      state.advance();\n    }\n    return state.pos !== start\n  };\n  function isDecimalDigit(ch) {\n    return ch >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */\n  }\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-HexDigits\n  pp$8.regexp_eatHexDigits = function(state) {\n    var start = state.pos;\n    var ch = 0;\n    state.lastIntValue = 0;\n    while (isHexDigit(ch = state.current())) {\n      state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);\n      state.advance();\n    }\n    return state.pos !== start\n  };\n  function isHexDigit(ch) {\n    return (\n      (ch >= 0x30 /* 0 */ && ch <= 0x39 /* 9 */) ||\n      (ch >= 0x41 /* A */ && ch <= 0x46 /* F */) ||\n      (ch >= 0x61 /* a */ && ch <= 0x66 /* f */)\n    )\n  }\n  function hexToInt(ch) {\n    if (ch >= 0x41 /* A */ && ch <= 0x46 /* F */) {\n      return 10 + (ch - 0x41 /* A */)\n    }\n    if (ch >= 0x61 /* a */ && ch <= 0x66 /* f */) {\n      return 10 + (ch - 0x61 /* a */)\n    }\n    return ch - 0x30 /* 0 */\n  }\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-annexB-LegacyOctalEscapeSequence\n  // Allows only 0-377(octal) i.e. 0-255(decimal).\n  pp$8.regexp_eatLegacyOctalEscapeSequence = function(state) {\n    if (this.regexp_eatOctalDigit(state)) {\n      var n1 = state.lastIntValue;\n      if (this.regexp_eatOctalDigit(state)) {\n        var n2 = state.lastIntValue;\n        if (n1 <= 3 && this.regexp_eatOctalDigit(state)) {\n          state.lastIntValue = n1 * 64 + n2 * 8 + state.lastIntValue;\n        } else {\n          state.lastIntValue = n1 * 8 + n2;\n        }\n      } else {\n        state.lastIntValue = n1;\n      }\n      return true\n    }\n    return false\n  };\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-OctalDigit\n  pp$8.regexp_eatOctalDigit = function(state) {\n    var ch = state.current();\n    if (isOctalDigit(ch)) {\n      state.lastIntValue = ch - 0x30; /* 0 */\n      state.advance();\n      return true\n    }\n    state.lastIntValue = 0;\n    return false\n  };\n  function isOctalDigit(ch) {\n    return ch >= 0x30 /* 0 */ && ch <= 0x37 /* 7 */\n  }\n\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-Hex4Digits\n  // https://www.ecma-international.org/ecma-262/8.0/#prod-HexDigit\n  // And HexDigit HexDigit in https://www.ecma-international.org/ecma-262/8.0/#prod-HexEscapeSequence\n  pp$8.regexp_eatFixedHexDigits = function(state, length) {\n    var start = state.pos;\n    state.lastIntValue = 0;\n    for (var i = 0; i < length; ++i) {\n      var ch = state.current();\n      if (!isHexDigit(ch)) {\n        state.pos = start;\n        return false\n      }\n      state.lastIntValue = 16 * state.lastIntValue + hexToInt(ch);\n      state.advance();\n    }\n    return true\n  };\n\n  // Object type used to represent tokens. Note that normally, tokens\n  // simply exist as properties on the parser object. This is only\n  // used for the onToken callback and the external tokenizer.\n\n  var Token = function Token(p) {\n    this.type = p.type;\n    this.value = p.value;\n    this.start = p.start;\n    this.end = p.end;\n    if (p.options.locations)\n      { this.loc = new SourceLocation(p, p.startLoc, p.endLoc); }\n    if (p.options.ranges)\n      { this.range = [p.start, p.end]; }\n  };\n\n  // ## Tokenizer\n\n  var pp$9 = Parser.prototype;\n\n  // Move to the next token\n\n  pp$9.next = function(ignoreEscapeSequenceInKeyword) {\n    if (!ignoreEscapeSequenceInKeyword && this.type.keyword && this.containsEsc)\n      { this.raiseRecoverable(this.start, \"Escape sequence in keyword \" + this.type.keyword); }\n    if (this.options.onToken)\n      { this.options.onToken(new Token(this)); }\n\n    this.lastTokEnd = this.end;\n    this.lastTokStart = this.start;\n    this.lastTokEndLoc = this.endLoc;\n    this.lastTokStartLoc = this.startLoc;\n    this.nextToken();\n  };\n\n  pp$9.getToken = function() {\n    this.next();\n    return new Token(this)\n  };\n\n  // If we're in an ES6 environment, make parsers iterable\n  if (typeof Symbol !== \"undefined\")\n    { pp$9[Symbol.iterator] = function() {\n      var this$1 = this;\n\n      return {\n        next: function () {\n          var token = this$1.getToken();\n          return {\n            done: token.type === types.eof,\n            value: token\n          }\n        }\n      }\n    }; }\n\n  // Toggle strict mode. Re-reads the next number or string to please\n  // pedantic tests (`\"use strict\"; 010;` should fail).\n\n  pp$9.curContext = function() {\n    return this.context[this.context.length - 1]\n  };\n\n  // Read a single token, updating the parser object's token-related\n  // properties.\n\n  pp$9.nextToken = function() {\n    var curContext = this.curContext();\n    if (!curContext || !curContext.preserveSpace) { this.skipSpace(); }\n\n    this.start = this.pos;\n    if (this.options.locations) { this.startLoc = this.curPosition(); }\n    if (this.pos >= this.input.length) { return this.finishToken(types.eof) }\n\n    if (curContext.override) { return curContext.override(this) }\n    else { this.readToken(this.fullCharCodeAtPos()); }\n  };\n\n  pp$9.readToken = function(code) {\n    // Identifier or keyword. '\\uXXXX' sequences are allowed in\n    // identifiers, so '\\' also dispatches to that.\n    if (isIdentifierStart(code, this.options.ecmaVersion >= 6) || code === 92 /* '\\' */)\n      { return this.readWord() }\n\n    return this.getTokenFromCode(code)\n  };\n\n  pp$9.fullCharCodeAtPos = function() {\n    var code = this.input.charCodeAt(this.pos);\n    if (code <= 0xd7ff || code >= 0xe000) { return code }\n    var next = this.input.charCodeAt(this.pos + 1);\n    return (code << 10) + next - 0x35fdc00\n  };\n\n  pp$9.skipBlockComment = function() {\n    var startLoc = this.options.onComment && this.curPosition();\n    var start = this.pos, end = this.input.indexOf(\"*/\", this.pos += 2);\n    if (end === -1) { this.raise(this.pos - 2, \"Unterminated comment\"); }\n    this.pos = end + 2;\n    if (this.options.locations) {\n      lineBreakG.lastIndex = start;\n      var match;\n      while ((match = lineBreakG.exec(this.input)) && match.index < this.pos) {\n        ++this.curLine;\n        this.lineStart = match.index + match[0].length;\n      }\n    }\n    if (this.options.onComment)\n      { this.options.onComment(true, this.input.slice(start + 2, end), start, this.pos,\n                             startLoc, this.curPosition()); }\n  };\n\n  pp$9.skipLineComment = function(startSkip) {\n    var start = this.pos;\n    var startLoc = this.options.onComment && this.curPosition();\n    var ch = this.input.charCodeAt(this.pos += startSkip);\n    while (this.pos < this.input.length && !isNewLine(ch)) {\n      ch = this.input.charCodeAt(++this.pos);\n    }\n    if (this.options.onComment)\n      { this.options.onComment(false, this.input.slice(start + startSkip, this.pos), start, this.pos,\n                             startLoc, this.curPosition()); }\n  };\n\n  // Called at the start of the parse and after every token. Skips\n  // whitespace and comments, and.\n\n  pp$9.skipSpace = function() {\n    loop: while (this.pos < this.input.length) {\n      var ch = this.input.charCodeAt(this.pos);\n      switch (ch) {\n      case 32: case 160: // ' '\n        ++this.pos;\n        break\n      case 13:\n        if (this.input.charCodeAt(this.pos + 1) === 10) {\n          ++this.pos;\n        }\n      case 10: case 8232: case 8233:\n        ++this.pos;\n        if (this.options.locations) {\n          ++this.curLine;\n          this.lineStart = this.pos;\n        }\n        break\n      case 47: // '/'\n        switch (this.input.charCodeAt(this.pos + 1)) {\n        case 42: // '*'\n          this.skipBlockComment();\n          break\n        case 47:\n          this.skipLineComment(2);\n          break\n        default:\n          break loop\n        }\n        break\n      default:\n        if (ch > 8 && ch < 14 || ch >= 5760 && nonASCIIwhitespace.test(String.fromCharCode(ch))) {\n          ++this.pos;\n        } else {\n          break loop\n        }\n      }\n    }\n  };\n\n  // Called at the end of every token. Sets `end`, `val`, and\n  // maintains `context` and `exprAllowed`, and skips the space after\n  // the token, so that the next one's `start` will point at the\n  // right position.\n\n  pp$9.finishToken = function(type, val) {\n    this.end = this.pos;\n    if (this.options.locations) { this.endLoc = this.curPosition(); }\n    var prevType = this.type;\n    this.type = type;\n    this.value = val;\n\n    this.updateContext(prevType);\n  };\n\n  // ### Token reading\n\n  // This is the function that is called to fetch the next token. It\n  // is somewhat obscure, because it works in character codes rather\n  // than characters, and because operator parsing has been inlined\n  // into it.\n  //\n  // All in the name of speed.\n  //\n  pp$9.readToken_dot = function() {\n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next >= 48 && next <= 57) { return this.readNumber(true) }\n    var next2 = this.input.charCodeAt(this.pos + 2);\n    if (this.options.ecmaVersion >= 6 && next === 46 && next2 === 46) { // 46 = dot '.'\n      this.pos += 3;\n      return this.finishToken(types.ellipsis)\n    } else {\n      ++this.pos;\n      return this.finishToken(types.dot)\n    }\n  };\n\n  pp$9.readToken_slash = function() { // '/'\n    var next = this.input.charCodeAt(this.pos + 1);\n    if (this.exprAllowed) { ++this.pos; return this.readRegexp() }\n    if (next === 61) { return this.finishOp(types.assign, 2) }\n    return this.finishOp(types.slash, 1)\n  };\n\n  pp$9.readToken_mult_modulo_exp = function(code) { // '%*'\n    var next = this.input.charCodeAt(this.pos + 1);\n    var size = 1;\n    var tokentype = code === 42 ? types.star : types.modulo;\n\n    // exponentiation operator ** and **=\n    if (this.options.ecmaVersion >= 7 && code === 42 && next === 42) {\n      ++size;\n      tokentype = types.starstar;\n      next = this.input.charCodeAt(this.pos + 2);\n    }\n\n    if (next === 61) { return this.finishOp(types.assign, size + 1) }\n    return this.finishOp(tokentype, size)\n  };\n\n  pp$9.readToken_pipe_amp = function(code) { // '|&'\n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === code) {\n      if (this.options.ecmaVersion >= 12) {\n        var next2 = this.input.charCodeAt(this.pos + 2);\n        if (next2 === 61) { return this.finishOp(types.assign, 3) }\n      }\n      return this.finishOp(code === 124 ? types.logicalOR : types.logicalAND, 2)\n    }\n    if (next === 61) { return this.finishOp(types.assign, 2) }\n    return this.finishOp(code === 124 ? types.bitwiseOR : types.bitwiseAND, 1)\n  };\n\n  pp$9.readToken_caret = function() { // '^'\n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === 61) { return this.finishOp(types.assign, 2) }\n    return this.finishOp(types.bitwiseXOR, 1)\n  };\n\n  pp$9.readToken_plus_min = function(code) { // '+-'\n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === code) {\n      if (next === 45 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 62 &&\n          (this.lastTokEnd === 0 || lineBreak.test(this.input.slice(this.lastTokEnd, this.pos)))) {\n        // A `-->` line comment\n        this.skipLineComment(3);\n        this.skipSpace();\n        return this.nextToken()\n      }\n      return this.finishOp(types.incDec, 2)\n    }\n    if (next === 61) { return this.finishOp(types.assign, 2) }\n    return this.finishOp(types.plusMin, 1)\n  };\n\n  pp$9.readToken_lt_gt = function(code) { // '<>'\n    var next = this.input.charCodeAt(this.pos + 1);\n    var size = 1;\n    if (next === code) {\n      size = code === 62 && this.input.charCodeAt(this.pos + 2) === 62 ? 3 : 2;\n      if (this.input.charCodeAt(this.pos + size) === 61) { return this.finishOp(types.assign, size + 1) }\n      return this.finishOp(types.bitShift, size)\n    }\n    if (next === 33 && code === 60 && !this.inModule && this.input.charCodeAt(this.pos + 2) === 45 &&\n        this.input.charCodeAt(this.pos + 3) === 45) {\n      // `<!--`, an XML-style comment that should be interpreted as a line comment\n      this.skipLineComment(4);\n      this.skipSpace();\n      return this.nextToken()\n    }\n    if (next === 61) { size = 2; }\n    return this.finishOp(types.relational, size)\n  };\n\n  pp$9.readToken_eq_excl = function(code) { // '=!'\n    var next = this.input.charCodeAt(this.pos + 1);\n    if (next === 61) { return this.finishOp(types.equality, this.input.charCodeAt(this.pos + 2) === 61 ? 3 : 2) }\n    if (code === 61 && next === 62 && this.options.ecmaVersion >= 6) { // '=>'\n      this.pos += 2;\n      return this.finishToken(types.arrow)\n    }\n    return this.finishOp(code === 61 ? types.eq : types.prefix, 1)\n  };\n\n  pp$9.readToken_question = function() { // '?'\n    var ecmaVersion = this.options.ecmaVersion;\n    if (ecmaVersion >= 11) {\n      var next = this.input.charCodeAt(this.pos + 1);\n      if (next === 46) {\n        var next2 = this.input.charCodeAt(this.pos + 2);\n        if (next2 < 48 || next2 > 57) { return this.finishOp(types.questionDot, 2) }\n      }\n      if (next === 63) {\n        if (ecmaVersion >= 12) {\n          var next2$1 = this.input.charCodeAt(this.pos + 2);\n          if (next2$1 === 61) { return this.finishOp(types.assign, 3) }\n        }\n        return this.finishOp(types.coalesce, 2)\n      }\n    }\n    return this.finishOp(types.question, 1)\n  };\n\n  pp$9.getTokenFromCode = function(code) {\n    switch (code) {\n    // The interpretation of a dot depends on whether it is followed\n    // by a digit or another two dots.\n    case 46: // '.'\n      return this.readToken_dot()\n\n    // Punctuation tokens.\n    case 40: ++this.pos; return this.finishToken(types.parenL)\n    case 41: ++this.pos; return this.finishToken(types.parenR)\n    case 59: ++this.pos; return this.finishToken(types.semi)\n    case 44: ++this.pos; return this.finishToken(types.comma)\n    case 91: ++this.pos; return this.finishToken(types.bracketL)\n    case 93: ++this.pos; return this.finishToken(types.bracketR)\n    case 123: ++this.pos; return this.finishToken(types.braceL)\n    case 125: ++this.pos; return this.finishToken(types.braceR)\n    case 58: ++this.pos; return this.finishToken(types.colon)\n\n    case 96: // '`'\n      if (this.options.ecmaVersion < 6) { break }\n      ++this.pos;\n      return this.finishToken(types.backQuote)\n\n    case 48: // '0'\n      var next = this.input.charCodeAt(this.pos + 1);\n      if (next === 120 || next === 88) { return this.readRadixNumber(16) } // '0x', '0X' - hex number\n      if (this.options.ecmaVersion >= 6) {\n        if (next === 111 || next === 79) { return this.readRadixNumber(8) } // '0o', '0O' - octal number\n        if (next === 98 || next === 66) { return this.readRadixNumber(2) } // '0b', '0B' - binary number\n      }\n\n    // Anything else beginning with a digit is an integer, octal\n    // number, or float.\n    case 49: case 50: case 51: case 52: case 53: case 54: case 55: case 56: case 57: // 1-9\n      return this.readNumber(false)\n\n    // Quotes produce strings.\n    case 34: case 39: // '\"', \"'\"\n      return this.readString(code)\n\n    // Operators are parsed inline in tiny state machines. '=' (61) is\n    // often referred to. `finishOp` simply skips the amount of\n    // characters it is given as second argument, and returns a token\n    // of the type given by its first argument.\n\n    case 47: // '/'\n      return this.readToken_slash()\n\n    case 37: case 42: // '%*'\n      return this.readToken_mult_modulo_exp(code)\n\n    case 124: case 38: // '|&'\n      return this.readToken_pipe_amp(code)\n\n    case 94: // '^'\n      return this.readToken_caret()\n\n    case 43: case 45: // '+-'\n      return this.readToken_plus_min(code)\n\n    case 60: case 62: // '<>'\n      return this.readToken_lt_gt(code)\n\n    case 61: case 33: // '=!'\n      return this.readToken_eq_excl(code)\n\n    case 63: // '?'\n      return this.readToken_question()\n\n    case 126: // '~'\n      return this.finishOp(types.prefix, 1)\n    }\n\n    this.raise(this.pos, \"Unexpected character '\" + codePointToString$1(code) + \"'\");\n  };\n\n  pp$9.finishOp = function(type, size) {\n    var str = this.input.slice(this.pos, this.pos + size);\n    this.pos += size;\n    return this.finishToken(type, str)\n  };\n\n  pp$9.readRegexp = function() {\n    var escaped, inClass, start = this.pos;\n    for (;;) {\n      if (this.pos >= this.input.length) { this.raise(start, \"Unterminated regular expression\"); }\n      var ch = this.input.charAt(this.pos);\n      if (lineBreak.test(ch)) { this.raise(start, \"Unterminated regular expression\"); }\n      if (!escaped) {\n        if (ch === \"[\") { inClass = true; }\n        else if (ch === \"]\" && inClass) { inClass = false; }\n        else if (ch === \"/\" && !inClass) { break }\n        escaped = ch === \"\\\\\";\n      } else { escaped = false; }\n      ++this.pos;\n    }\n    var pattern = this.input.slice(start, this.pos);\n    ++this.pos;\n    var flagsStart = this.pos;\n    var flags = this.readWord1();\n    if (this.containsEsc) { this.unexpected(flagsStart); }\n\n    // Validate pattern\n    var state = this.regexpState || (this.regexpState = new RegExpValidationState(this));\n    state.reset(start, pattern, flags);\n    this.validateRegExpFlags(state);\n    this.validateRegExpPattern(state);\n\n    // Create Literal#value property value.\n    var value = null;\n    try {\n      value = new RegExp(pattern, flags);\n    } catch (e) {\n      // ESTree requires null if it failed to instantiate RegExp object.\n      // https://github.com/estree/estree/blob/a27003adf4fd7bfad44de9cef372a2eacd527b1c/es5.md#regexpliteral\n    }\n\n    return this.finishToken(types.regexp, {pattern: pattern, flags: flags, value: value})\n  };\n\n  // Read an integer in the given radix. Return null if zero digits\n  // were read, the integer value otherwise. When `len` is given, this\n  // will return `null` unless the integer has exactly `len` digits.\n\n  pp$9.readInt = function(radix, len, maybeLegacyOctalNumericLiteral) {\n    // `len` is used for character escape sequences. In that case, disallow separators.\n    var allowSeparators = this.options.ecmaVersion >= 12 && len === undefined;\n\n    // `maybeLegacyOctalNumericLiteral` is true if it doesn't have prefix (0x,0o,0b)\n    // and isn't fraction part nor exponent part. In that case, if the first digit\n    // is zero then disallow separators.\n    var isLegacyOctalNumericLiteral = maybeLegacyOctalNumericLiteral && this.input.charCodeAt(this.pos) === 48;\n\n    var start = this.pos, total = 0, lastCode = 0;\n    for (var i = 0, e = len == null ? Infinity : len; i < e; ++i, ++this.pos) {\n      var code = this.input.charCodeAt(this.pos), val = (void 0);\n\n      if (allowSeparators && code === 95) {\n        if (isLegacyOctalNumericLiteral) { this.raiseRecoverable(this.pos, \"Numeric separator is not allowed in legacy octal numeric literals\"); }\n        if (lastCode === 95) { this.raiseRecoverable(this.pos, \"Numeric separator must be exactly one underscore\"); }\n        if (i === 0) { this.raiseRecoverable(this.pos, \"Numeric separator is not allowed at the first of digits\"); }\n        lastCode = code;\n        continue\n      }\n\n      if (code >= 97) { val = code - 97 + 10; } // a\n      else if (code >= 65) { val = code - 65 + 10; } // A\n      else if (code >= 48 && code <= 57) { val = code - 48; } // 0-9\n      else { val = Infinity; }\n      if (val >= radix) { break }\n      lastCode = code;\n      total = total * radix + val;\n    }\n\n    if (allowSeparators && lastCode === 95) { this.raiseRecoverable(this.pos - 1, \"Numeric separator is not allowed at the last of digits\"); }\n    if (this.pos === start || len != null && this.pos - start !== len) { return null }\n\n    return total\n  };\n\n  function stringToNumber(str, isLegacyOctalNumericLiteral) {\n    if (isLegacyOctalNumericLiteral) {\n      return parseInt(str, 8)\n    }\n\n    // `parseFloat(value)` stops parsing at the first numeric separator then returns a wrong value.\n    return parseFloat(str.replace(/_/g, \"\"))\n  }\n\n  function stringToBigInt(str) {\n    if (typeof BigInt !== \"function\") {\n      return null\n    }\n\n    // `BigInt(value)` throws syntax error if the string contains numeric separators.\n    return BigInt(str.replace(/_/g, \"\"))\n  }\n\n  pp$9.readRadixNumber = function(radix) {\n    var start = this.pos;\n    this.pos += 2; // 0x\n    var val = this.readInt(radix);\n    if (val == null) { this.raise(this.start + 2, \"Expected number in radix \" + radix); }\n    if (this.options.ecmaVersion >= 11 && this.input.charCodeAt(this.pos) === 110) {\n      val = stringToBigInt(this.input.slice(start, this.pos));\n      ++this.pos;\n    } else if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n    return this.finishToken(types.num, val)\n  };\n\n  // Read an integer, octal integer, or floating-point number.\n\n  pp$9.readNumber = function(startsWithDot) {\n    var start = this.pos;\n    if (!startsWithDot && this.readInt(10, undefined, true) === null) { this.raise(start, \"Invalid number\"); }\n    var octal = this.pos - start >= 2 && this.input.charCodeAt(start) === 48;\n    if (octal && this.strict) { this.raise(start, \"Invalid number\"); }\n    var next = this.input.charCodeAt(this.pos);\n    if (!octal && !startsWithDot && this.options.ecmaVersion >= 11 && next === 110) {\n      var val$1 = stringToBigInt(this.input.slice(start, this.pos));\n      ++this.pos;\n      if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n      return this.finishToken(types.num, val$1)\n    }\n    if (octal && /[89]/.test(this.input.slice(start, this.pos))) { octal = false; }\n    if (next === 46 && !octal) { // '.'\n      ++this.pos;\n      this.readInt(10);\n      next = this.input.charCodeAt(this.pos);\n    }\n    if ((next === 69 || next === 101) && !octal) { // 'eE'\n      next = this.input.charCodeAt(++this.pos);\n      if (next === 43 || next === 45) { ++this.pos; } // '+-'\n      if (this.readInt(10) === null) { this.raise(start, \"Invalid number\"); }\n    }\n    if (isIdentifierStart(this.fullCharCodeAtPos())) { this.raise(this.pos, \"Identifier directly after number\"); }\n\n    var val = stringToNumber(this.input.slice(start, this.pos), octal);\n    return this.finishToken(types.num, val)\n  };\n\n  // Read a string value, interpreting backslash-escapes.\n\n  pp$9.readCodePoint = function() {\n    var ch = this.input.charCodeAt(this.pos), code;\n\n    if (ch === 123) { // '{'\n      if (this.options.ecmaVersion < 6) { this.unexpected(); }\n      var codePos = ++this.pos;\n      code = this.readHexChar(this.input.indexOf(\"}\", this.pos) - this.pos);\n      ++this.pos;\n      if (code > 0x10FFFF) { this.invalidStringToken(codePos, \"Code point out of bounds\"); }\n    } else {\n      code = this.readHexChar(4);\n    }\n    return code\n  };\n\n  function codePointToString$1(code) {\n    // UTF-16 Decoding\n    if (code <= 0xFFFF) { return String.fromCharCode(code) }\n    code -= 0x10000;\n    return String.fromCharCode((code >> 10) + 0xD800, (code & 1023) + 0xDC00)\n  }\n\n  pp$9.readString = function(quote) {\n    var out = \"\", chunkStart = ++this.pos;\n    for (;;) {\n      if (this.pos >= this.input.length) { this.raise(this.start, \"Unterminated string constant\"); }\n      var ch = this.input.charCodeAt(this.pos);\n      if (ch === quote) { break }\n      if (ch === 92) { // '\\'\n        out += this.input.slice(chunkStart, this.pos);\n        out += this.readEscapedChar(false);\n        chunkStart = this.pos;\n      } else {\n        if (isNewLine(ch, this.options.ecmaVersion >= 10)) { this.raise(this.start, \"Unterminated string constant\"); }\n        ++this.pos;\n      }\n    }\n    out += this.input.slice(chunkStart, this.pos++);\n    return this.finishToken(types.string, out)\n  };\n\n  // Reads template string tokens.\n\n  var INVALID_TEMPLATE_ESCAPE_ERROR = {};\n\n  pp$9.tryReadTemplateToken = function() {\n    this.inTemplateElement = true;\n    try {\n      this.readTmplToken();\n    } catch (err) {\n      if (err === INVALID_TEMPLATE_ESCAPE_ERROR) {\n        this.readInvalidTemplateToken();\n      } else {\n        throw err\n      }\n    }\n\n    this.inTemplateElement = false;\n  };\n\n  pp$9.invalidStringToken = function(position, message) {\n    if (this.inTemplateElement && this.options.ecmaVersion >= 9) {\n      throw INVALID_TEMPLATE_ESCAPE_ERROR\n    } else {\n      this.raise(position, message);\n    }\n  };\n\n  pp$9.readTmplToken = function() {\n    var out = \"\", chunkStart = this.pos;\n    for (;;) {\n      if (this.pos >= this.input.length) { this.raise(this.start, \"Unterminated template\"); }\n      var ch = this.input.charCodeAt(this.pos);\n      if (ch === 96 || ch === 36 && this.input.charCodeAt(this.pos + 1) === 123) { // '`', '${'\n        if (this.pos === this.start && (this.type === types.template || this.type === types.invalidTemplate)) {\n          if (ch === 36) {\n            this.pos += 2;\n            return this.finishToken(types.dollarBraceL)\n          } else {\n            ++this.pos;\n            return this.finishToken(types.backQuote)\n          }\n        }\n        out += this.input.slice(chunkStart, this.pos);\n        return this.finishToken(types.template, out)\n      }\n      if (ch === 92) { // '\\'\n        out += this.input.slice(chunkStart, this.pos);\n        out += this.readEscapedChar(true);\n        chunkStart = this.pos;\n      } else if (isNewLine(ch)) {\n        out += this.input.slice(chunkStart, this.pos);\n        ++this.pos;\n        switch (ch) {\n        case 13:\n          if (this.input.charCodeAt(this.pos) === 10) { ++this.pos; }\n        case 10:\n          out += \"\\n\";\n          break\n        default:\n          out += String.fromCharCode(ch);\n          break\n        }\n        if (this.options.locations) {\n          ++this.curLine;\n          this.lineStart = this.pos;\n        }\n        chunkStart = this.pos;\n      } else {\n        ++this.pos;\n      }\n    }\n  };\n\n  // Reads a template token to search for the end, without validating any escape sequences\n  pp$9.readInvalidTemplateToken = function() {\n    for (; this.pos < this.input.length; this.pos++) {\n      switch (this.input[this.pos]) {\n      case \"\\\\\":\n        ++this.pos;\n        break\n\n      case \"$\":\n        if (this.input[this.pos + 1] !== \"{\") {\n          break\n        }\n      // falls through\n\n      case \"`\":\n        return this.finishToken(types.invalidTemplate, this.input.slice(this.start, this.pos))\n\n      // no default\n      }\n    }\n    this.raise(this.start, \"Unterminated template\");\n  };\n\n  // Used to read escaped characters\n\n  pp$9.readEscapedChar = function(inTemplate) {\n    var ch = this.input.charCodeAt(++this.pos);\n    ++this.pos;\n    switch (ch) {\n    case 110: return \"\\n\" // 'n' -> '\\n'\n    case 114: return \"\\r\" // 'r' -> '\\r'\n    case 120: return String.fromCharCode(this.readHexChar(2)) // 'x'\n    case 117: return codePointToString$1(this.readCodePoint()) // 'u'\n    case 116: return \"\\t\" // 't' -> '\\t'\n    case 98: return \"\\b\" // 'b' -> '\\b'\n    case 118: return \"\\u000b\" // 'v' -> '\\u000b'\n    case 102: return \"\\f\" // 'f' -> '\\f'\n    case 13: if (this.input.charCodeAt(this.pos) === 10) { ++this.pos; } // '\\r\\n'\n    case 10: // ' \\n'\n      if (this.options.locations) { this.lineStart = this.pos; ++this.curLine; }\n      return \"\"\n    case 56:\n    case 57:\n      if (inTemplate) {\n        var codePos = this.pos - 1;\n\n        this.invalidStringToken(\n          codePos,\n          \"Invalid escape sequence in template string\"\n        );\n\n        return null\n      }\n    default:\n      if (ch >= 48 && ch <= 55) {\n        var octalStr = this.input.substr(this.pos - 1, 3).match(/^[0-7]+/)[0];\n        var octal = parseInt(octalStr, 8);\n        if (octal > 255) {\n          octalStr = octalStr.slice(0, -1);\n          octal = parseInt(octalStr, 8);\n        }\n        this.pos += octalStr.length - 1;\n        ch = this.input.charCodeAt(this.pos);\n        if ((octalStr !== \"0\" || ch === 56 || ch === 57) && (this.strict || inTemplate)) {\n          this.invalidStringToken(\n            this.pos - 1 - octalStr.length,\n            inTemplate\n              ? \"Octal literal in template string\"\n              : \"Octal literal in strict mode\"\n          );\n        }\n        return String.fromCharCode(octal)\n      }\n      if (isNewLine(ch)) {\n        // Unicode new line characters after \\ get removed from output in both\n        // template literals and strings\n        return \"\"\n      }\n      return String.fromCharCode(ch)\n    }\n  };\n\n  // Used to read character escape sequences ('\\x', '\\u', '\\U').\n\n  pp$9.readHexChar = function(len) {\n    var codePos = this.pos;\n    var n = this.readInt(16, len);\n    if (n === null) { this.invalidStringToken(codePos, \"Bad character escape sequence\"); }\n    return n\n  };\n\n  // Read an identifier, and return it as a string. Sets `this.containsEsc`\n  // to whether the word contained a '\\u' escape.\n  //\n  // Incrementally adds only escaped chars, adding other chunks as-is\n  // as a micro-optimization.\n\n  pp$9.readWord1 = function() {\n    this.containsEsc = false;\n    var word = \"\", first = true, chunkStart = this.pos;\n    var astral = this.options.ecmaVersion >= 6;\n    while (this.pos < this.input.length) {\n      var ch = this.fullCharCodeAtPos();\n      if (isIdentifierChar(ch, astral)) {\n        this.pos += ch <= 0xffff ? 1 : 2;\n      } else if (ch === 92) { // \"\\\"\n        this.containsEsc = true;\n        word += this.input.slice(chunkStart, this.pos);\n        var escStart = this.pos;\n        if (this.input.charCodeAt(++this.pos) !== 117) // \"u\"\n          { this.invalidStringToken(this.pos, \"Expecting Unicode escape sequence \\\\uXXXX\"); }\n        ++this.pos;\n        var esc = this.readCodePoint();\n        if (!(first ? isIdentifierStart : isIdentifierChar)(esc, astral))\n          { this.invalidStringToken(escStart, \"Invalid Unicode escape\"); }\n        word += codePointToString$1(esc);\n        chunkStart = this.pos;\n      } else {\n        break\n      }\n      first = false;\n    }\n    return word + this.input.slice(chunkStart, this.pos)\n  };\n\n  // Read an identifier or keyword token. Will check for reserved\n  // words when necessary.\n\n  pp$9.readWord = function() {\n    var word = this.readWord1();\n    var type = types.name;\n    if (this.keywords.test(word)) {\n      type = keywords$1[word];\n    }\n    return this.finishToken(type, word)\n  };\n\n  // Acorn is a tiny, fast JavaScript parser written in JavaScript.\n\n  var version = \"7.4.1\";\n\n  Parser.acorn = {\n    Parser: Parser,\n    version: version,\n    defaultOptions: defaultOptions,\n    Position: Position,\n    SourceLocation: SourceLocation,\n    getLineInfo: getLineInfo,\n    Node: Node,\n    TokenType: TokenType,\n    tokTypes: types,\n    keywordTypes: keywords$1,\n    TokContext: TokContext,\n    tokContexts: types$1,\n    isIdentifierChar: isIdentifierChar,\n    isIdentifierStart: isIdentifierStart,\n    Token: Token,\n    isNewLine: isNewLine,\n    lineBreak: lineBreak,\n    lineBreakG: lineBreakG,\n    nonASCIIwhitespace: nonASCIIwhitespace\n  };\n\n  // The main exported interface (under `self.acorn` when in the\n  // browser) is a `parse` function that takes a code string and\n  // returns an abstract syntax tree as specified by [Mozilla parser\n  // API][api].\n  //\n  // [api]: https://developer.mozilla.org/en-US/docs/SpiderMonkey/Parser_API\n\n  function parse(input, options) {\n    return Parser.parse(input, options)\n  }\n\n  // This function tries to parse a single expression at a given\n  // offset in a string. Useful for parsing mixed-language formats\n  // that embed JavaScript expressions.\n\n  function parseExpressionAt(input, pos, options) {\n    return Parser.parseExpressionAt(input, pos, options)\n  }\n\n  // Acorn is organized as a tokenizer and a recursive-descent parser.\n  // The `tokenizer` export provides an interface to the tokenizer.\n\n  function tokenizer(input, options) {\n    return Parser.tokenizer(input, options)\n  }\n\n  exports.Node = Node;\n  exports.Parser = Parser;\n  exports.Position = Position;\n  exports.SourceLocation = SourceLocation;\n  exports.TokContext = TokContext;\n  exports.Token = Token;\n  exports.TokenType = TokenType;\n  exports.defaultOptions = defaultOptions;\n  exports.getLineInfo = getLineInfo;\n  exports.isIdentifierChar = isIdentifierChar;\n  exports.isIdentifierStart = isIdentifierStart;\n  exports.isNewLine = isNewLine;\n  exports.keywordTypes = keywords$1;\n  exports.lineBreak = lineBreak;\n  exports.lineBreakG = lineBreakG;\n  exports.nonASCIIwhitespace = nonASCIIwhitespace;\n  exports.parse = parse;\n  exports.parseExpressionAt = parseExpressionAt;\n  exports.tokContexts = types$1;\n  exports.tokTypes = types;\n  exports.tokenizer = tokenizer;\n  exports.version = version;\n\n  Object.defineProperty(exports, '__esModule', { value: true });\n\n})));\n", "module.exports = {\n  quot: '\\u0022',\n  amp: '&',\n  apos: '\\u0027',\n  lt: '<',\n  gt: '>',\n  nbsp: '\\u00A0',\n  iexcl: '\\u00A1',\n  cent: '\\u00A2',\n  pound: '\\u00A3',\n  curren: '\\u00A4',\n  yen: '\\u00A5',\n  brvbar: '\\u00A6',\n  sect: '\\u00A7',\n  uml: '\\u00A8',\n  copy: '\\u00A9',\n  ordf: '\\u00AA',\n  laquo: '\\u00AB',\n  not: '\\u00AC',\n  shy: '\\u00AD',\n  reg: '\\u00AE',\n  macr: '\\u00AF',\n  deg: '\\u00B0',\n  plusmn: '\\u00B1',\n  sup2: '\\u00B2',\n  sup3: '\\u00B3',\n  acute: '\\u00B4',\n  micro: '\\u00B5',\n  para: '\\u00B6',\n  middot: '\\u00B7',\n  cedil: '\\u00B8',\n  sup1: '\\u00B9',\n  ordm: '\\u00BA',\n  raquo: '\\u00BB',\n  frac14: '\\u00BC',\n  frac12: '\\u00BD',\n  frac34: '\\u00BE',\n  iquest: '\\u00BF',\n  Agrave: '\\u00C0',\n  Aacute: '\\u00C1',\n  Acirc: '\\u00C2',\n  Atilde: '\\u00C3',\n  Auml: '\\u00C4',\n  Aring: '\\u00C5',\n  AElig: '\\u00C6',\n  Ccedil: '\\u00C7',\n  Egrave: '\\u00C8',\n  Eacute: '\\u00C9',\n  Ecirc: '\\u00CA',\n  Euml: '\\u00CB',\n  Igrave: '\\u00CC',\n  Iacute: '\\u00CD',\n  Icirc: '\\u00CE',\n  Iuml: '\\u00CF',\n  ETH: '\\u00D0',\n  Ntilde: '\\u00D1',\n  Ograve: '\\u00D2',\n  Oacute: '\\u00D3',\n  Ocirc: '\\u00D4',\n  Otilde: '\\u00D5',\n  Ouml: '\\u00D6',\n  times: '\\u00D7',\n  Oslash: '\\u00D8',\n  Ugrave: '\\u00D9',\n  Uacute: '\\u00DA',\n  Ucirc: '\\u00DB',\n  Uuml: '\\u00DC',\n  Yacute: '\\u00DD',\n  THORN: '\\u00DE',\n  szlig: '\\u00DF',\n  agrave: '\\u00E0',\n  aacute: '\\u00E1',\n  acirc: '\\u00E2',\n  atilde: '\\u00E3',\n  auml: '\\u00E4',\n  aring: '\\u00E5',\n  aelig: '\\u00E6',\n  ccedil: '\\u00E7',\n  egrave: '\\u00E8',\n  eacute: '\\u00E9',\n  ecirc: '\\u00EA',\n  euml: '\\u00EB',\n  igrave: '\\u00EC',\n  iacute: '\\u00ED',\n  icirc: '\\u00EE',\n  iuml: '\\u00EF',\n  eth: '\\u00F0',\n  ntilde: '\\u00F1',\n  ograve: '\\u00F2',\n  oacute: '\\u00F3',\n  ocirc: '\\u00F4',\n  otilde: '\\u00F5',\n  ouml: '\\u00F6',\n  divide: '\\u00F7',\n  oslash: '\\u00F8',\n  ugrave: '\\u00F9',\n  uacute: '\\u00FA',\n  ucirc: '\\u00FB',\n  uuml: '\\u00FC',\n  yacute: '\\u00FD',\n  thorn: '\\u00FE',\n  yuml: '\\u00FF',\n  OElig: '\\u0152',\n  oelig: '\\u0153',\n  Scaron: '\\u0160',\n  scaron: '\\u0161',\n  Yuml: '\\u0178',\n  fnof: '\\u0192',\n  circ: '\\u02C6',\n  tilde: '\\u02DC',\n  Alpha: '\\u0391',\n  Beta: '\\u0392',\n  Gamma: '\\u0393',\n  Delta: '\\u0394',\n  Epsilon: '\\u0395',\n  Zeta: '\\u0396',\n  Eta: '\\u0397',\n  Theta: '\\u0398',\n  Iota: '\\u0399',\n  Kappa: '\\u039A',\n  Lambda: '\\u039B',\n  Mu: '\\u039C',\n  Nu: '\\u039D',\n  Xi: '\\u039E',\n  Omicron: '\\u039F',\n  Pi: '\\u03A0',\n  Rho: '\\u03A1',\n  Sigma: '\\u03A3',\n  Tau: '\\u03A4',\n  Upsilon: '\\u03A5',\n  Phi: '\\u03A6',\n  Chi: '\\u03A7',\n  Psi: '\\u03A8',\n  Omega: '\\u03A9',\n  alpha: '\\u03B1',\n  beta: '\\u03B2',\n  gamma: '\\u03B3',\n  delta: '\\u03B4',\n  epsilon: '\\u03B5',\n  zeta: '\\u03B6',\n  eta: '\\u03B7',\n  theta: '\\u03B8',\n  iota: '\\u03B9',\n  kappa: '\\u03BA',\n  lambda: '\\u03BB',\n  mu: '\\u03BC',\n  nu: '\\u03BD',\n  xi: '\\u03BE',\n  omicron: '\\u03BF',\n  pi: '\\u03C0',\n  rho: '\\u03C1',\n  sigmaf: '\\u03C2',\n  sigma: '\\u03C3',\n  tau: '\\u03C4',\n  upsilon: '\\u03C5',\n  phi: '\\u03C6',\n  chi: '\\u03C7',\n  psi: '\\u03C8',\n  omega: '\\u03C9',\n  thetasym: '\\u03D1',\n  upsih: '\\u03D2',\n  piv: '\\u03D6',\n  ensp: '\\u2002',\n  emsp: '\\u2003',\n  thinsp: '\\u2009',\n  zwnj: '\\u200C',\n  zwj: '\\u200D',\n  lrm: '\\u200E',\n  rlm: '\\u200F',\n  ndash: '\\u2013',\n  mdash: '\\u2014',\n  lsquo: '\\u2018',\n  rsquo: '\\u2019',\n  sbquo: '\\u201A',\n  ldquo: '\\u201C',\n  rdquo: '\\u201D',\n  bdquo: '\\u201E',\n  dagger: '\\u2020',\n  Dagger: '\\u2021',\n  bull: '\\u2022',\n  hellip: '\\u2026',\n  permil: '\\u2030',\n  prime: '\\u2032',\n  Prime: '\\u2033',\n  lsaquo: '\\u2039',\n  rsaquo: '\\u203A',\n  oline: '\\u203E',\n  frasl: '\\u2044',\n  euro: '\\u20AC',\n  image: '\\u2111',\n  weierp: '\\u2118',\n  real: '\\u211C',\n  trade: '\\u2122',\n  alefsym: '\\u2135',\n  larr: '\\u2190',\n  uarr: '\\u2191',\n  rarr: '\\u2192',\n  darr: '\\u2193',\n  harr: '\\u2194',\n  crarr: '\\u21B5',\n  lArr: '\\u21D0',\n  uArr: '\\u21D1',\n  rArr: '\\u21D2',\n  dArr: '\\u21D3',\n  hArr: '\\u21D4',\n  forall: '\\u2200',\n  part: '\\u2202',\n  exist: '\\u2203',\n  empty: '\\u2205',\n  nabla: '\\u2207',\n  isin: '\\u2208',\n  notin: '\\u2209',\n  ni: '\\u220B',\n  prod: '\\u220F',\n  sum: '\\u2211',\n  minus: '\\u2212',\n  lowast: '\\u2217',\n  radic: '\\u221A',\n  prop: '\\u221D',\n  infin: '\\u221E',\n  ang: '\\u2220',\n  and: '\\u2227',\n  or: '\\u2228',\n  cap: '\\u2229',\n  cup: '\\u222A',\n  'int': '\\u222B',\n  there4: '\\u2234',\n  sim: '\\u223C',\n  cong: '\\u2245',\n  asymp: '\\u2248',\n  ne: '\\u2260',\n  equiv: '\\u2261',\n  le: '\\u2264',\n  ge: '\\u2265',\n  sub: '\\u2282',\n  sup: '\\u2283',\n  nsub: '\\u2284',\n  sube: '\\u2286',\n  supe: '\\u2287',\n  oplus: '\\u2295',\n  otimes: '\\u2297',\n  perp: '\\u22A5',\n  sdot: '\\u22C5',\n  lceil: '\\u2308',\n  rceil: '\\u2309',\n  lfloor: '\\u230A',\n  rfloor: '\\u230B',\n  lang: '\\u2329',\n  rang: '\\u232A',\n  loz: '\\u25CA',\n  spades: '\\u2660',\n  clubs: '\\u2663',\n  hearts: '\\u2665',\n  diams: '\\u2666'\n};\n", "'use strict';\n\nconst XHTMLEntities = require('./xhtml');\n\nconst hexNumber = /^[\\da-fA-F]+$/;\nconst decimalNumber = /^\\d+$/;\n\n// The map to `acorn-jsx` tokens from `acorn` namespace objects.\nconst acornJsxMap = new WeakMap();\n\n// Get the original tokens for the given `acorn` namespace object.\nfunction getJsxTokens(acorn) {\n  acorn = acorn.Parser.acorn || acorn;\n  let acornJsx = acornJsxMap.get(acorn);\n  if (!acornJsx) {\n    const tt = acorn.tokTypes;\n    const TokContext = acorn.TokContext;\n    const TokenType = acorn.TokenType;\n    const tc_oTag = new TokContext('<tag', false);\n    const tc_cTag = new TokContext('</tag', false);\n    const tc_expr = new TokContext('<tag>...</tag>', true, true);\n    const tokContexts = {\n      tc_oTag: tc_oTag,\n      tc_cTag: tc_cTag,\n      tc_expr: tc_expr\n    };\n    const tokTypes = {\n      jsxName: new TokenType('jsxName'),\n      jsxText: new TokenType('jsxText', {beforeExpr: true}),\n      jsxTagStart: new TokenType('jsxTagStart', {startsExpr: true}),\n      jsxTagEnd: new TokenType('jsxTagEnd')\n    };\n\n    tokTypes.jsxTagStart.updateContext = function() {\n      this.context.push(tc_expr); // treat as beginning of JSX expression\n      this.context.push(tc_oTag); // start opening tag context\n      this.exprAllowed = false;\n    };\n    tokTypes.jsxTagEnd.updateContext = function(prevType) {\n      let out = this.context.pop();\n      if (out === tc_oTag && prevType === tt.slash || out === tc_cTag) {\n        this.context.pop();\n        this.exprAllowed = this.curContext() === tc_expr;\n      } else {\n        this.exprAllowed = true;\n      }\n    };\n\n    acornJsx = { tokContexts: tokContexts, tokTypes: tokTypes };\n    acornJsxMap.set(acorn, acornJsx);\n  }\n\n  return acornJsx;\n}\n\n// Transforms JSX element name to string.\n\nfunction getQualifiedJSXName(object) {\n  if (!object)\n    return object;\n\n  if (object.type === 'JSXIdentifier')\n    return object.name;\n\n  if (object.type === 'JSXNamespacedName')\n    return object.namespace.name + ':' + object.name.name;\n\n  if (object.type === 'JSXMemberExpression')\n    return getQualifiedJSXName(object.object) + '.' +\n    getQualifiedJSXName(object.property);\n}\n\nmodule.exports = function(options) {\n  options = options || {};\n  return function(Parser) {\n    return plugin({\n      allowNamespaces: options.allowNamespaces !== false,\n      allowNamespacedObjects: !!options.allowNamespacedObjects\n    }, Parser);\n  };\n};\n\n// This is `tokTypes` of the peer dep.\n// This can be different instances from the actual `tokTypes` this plugin uses.\nObject.defineProperty(module.exports, \"tokTypes\", {\n  get: function get_tokTypes() {\n    return getJsxTokens(require(\"acorn\")).tokTypes;\n  },\n  configurable: true,\n  enumerable: true\n});\n\nfunction plugin(options, Parser) {\n  const acorn = Parser.acorn || require(\"acorn\");\n  const acornJsx = getJsxTokens(acorn);\n  const tt = acorn.tokTypes;\n  const tok = acornJsx.tokTypes;\n  const tokContexts = acorn.tokContexts;\n  const tc_oTag = acornJsx.tokContexts.tc_oTag;\n  const tc_cTag = acornJsx.tokContexts.tc_cTag;\n  const tc_expr = acornJsx.tokContexts.tc_expr;\n  const isNewLine = acorn.isNewLine;\n  const isIdentifierStart = acorn.isIdentifierStart;\n  const isIdentifierChar = acorn.isIdentifierChar;\n\n  return class extends Parser {\n    // Expose actual `tokTypes` and `tokContexts` to other plugins.\n    static get acornJsx() {\n      return acornJsx;\n    }\n\n    // Reads inline JSX contents token.\n    jsx_readToken() {\n      let out = '', chunkStart = this.pos;\n      for (;;) {\n        if (this.pos >= this.input.length)\n          this.raise(this.start, 'Unterminated JSX contents');\n        let ch = this.input.charCodeAt(this.pos);\n\n        switch (ch) {\n        case 60: // '<'\n        case 123: // '{'\n          if (this.pos === this.start) {\n            if (ch === 60 && this.exprAllowed) {\n              ++this.pos;\n              return this.finishToken(tok.jsxTagStart);\n            }\n            return this.getTokenFromCode(ch);\n          }\n          out += this.input.slice(chunkStart, this.pos);\n          return this.finishToken(tok.jsxText, out);\n\n        case 38: // '&'\n          out += this.input.slice(chunkStart, this.pos);\n          out += this.jsx_readEntity();\n          chunkStart = this.pos;\n          break;\n\n        case 62: // '>'\n        case 125: // '}'\n          this.raise(\n            this.pos,\n            \"Unexpected token `\" + this.input[this.pos] + \"`. Did you mean `\" +\n              (ch === 62 ? \"&gt;\" : \"&rbrace;\") + \"` or \" + \"`{\\\"\" + this.input[this.pos] + \"\\\"}\" + \"`?\"\n          );\n\n        default:\n          if (isNewLine(ch)) {\n            out += this.input.slice(chunkStart, this.pos);\n            out += this.jsx_readNewLine(true);\n            chunkStart = this.pos;\n          } else {\n            ++this.pos;\n          }\n        }\n      }\n    }\n\n    jsx_readNewLine(normalizeCRLF) {\n      let ch = this.input.charCodeAt(this.pos);\n      let out;\n      ++this.pos;\n      if (ch === 13 && this.input.charCodeAt(this.pos) === 10) {\n        ++this.pos;\n        out = normalizeCRLF ? '\\n' : '\\r\\n';\n      } else {\n        out = String.fromCharCode(ch);\n      }\n      if (this.options.locations) {\n        ++this.curLine;\n        this.lineStart = this.pos;\n      }\n\n      return out;\n    }\n\n    jsx_readString(quote) {\n      let out = '', chunkStart = ++this.pos;\n      for (;;) {\n        if (this.pos >= this.input.length)\n          this.raise(this.start, 'Unterminated string constant');\n        let ch = this.input.charCodeAt(this.pos);\n        if (ch === quote) break;\n        if (ch === 38) { // '&'\n          out += this.input.slice(chunkStart, this.pos);\n          out += this.jsx_readEntity();\n          chunkStart = this.pos;\n        } else if (isNewLine(ch)) {\n          out += this.input.slice(chunkStart, this.pos);\n          out += this.jsx_readNewLine(false);\n          chunkStart = this.pos;\n        } else {\n          ++this.pos;\n        }\n      }\n      out += this.input.slice(chunkStart, this.pos++);\n      return this.finishToken(tt.string, out);\n    }\n\n    jsx_readEntity() {\n      let str = '', count = 0, entity;\n      let ch = this.input[this.pos];\n      if (ch !== '&')\n        this.raise(this.pos, 'Entity must start with an ampersand');\n      let startPos = ++this.pos;\n      while (this.pos < this.input.length && count++ < 10) {\n        ch = this.input[this.pos++];\n        if (ch === ';') {\n          if (str[0] === '#') {\n            if (str[1] === 'x') {\n              str = str.substr(2);\n              if (hexNumber.test(str))\n                entity = String.fromCharCode(parseInt(str, 16));\n            } else {\n              str = str.substr(1);\n              if (decimalNumber.test(str))\n                entity = String.fromCharCode(parseInt(str, 10));\n            }\n          } else {\n            entity = XHTMLEntities[str];\n          }\n          break;\n        }\n        str += ch;\n      }\n      if (!entity) {\n        this.pos = startPos;\n        return '&';\n      }\n      return entity;\n    }\n\n    // Read a JSX identifier (valid tag or attribute name).\n    //\n    // Optimized version since JSX identifiers can't contain\n    // escape characters and so can be read as single slice.\n    // Also assumes that first character was already checked\n    // by isIdentifierStart in readToken.\n\n    jsx_readWord() {\n      let ch, start = this.pos;\n      do {\n        ch = this.input.charCodeAt(++this.pos);\n      } while (isIdentifierChar(ch) || ch === 45); // '-'\n      return this.finishToken(tok.jsxName, this.input.slice(start, this.pos));\n    }\n\n    // Parse next token as JSX identifier\n\n    jsx_parseIdentifier() {\n      let node = this.startNode();\n      if (this.type === tok.jsxName)\n        node.name = this.value;\n      else if (this.type.keyword)\n        node.name = this.type.keyword;\n      else\n        this.unexpected();\n      this.next();\n      return this.finishNode(node, 'JSXIdentifier');\n    }\n\n    // Parse namespaced identifier.\n\n    jsx_parseNamespacedName() {\n      let startPos = this.start, startLoc = this.startLoc;\n      let name = this.jsx_parseIdentifier();\n      if (!options.allowNamespaces || !this.eat(tt.colon)) return name;\n      var node = this.startNodeAt(startPos, startLoc);\n      node.namespace = name;\n      node.name = this.jsx_parseIdentifier();\n      return this.finishNode(node, 'JSXNamespacedName');\n    }\n\n    // Parses element name in any form - namespaced, member\n    // or single identifier.\n\n    jsx_parseElementName() {\n      if (this.type === tok.jsxTagEnd) return '';\n      let startPos = this.start, startLoc = this.startLoc;\n      let node = this.jsx_parseNamespacedName();\n      if (this.type === tt.dot && node.type === 'JSXNamespacedName' && !options.allowNamespacedObjects) {\n        this.unexpected();\n      }\n      while (this.eat(tt.dot)) {\n        let newNode = this.startNodeAt(startPos, startLoc);\n        newNode.object = node;\n        newNode.property = this.jsx_parseIdentifier();\n        node = this.finishNode(newNode, 'JSXMemberExpression');\n      }\n      return node;\n    }\n\n    // Parses any type of JSX attribute value.\n\n    jsx_parseAttributeValue() {\n      switch (this.type) {\n      case tt.braceL:\n        let node = this.jsx_parseExpressionContainer();\n        if (node.expression.type === 'JSXEmptyExpression')\n          this.raise(node.start, 'JSX attributes must only be assigned a non-empty expression');\n        return node;\n\n      case tok.jsxTagStart:\n      case tt.string:\n        return this.parseExprAtom();\n\n      default:\n        this.raise(this.start, 'JSX value should be either an expression or a quoted JSX text');\n      }\n    }\n\n    // JSXEmptyExpression is unique type since it doesn't actually parse anything,\n    // and so it should start at the end of last read token (left brace) and finish\n    // at the beginning of the next one (right brace).\n\n    jsx_parseEmptyExpression() {\n      let node = this.startNodeAt(this.lastTokEnd, this.lastTokEndLoc);\n      return this.finishNodeAt(node, 'JSXEmptyExpression', this.start, this.startLoc);\n    }\n\n    // Parses JSX expression enclosed into curly brackets.\n\n    jsx_parseExpressionContainer() {\n      let node = this.startNode();\n      this.next();\n      node.expression = this.type === tt.braceR\n        ? this.jsx_parseEmptyExpression()\n        : this.parseExpression();\n      this.expect(tt.braceR);\n      return this.finishNode(node, 'JSXExpressionContainer');\n    }\n\n    // Parses following JSX attribute name-value pair.\n\n    jsx_parseAttribute() {\n      let node = this.startNode();\n      if (this.eat(tt.braceL)) {\n        this.expect(tt.ellipsis);\n        node.argument = this.parseMaybeAssign();\n        this.expect(tt.braceR);\n        return this.finishNode(node, 'JSXSpreadAttribute');\n      }\n      node.name = this.jsx_parseNamespacedName();\n      node.value = this.eat(tt.eq) ? this.jsx_parseAttributeValue() : null;\n      return this.finishNode(node, 'JSXAttribute');\n    }\n\n    // Parses JSX opening tag starting after '<'.\n\n    jsx_parseOpeningElementAt(startPos, startLoc) {\n      let node = this.startNodeAt(startPos, startLoc);\n      node.attributes = [];\n      let nodeName = this.jsx_parseElementName();\n      if (nodeName) node.name = nodeName;\n      while (this.type !== tt.slash && this.type !== tok.jsxTagEnd)\n        node.attributes.push(this.jsx_parseAttribute());\n      node.selfClosing = this.eat(tt.slash);\n      this.expect(tok.jsxTagEnd);\n      return this.finishNode(node, nodeName ? 'JSXOpeningElement' : 'JSXOpeningFragment');\n    }\n\n    // Parses JSX closing tag starting after '</'.\n\n    jsx_parseClosingElementAt(startPos, startLoc) {\n      let node = this.startNodeAt(startPos, startLoc);\n      let nodeName = this.jsx_parseElementName();\n      if (nodeName) node.name = nodeName;\n      this.expect(tok.jsxTagEnd);\n      return this.finishNode(node, nodeName ? 'JSXClosingElement' : 'JSXClosingFragment');\n    }\n\n    // Parses entire JSX element, including it's opening tag\n    // (starting after '<'), attributes, contents and closing tag.\n\n    jsx_parseElementAt(startPos, startLoc) {\n      let node = this.startNodeAt(startPos, startLoc);\n      let children = [];\n      let openingElement = this.jsx_parseOpeningElementAt(startPos, startLoc);\n      let closingElement = null;\n\n      if (!openingElement.selfClosing) {\n        contents: for (;;) {\n          switch (this.type) {\n          case tok.jsxTagStart:\n            startPos = this.start; startLoc = this.startLoc;\n            this.next();\n            if (this.eat(tt.slash)) {\n              closingElement = this.jsx_parseClosingElementAt(startPos, startLoc);\n              break contents;\n            }\n            children.push(this.jsx_parseElementAt(startPos, startLoc));\n            break;\n\n          case tok.jsxText:\n            children.push(this.parseExprAtom());\n            break;\n\n          case tt.braceL:\n            children.push(this.jsx_parseExpressionContainer());\n            break;\n\n          default:\n            this.unexpected();\n          }\n        }\n        if (getQualifiedJSXName(closingElement.name) !== getQualifiedJSXName(openingElement.name)) {\n          this.raise(\n            closingElement.start,\n            'Expected corresponding JSX closing tag for <' + getQualifiedJSXName(openingElement.name) + '>');\n        }\n      }\n      let fragmentOrElement = openingElement.name ? 'Element' : 'Fragment';\n\n      node['opening' + fragmentOrElement] = openingElement;\n      node['closing' + fragmentOrElement] = closingElement;\n      node.children = children;\n      if (this.type === tt.relational && this.value === \"<\") {\n        this.raise(this.start, \"Adjacent JSX elements must be wrapped in an enclosing tag\");\n      }\n      return this.finishNode(node, 'JSX' + fragmentOrElement);\n    }\n\n    // Parse JSX text\n\n    jsx_parseText() {\n      let node = this.parseLiteral(this.value);\n      node.type = \"JSXText\";\n      return node;\n    }\n\n    // Parses entire JSX element from current position.\n\n    jsx_parseElement() {\n      let startPos = this.start, startLoc = this.startLoc;\n      this.next();\n      return this.jsx_parseElementAt(startPos, startLoc);\n    }\n\n    parseExprAtom(refShortHandDefaultPos) {\n      if (this.type === tok.jsxText)\n        return this.jsx_parseText();\n      else if (this.type === tok.jsxTagStart)\n        return this.jsx_parseElement();\n      else\n        return super.parseExprAtom(refShortHandDefaultPos);\n    }\n\n    readToken(code) {\n      let context = this.curContext();\n\n      if (context === tc_expr) return this.jsx_readToken();\n\n      if (context === tc_oTag || context === tc_cTag) {\n        if (isIdentifierStart(code)) return this.jsx_readWord();\n\n        if (code == 62) {\n          ++this.pos;\n          return this.finishToken(tok.jsxTagEnd);\n        }\n\n        if ((code === 34 || code === 39) && context == tc_oTag)\n          return this.jsx_readString(code);\n      }\n\n      if (code === 60 && this.exprAllowed && this.input.charCodeAt(this.pos + 1) !== 33) {\n        ++this.pos;\n        return this.finishToken(tok.jsxTagStart);\n      }\n      return super.readToken(code);\n    }\n\n    updateContext(prevType) {\n      if (this.type == tt.braceL) {\n        var curContext = this.curContext();\n        if (curContext == tc_oTag) this.context.push(tokContexts.b_expr);\n        else if (curContext == tc_expr) this.context.push(tokContexts.b_tmpl);\n        else super.updateContext(prevType);\n        this.exprAllowed = true;\n      } else if (this.type === tt.slash && prevType === tok.jsxTagStart) {\n        this.context.length -= 2; // do not consider JSX expr -> JSX open tag -> ... anymore\n        this.context.push(tc_cTag); // reconsider as closing tag context\n        this.exprAllowed = false;\n      } else {\n        return super.updateContext(prevType);\n      }\n    }\n  };\n}\n", "/**\n * @fileoverview The AST node types produced by the parser.\n * @author Nicholas C. Zakas\n */\n\n\"use strict\";\n\n//------------------------------------------------------------------------------\n// Requirements\n//------------------------------------------------------------------------------\n\n// None!\n\n//------------------------------------------------------------------------------\n// Public\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n    AssignmentExpression: \"AssignmentExpression\",\n    AssignmentPattern: \"AssignmentPattern\",\n    ArrayExpression: \"ArrayExpression\",\n    ArrayPattern: \"ArrayPattern\",\n    ArrowFunctionExpression: \"ArrowFunctionExpression\",\n    AwaitExpression: \"AwaitExpression\",\n    BlockStatement: \"BlockStatement\",\n    BinaryExpression: \"BinaryExpression\",\n    BreakStatement: \"BreakStatement\",\n    CallExpression: \"CallExpression\",\n    CatchClause: \"CatchClause\",\n    ClassBody: \"ClassBody\",\n    ClassDeclaration: \"ClassDeclaration\",\n    ClassExpression: \"ClassExpression\",\n    ConditionalExpression: \"ConditionalExpression\",\n    ContinueStatement: \"ContinueStatement\",\n    DoWhileStatement: \"DoWhileStatement\",\n    DebuggerStatement: \"DebuggerStatement\",\n    EmptyStatement: \"EmptyStatement\",\n    ExpressionStatement: \"ExpressionStatement\",\n    ForStatement: \"ForStatement\",\n    ForInStatement: \"ForInStatement\",\n    ForOfStatement: \"ForOfStatement\",\n    FunctionDeclaration: \"FunctionDeclaration\",\n    FunctionExpression: \"FunctionExpression\",\n    Identifier: \"Identifier\",\n    IfStatement: \"IfStatement\",\n    Literal: \"Literal\",\n    LabeledStatement: \"LabeledStatement\",\n    LogicalExpression: \"LogicalExpression\",\n    MemberExpression: \"MemberExpression\",\n    MetaProperty: \"MetaProperty\",\n    MethodDefinition: \"MethodDefinition\",\n    NewExpression: \"NewExpression\",\n    ObjectExpression: \"ObjectExpression\",\n    ObjectPattern: \"ObjectPattern\",\n    Program: \"Program\",\n    Property: \"Property\",\n    RestElement: \"RestElement\",\n    ReturnStatement: \"ReturnStatement\",\n    SequenceExpression: \"SequenceExpression\",\n    SpreadElement: \"SpreadElement\",\n    Super: \"Super\",\n    SwitchCase: \"SwitchCase\",\n    SwitchStatement: \"SwitchStatement\",\n    TaggedTemplateExpression: \"TaggedTemplateExpression\",\n    TemplateElement: \"TemplateElement\",\n    TemplateLiteral: \"TemplateLiteral\",\n    ThisExpression: \"ThisExpression\",\n    ThrowStatement: \"ThrowStatement\",\n    TryStatement: \"TryStatement\",\n    UnaryExpression: \"UnaryExpression\",\n    UpdateExpression: \"UpdateExpression\",\n    VariableDeclaration: \"VariableDeclaration\",\n    VariableDeclarator: \"VariableDeclarator\",\n    WhileStatement: \"WhileStatement\",\n    WithStatement: \"WithStatement\",\n    YieldExpression: \"YieldExpression\",\n    JSXIdentifier: \"JSXIdentifier\",\n    JSXNamespacedName: \"JSXNamespacedName\",\n    JSXMemberExpression: \"JSXMemberExpression\",\n    JSXEmptyExpression: \"JSXEmptyExpression\",\n    JSXExpressionContainer: \"JSXExpressionContainer\",\n    JSXElement: \"JSXElement\",\n    JSXClosingElement: \"JSXClosingElement\",\n    JSXOpeningElement: \"JSXOpeningElement\",\n    JSXAttribute: \"JSXAttribute\",\n    JSXSpreadAttribute: \"JSXSpreadAttribute\",\n    JSXText: \"JSXText\",\n    ExportDefaultDeclaration: \"ExportDefaultDeclaration\",\n    ExportNamedDeclaration: \"ExportNamedDeclaration\",\n    ExportAllDeclaration: \"ExportAllDeclaration\",\n    ExportSpecifier: \"ExportSpecifier\",\n    ImportDeclaration: \"ImportDeclaration\",\n    ImportSpecifier: \"ImportSpecifier\",\n    ImportDefaultSpecifier: \"ImportDefaultSpecifier\",\n    ImportNamespaceSpecifier: \"ImportNamespaceSpecifier\"\n};\n", "/**\n * @fileoverview Translates tokens between Acorn format and Esprima format.\n * @author Nicholas C. Zakas\n */\n/* eslint no-underscore-dangle: 0 */\n\n\"use strict\";\n\n//------------------------------------------------------------------------------\n// Requirements\n//------------------------------------------------------------------------------\n\n// none!\n\n//------------------------------------------------------------------------------\n// Private\n//------------------------------------------------------------------------------\n\n\n// Esprima Token Types\nconst Token = {\n    Boolean: \"Boolean\",\n    EOF: \"<end>\",\n    Identifier: \"Identifier\",\n    Keyword: \"Keyword\",\n    Null: \"Null\",\n    Numeric: \"Numeric\",\n    Punctuator: \"Punctuator\",\n    String: \"String\",\n    RegularExpression: \"RegularExpression\",\n    Template: \"Template\",\n    JSXIdentifier: \"JSXIdentifier\",\n    JSXText: \"JSXText\"\n};\n\n/**\n * Converts part of a template into an Esprima token.\n * @param {AcornToken[]} tokens The Acorn tokens representing the template.\n * @param {string} code The source code.\n * @returns {EsprimaToken} The Esprima equivalent of the template token.\n * @private\n */\nfunction convertTemplatePart(tokens, code) {\n    const firstToken = tokens[0],\n        lastTemplateToken = tokens[tokens.length - 1];\n\n    const token = {\n        type: Token.Template,\n        value: code.slice(firstToken.start, lastTemplateToken.end)\n    };\n\n    if (firstToken.loc) {\n        token.loc = {\n            start: firstToken.loc.start,\n            end: lastTemplateToken.loc.end\n        };\n    }\n\n    if (firstToken.range) {\n        token.start = firstToken.range[0];\n        token.end = lastTemplateToken.range[1];\n        token.range = [token.start, token.end];\n    }\n\n    return token;\n}\n\n/**\n * Contains logic to translate Acorn tokens into Esprima tokens.\n * @param {Object} acornTokTypes The Acorn token types.\n * @param {string} code The source code Acorn is parsing. This is necessary\n *      to correct the \"value\" property of some tokens.\n * @constructor\n */\nfunction TokenTranslator(acornTokTypes, code) {\n\n    // token types\n    this._acornTokTypes = acornTokTypes;\n\n    // token buffer for templates\n    this._tokens = [];\n\n    // track the last curly brace\n    this._curlyBrace = null;\n\n    // the source code\n    this._code = code;\n\n}\n\nTokenTranslator.prototype = {\n    constructor: TokenTranslator,\n\n    /**\n     * Translates a single Esprima token to a single Acorn token. This may be\n     * inaccurate due to how templates are handled differently in Esprima and\n     * Acorn, but should be accurate for all other tokens.\n     * @param {AcornToken} token The Acorn token to translate.\n     * @param {Object} extra Espree extra object.\n     * @returns {EsprimaToken} The Esprima version of the token.\n     */\n    translate(token, extra) {\n\n        const type = token.type,\n            tt = this._acornTokTypes;\n\n        if (type === tt.name) {\n            token.type = Token.Identifier;\n\n            // TODO: See if this is an Acorn bug\n            if (token.value === \"static\") {\n                token.type = Token.Keyword;\n            }\n\n            if (extra.ecmaVersion > 5 && (token.value === \"yield\" || token.value === \"let\")) {\n                token.type = Token.Keyword;\n            }\n\n        } else if (type === tt.semi || type === tt.comma ||\n                 type === tt.parenL || type === tt.parenR ||\n                 type === tt.braceL || type === tt.braceR ||\n                 type === tt.dot || type === tt.bracketL ||\n                 type === tt.colon || type === tt.question ||\n                 type === tt.bracketR || type === tt.ellipsis ||\n                 type === tt.arrow || type === tt.jsxTagStart ||\n                 type === tt.incDec || type === tt.starstar ||\n                 type === tt.jsxTagEnd || type === tt.prefix ||\n                 (type.binop && !type.keyword) ||\n                 type.isAssign) {\n\n            token.type = Token.Punctuator;\n            token.value = this._code.slice(token.start, token.end);\n        } else if (type === tt.jsxName) {\n            token.type = Token.JSXIdentifier;\n        } else if (type.label === \"jsxText\" || type === tt.jsxAttrValueToken) {\n            token.type = Token.JSXText;\n        } else if (type.keyword) {\n            if (type.keyword === \"true\" || type.keyword === \"false\") {\n                token.type = Token.Boolean;\n            } else if (type.keyword === \"null\") {\n                token.type = Token.Null;\n            } else {\n                token.type = Token.Keyword;\n            }\n        } else if (type === tt.num) {\n            token.type = Token.Numeric;\n            token.value = this._code.slice(token.start, token.end);\n        } else if (type === tt.string) {\n\n            if (extra.jsxAttrValueToken) {\n                extra.jsxAttrValueToken = false;\n                token.type = Token.JSXText;\n            } else {\n                token.type = Token.String;\n            }\n\n            token.value = this._code.slice(token.start, token.end);\n        } else if (type === tt.regexp) {\n            token.type = Token.RegularExpression;\n            const value = token.value;\n\n            token.regex = {\n                flags: value.flags,\n                pattern: value.pattern\n            };\n            token.value = `/${value.pattern}/${value.flags}`;\n        }\n\n        return token;\n    },\n\n    /**\n     * Function to call during Acorn's onToken handler.\n     * @param {AcornToken} token The Acorn token.\n     * @param {Object} extra The Espree extra object.\n     * @returns {void}\n     */\n    onToken(token, extra) {\n\n        const that = this,\n            tt = this._acornTokTypes,\n            tokens = extra.tokens,\n            templateTokens = this._tokens;\n\n        /**\n         * Flushes the buffered template tokens and resets the template\n         * tracking.\n         * @returns {void}\n         * @private\n         */\n        function translateTemplateTokens() {\n            tokens.push(convertTemplatePart(that._tokens, that._code));\n            that._tokens = [];\n        }\n\n        if (token.type === tt.eof) {\n\n            // might be one last curlyBrace\n            if (this._curlyBrace) {\n                tokens.push(this.translate(this._curlyBrace, extra));\n            }\n\n            return;\n        }\n\n        if (token.type === tt.backQuote) {\n\n            // if there's already a curly, it's not part of the template\n            if (this._curlyBrace) {\n                tokens.push(this.translate(this._curlyBrace, extra));\n                this._curlyBrace = null;\n            }\n\n            templateTokens.push(token);\n\n            // it's the end\n            if (templateTokens.length > 1) {\n                translateTemplateTokens();\n            }\n\n            return;\n        }\n        if (token.type === tt.dollarBraceL) {\n            templateTokens.push(token);\n            translateTemplateTokens();\n            return;\n        }\n        if (token.type === tt.braceR) {\n\n            // if there's already a curly, it's not part of the template\n            if (this._curlyBrace) {\n                tokens.push(this.translate(this._curlyBrace, extra));\n            }\n\n            // store new curly for later\n            this._curlyBrace = token;\n            return;\n        }\n        if (token.type === tt.template || token.type === tt.invalidTemplate) {\n            if (this._curlyBrace) {\n                templateTokens.push(this._curlyBrace);\n                this._curlyBrace = null;\n            }\n\n            templateTokens.push(token);\n            return;\n        }\n\n        if (this._curlyBrace) {\n            tokens.push(this.translate(this._curlyBrace, extra));\n            this._curlyBrace = null;\n        }\n\n        tokens.push(this.translate(token, extra));\n    }\n};\n\n//------------------------------------------------------------------------------\n// Public\n//------------------------------------------------------------------------------\n\nmodule.exports = TokenTranslator;\n", "/**\n * @fileoverview A collection of methods for processing Espree's options.\n * @author Kai Cataldo\n */\n\n\"use strict\";\n\n//------------------------------------------------------------------------------\n// Helpers\n//------------------------------------------------------------------------------\n\nconst DEFAULT_ECMA_VERSION = 5;\nconst SUPPORTED_VERSIONS = [\n    3,\n    5,\n    6,\n    7,\n    8,\n    9,\n    10,\n    11\n];\n\n/**\n * Normalize ECMAScript version from the initial config\n * @param {number} ecmaVersion ECMAScript version from the initial config\n * @throws {Error} throws an error if the ecmaVersion is invalid.\n * @returns {number} normalized ECMAScript version\n */\nfunction normalizeEcmaVersion(ecmaVersion = DEFAULT_ECMA_VERSION) {\n    if (typeof ecmaVersion !== \"number\") {\n        throw new Error(`ecmaVersion must be a number. Received value of type ${typeof ecmaVersion} instead.`);\n    }\n\n    let version = ecmaVersion;\n\n    // Calculate ECMAScript edition number from official year version starting with\n    // ES2015, which corresponds with ES6 (or a difference of 2009).\n    if (version >= 2015) {\n        version -= 2009;\n    }\n\n    if (!SUPPORTED_VERSIONS.includes(version)) {\n        throw new Error(\"Invalid ecmaVersion.\");\n    }\n\n    return version;\n}\n\n/**\n * Normalize sourceType from the initial config\n * @param {string} sourceType to normalize\n * @throws {Error} throw an error if sourceType is invalid\n * @returns {string} normalized sourceType\n */\nfunction normalizeSourceType(sourceType = \"script\") {\n    if (sourceType === \"script\" || sourceType === \"module\") {\n        return sourceType;\n    }\n    throw new Error(\"Invalid sourceType.\");\n}\n\n/**\n * Normalize parserOptions\n * @param {Object} options the parser options to normalize\n * @throws {Error} throw an error if found invalid option.\n * @returns {Object} normalized options\n */\nfunction normalizeOptions(options) {\n    const ecmaVersion = normalizeEcmaVersion(options.ecmaVersion);\n    const sourceType = normalizeSourceType(options.sourceType);\n    const ranges = options.range === true;\n    const locations = options.loc === true;\n\n    if (sourceType === \"module\" && ecmaVersion < 6) {\n        throw new Error(\"sourceType 'module' is not supported when ecmaVersion < 2015. Consider adding `{ ecmaVersion: 2015 }` to the parser options.\");\n    }\n    return Object.assign({}, options, { ecmaVersion, sourceType, ranges, locations });\n}\n\n/**\n * Get the latest ECMAScript version supported by Espree.\n * @returns {number} The latest ECMAScript version.\n */\nfunction getLatestEcmaVersion() {\n    return SUPPORTED_VERSIONS[SUPPORTED_VERSIONS.length - 1];\n}\n\n/**\n * Get the list of ECMAScript versions supported by Espree.\n * @returns {number[]} An array containing the supported ECMAScript versions.\n */\nfunction getSupportedEcmaVersions() {\n    return [...SUPPORTED_VERSIONS];\n}\n\n//------------------------------------------------------------------------------\n// Public\n//------------------------------------------------------------------------------\n\nmodule.exports = {\n    normalizeOptions,\n    getLatestEcmaVersion,\n    getSupportedEcmaVersions\n};\n", "\"use strict\";\n\n/* eslint-disable no-param-reassign*/\nconst TokenTranslator = require(\"./token-translator\");\nconst { normalizeOptions } = require(\"./options\");\n\nconst STATE = Symbol(\"espree's internal state\");\nconst ESPRIMA_FINISH_NODE = Symbol(\"espree's esprimaFinishNode\");\n\n\n/**\n * Converts an Acorn comment to a Esprima comment.\n * @param {boolean} block True if it's a block comment, false if not.\n * @param {string} text The text of the comment.\n * @param {int} start The index at which the comment starts.\n * @param {int} end The index at which the comment ends.\n * @param {Location} startLoc The location at which the comment starts.\n * @param {Location} endLoc The location at which the comment ends.\n * @returns {Object} The comment object.\n * @private\n */\nfunction convertAcornCommentToEsprimaComment(block, text, start, end, startLoc, endLoc) {\n    const comment = {\n        type: block ? \"Block\" : \"Line\",\n        value: text\n    };\n\n    if (typeof start === \"number\") {\n        comment.start = start;\n        comment.end = end;\n        comment.range = [start, end];\n    }\n\n    if (typeof startLoc === \"object\") {\n        comment.loc = {\n            start: startLoc,\n            end: endLoc\n        };\n    }\n\n    return comment;\n}\n\nmodule.exports = () => Parser => {\n    const tokTypes = Object.assign({}, Parser.acorn.tokTypes);\n\n    if (Parser.acornJsx) {\n        Object.assign(tokTypes, Parser.acornJsx.tokTypes);\n    }\n\n    return class Espree extends Parser {\n        constructor(opts, code) {\n            if (typeof opts !== \"object\" || opts === null) {\n                opts = {};\n            }\n            if (typeof code !== \"string\" && !(code instanceof String)) {\n                code = String(code);\n            }\n\n            const options = normalizeOptions(opts);\n            const ecmaFeatures = options.ecmaFeatures || {};\n            const tokenTranslator =\n                options.tokens === true\n                    ? new TokenTranslator(tokTypes, code)\n                    : null;\n\n            // Initialize acorn parser.\n            super({\n\n                // TODO: use {...options} when spread is supported(Node.js >= 8.3.0).\n                ecmaVersion: options.ecmaVersion,\n                sourceType: options.sourceType,\n                ranges: options.ranges,\n                locations: options.locations,\n\n                // Truthy value is true for backward compatibility.\n                allowReturnOutsideFunction: Boolean(ecmaFeatures.globalReturn),\n\n                // Collect tokens\n                onToken: token => {\n                    if (tokenTranslator) {\n\n                        // Use `tokens`, `ecmaVersion`, and `jsxAttrValueToken` in the state.\n                        tokenTranslator.onToken(token, this[STATE]);\n                    }\n                    if (token.type !== tokTypes.eof) {\n                        this[STATE].lastToken = token;\n                    }\n                },\n\n                // Collect comments\n                onComment: (block, text, start, end, startLoc, endLoc) => {\n                    if (this[STATE].comments) {\n                        const comment = convertAcornCommentToEsprimaComment(block, text, start, end, startLoc, endLoc);\n\n                        this[STATE].comments.push(comment);\n                    }\n                }\n            }, code);\n\n            // Initialize internal state.\n            this[STATE] = {\n                tokens: tokenTranslator ? [] : null,\n                comments: options.comment === true ? [] : null,\n                impliedStrict: ecmaFeatures.impliedStrict === true && this.options.ecmaVersion >= 5,\n                ecmaVersion: this.options.ecmaVersion,\n                jsxAttrValueToken: false,\n                lastToken: null\n            };\n        }\n\n        tokenize() {\n            do {\n                this.next();\n            } while (this.type !== tokTypes.eof);\n\n            // Consume the final eof token\n            this.next();\n\n            const extra = this[STATE];\n            const tokens = extra.tokens;\n\n            if (extra.comments) {\n                tokens.comments = extra.comments;\n            }\n\n            return tokens;\n        }\n\n        finishNode(...args) {\n            const result = super.finishNode(...args);\n\n            return this[ESPRIMA_FINISH_NODE](result);\n        }\n\n        finishNodeAt(...args) {\n            const result = super.finishNodeAt(...args);\n\n            return this[ESPRIMA_FINISH_NODE](result);\n        }\n\n        parse() {\n            const extra = this[STATE];\n            const program = super.parse();\n\n            program.sourceType = this.options.sourceType;\n\n            if (extra.comments) {\n                program.comments = extra.comments;\n            }\n            if (extra.tokens) {\n                program.tokens = extra.tokens;\n            }\n\n            /*\n             * Adjust opening and closing position of program to match Esprima.\n             * Acorn always starts programs at range 0 whereas Esprima starts at the\n             * first AST node's start (the only real difference is when there's leading\n             * whitespace or leading comments). Acorn also counts trailing whitespace\n             * as part of the program whereas Esprima only counts up to the last token.\n             */\n            if (program.range) {\n                program.range[0] = program.body.length ? program.body[0].range[0] : program.range[0];\n                program.range[1] = extra.lastToken ? extra.lastToken.range[1] : program.range[1];\n            }\n            if (program.loc) {\n                program.loc.start = program.body.length ? program.body[0].loc.start : program.loc.start;\n                program.loc.end = extra.lastToken ? extra.lastToken.loc.end : program.loc.end;\n            }\n\n            return program;\n        }\n\n        parseTopLevel(node) {\n            if (this[STATE].impliedStrict) {\n                this.strict = true;\n            }\n            return super.parseTopLevel(node);\n        }\n\n        /**\n         * Overwrites the default raise method to throw Esprima-style errors.\n         * @param {int} pos The position of the error.\n         * @param {string} message The error message.\n         * @throws {SyntaxError} A syntax error.\n         * @returns {void}\n         */\n        raise(pos, message) {\n            const loc = Parser.acorn.getLineInfo(this.input, pos);\n            const err = new SyntaxError(message);\n\n            err.index = pos;\n            err.lineNumber = loc.line;\n            err.column = loc.column + 1; // acorn uses 0-based columns\n            throw err;\n        }\n\n        /**\n         * Overwrites the default raise method to throw Esprima-style errors.\n         * @param {int} pos The position of the error.\n         * @param {string} message The error message.\n         * @throws {SyntaxError} A syntax error.\n         * @returns {void}\n         */\n        raiseRecoverable(pos, message) {\n            this.raise(pos, message);\n        }\n\n        /**\n         * Overwrites the default unexpected method to throw Esprima-style errors.\n         * @param {int} pos The position of the error.\n         * @throws {SyntaxError} A syntax error.\n         * @returns {void}\n         */\n        unexpected(pos) {\n            let message = \"Unexpected token\";\n\n            if (pos !== null && pos !== void 0) {\n                this.pos = pos;\n\n                if (this.options.locations) {\n                    while (this.pos < this.lineStart) {\n                        this.lineStart = this.input.lastIndexOf(\"\\n\", this.lineStart - 2) + 1;\n                        --this.curLine;\n                    }\n                }\n\n                this.nextToken();\n            }\n\n            if (this.end > this.start) {\n                message += ` ${this.input.slice(this.start, this.end)}`;\n            }\n\n            this.raise(this.start, message);\n        }\n\n        /*\n        * Esprima-FB represents JSX strings as tokens called \"JSXText\", but Acorn-JSX\n        * uses regular tt.string without any distinction between this and regular JS\n        * strings. As such, we intercept an attempt to read a JSX string and set a flag\n        * on extra so that when tokens are converted, the next token will be switched\n        * to JSXText via onToken.\n        */\n        jsx_readString(quote) { // eslint-disable-line camelcase\n            const result = super.jsx_readString(quote);\n\n            if (this.type === tokTypes.string) {\n                this[STATE].jsxAttrValueToken = true;\n            }\n            return result;\n        }\n\n        /**\n         * Performs last-minute Esprima-specific compatibility checks and fixes.\n         * @param {ASTNode} result The node to check.\n         * @returns {ASTNode} The finished node.\n         */\n        [ESPRIMA_FINISH_NODE](result) {\n\n            // Acorn doesn't count the opening and closing backticks as part of templates\n            // so we have to adjust ranges/locations appropriately.\n            if (result.type === \"TemplateElement\") {\n\n                // additional adjustment needed if ${ is the last token\n                const terminalDollarBraceL = this.input.slice(result.end, result.end + 2) === \"${\";\n\n                if (result.range) {\n                    result.range[0]--;\n                    result.range[1] += (terminalDollarBraceL ? 2 : 1);\n                }\n\n                if (result.loc) {\n                    result.loc.start.column--;\n                    result.loc.end.column += (terminalDollarBraceL ? 2 : 1);\n                }\n            }\n\n            if (result.type.indexOf(\"Function\") > -1 && !result.generator) {\n                result.generator = false;\n            }\n\n            return result;\n        }\n    };\n};\n", "/**\n * @fileoverview Main Espree file that converts Acorn into Esprima output.\n *\n * This file contains code from the following MIT-licensed projects:\n * 1. Acorn\n * 2. Babylon\n * 3. Babel-ESLint\n *\n * This file also contains code from Esprima, which is BSD licensed.\n *\n * Acorn is Copyright 2012-2015 Acorn Contributors (https://github.com/marijnh/acorn/blob/master/AUTHORS)\n * Babylon is Copyright 2014-2015 various contributors (https://github.com/babel/babel/blob/master/packages/babylon/AUTHORS)\n * Babel-ESLint is Copyright 2014-2015 Sebastian McKenzie <sebmck@gmail.com>\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n * * Redistributions of source code must retain the above copyright\n *   notice, this list of conditions and the following disclaimer.\n * * Redistributions in binary form must reproduce the above copyright\n *   notice, this list of conditions and the following disclaimer in the\n *   documentation and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n *\n * Esprima is Copyright (c) jQuery Foundation, Inc. and Contributors, All Rights Reserved.\n *\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are met:\n *\n *   * Redistributions of source code must retain the above copyright\n *     notice, this list of conditions and the following disclaimer.\n *   * Redistributions in binary form must reproduce the above copyright\n *     notice, this list of conditions and the following disclaimer in the\n *     documentation and/or other materials provided with the distribution.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n * ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n * DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n * LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n * ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n/* eslint no-undefined:0, no-use-before-define: 0 */\n\n\"use strict\";\n\nconst acorn = require(\"acorn\");\nconst jsx = require(\"acorn-jsx\");\nconst astNodeTypes = require(\"./lib/ast-node-types\");\nconst espree = require(\"./lib/espree\");\nconst { getLatestEcmaVersion, getSupportedEcmaVersions } = require(\"./lib/options\");\n\n// To initialize lazily.\nconst parsers = {\n    _regular: null,\n    _jsx: null,\n\n    get regular() {\n        if (this._regular === null) {\n            this._regular = acorn.Parser.extend(espree());\n        }\n        return this._regular;\n    },\n\n    get jsx() {\n        if (this._jsx === null) {\n            this._jsx = acorn.Parser.extend(jsx(), espree());\n        }\n        return this._jsx;\n    },\n\n    get(options) {\n        const useJsx = Boolean(\n            options &&\n            options.ecmaFeatures &&\n            options.ecmaFeatures.jsx\n        );\n\n        return useJsx ? this.jsx : this.regular;\n    }\n};\n\n//------------------------------------------------------------------------------\n// Tokenizer\n//------------------------------------------------------------------------------\n\n/**\n * Tokenizes the given code.\n * @param {string} code The code to tokenize.\n * @param {Object} options Options defining how to tokenize.\n * @returns {Token[]} An array of tokens.\n * @throws {SyntaxError} If the input code is invalid.\n * @private\n */\nfunction tokenize(code, options) {\n    const Parser = parsers.get(options);\n\n    // Ensure to collect tokens.\n    if (!options || options.tokens !== true) {\n        options = Object.assign({}, options, { tokens: true }); // eslint-disable-line no-param-reassign\n    }\n\n    return new Parser(options, code).tokenize();\n}\n\n//------------------------------------------------------------------------------\n// Parser\n//------------------------------------------------------------------------------\n\n/**\n * Parses the given code.\n * @param {string} code The code to tokenize.\n * @param {Object} options Options defining how to tokenize.\n * @returns {ASTNode} The \"Program\" AST node.\n * @throws {SyntaxError} If the input code is invalid.\n */\nfunction parse(code, options) {\n    const Parser = parsers.get(options);\n\n    return new Parser(options, code).parse();\n}\n\n//------------------------------------------------------------------------------\n// Public\n//------------------------------------------------------------------------------\n\nexports.version = require(\"./package.json\").version;\n\nexports.tokenize = tokenize;\n\nexports.parse = parse;\n\n// Deep copy.\n/* istanbul ignore next */\nexports.Syntax = (function() {\n    let name,\n        types = {};\n\n    if (typeof Object.create === \"function\") {\n        types = Object.create(null);\n    }\n\n    for (name in astNodeTypes) {\n        if (Object.hasOwnProperty.call(astNodeTypes, name)) {\n            types[name] = astNodeTypes[name];\n        }\n    }\n\n    if (typeof Object.freeze === \"function\") {\n        Object.freeze(types);\n    }\n\n    return types;\n}());\n\n/* istanbul ignore next */\nexports.VisitorKeys = (function() {\n    return require(\"eslint-visitor-keys\").KEYS;\n}());\n\nexports.latestEcmaVersion = getLatestEcmaVersion();\n\nexports.supportedEcmaVersions = getSupportedEcmaVersions();\n", "var baseIteratee = require('./_baseIteratee'),\n    baseSortedIndexBy = require('./_baseSortedIndexBy');\n\n/**\n * This method is like `_.sortedLastIndex` except that it accepts `iteratee`\n * which is invoked for `value` and each element of `array` to compute their\n * sort ranking. The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Array\n * @param {Array} array The sorted array to inspect.\n * @param {*} value The value to evaluate.\n * @param {Function} [iteratee=_.identity] The iteratee invoked per element.\n * @returns {number} Returns the index at which `value` should be inserted\n *  into `array`.\n * @example\n *\n * var objects = [{ 'x': 4 }, { 'x': 5 }];\n *\n * _.sortedLastIndexBy(objects, { 'x': 4 }, function(o) { return o.x; });\n * // => 1\n *\n * // The `_.property` iteratee shorthand.\n * _.sortedLastIndexBy(objects, { 'x': 4 }, 'x');\n * // => 1\n */\nfunction sortedLastIndexBy(array, value, iteratee) {\n  return baseSortedIndexBy(array, value, baseIteratee(iteratee, 2), true);\n}\n\nmodule.exports = sortedLastIndexBy;\n", "/*\n  Copyright (C) 2012-2013 Yusuke Suzuki <utatane.tea@gmail.com>\n  Copyright (C) 2012 Ariya Hidayat <ariya.hidayat@gmail.com>\n\n  Redistribution and use in source and binary forms, with or without\n  modification, are permitted provided that the following conditions are met:\n\n    * Redistributions of source code must retain the above copyright\n      notice, this list of conditions and the following disclaimer.\n    * Redistributions in binary form must reproduce the above copyright\n      notice, this list of conditions and the following disclaimer in the\n      documentation and/or other materials provided with the distribution.\n\n  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n  AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n  IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n  ARE DISCLAIMED. IN NO EVENT SHALL <COPYRIGHT HOLDER> BE LIABLE FOR ANY\n  DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n  (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\n  LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\n  ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF\n  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n*/\n/*jslint vars:false, bitwise:true*/\n/*jshint indent:4*/\n/*global exports:true*/\n(function clone(exports) {\n    'use strict';\n\n    var Syntax,\n        VisitorOption,\n        VisitorKeys,\n        BREAK,\n        SKIP,\n        REMOVE;\n\n    function deepCopy(obj) {\n        var ret = {}, key, val;\n        for (key in obj) {\n            if (obj.hasOwnProperty(key)) {\n                val = obj[key];\n                if (typeof val === 'object' && val !== null) {\n                    ret[key] = deepCopy(val);\n                } else {\n                    ret[key] = val;\n                }\n            }\n        }\n        return ret;\n    }\n\n    // based on LLVM libc++ upper_bound / lower_bound\n    // MIT License\n\n    function upperBound(array, func) {\n        var diff, len, i, current;\n\n        len = array.length;\n        i = 0;\n\n        while (len) {\n            diff = len >>> 1;\n            current = i + diff;\n            if (func(array[current])) {\n                len = diff;\n            } else {\n                i = current + 1;\n                len -= diff + 1;\n            }\n        }\n        return i;\n    }\n\n    Syntax = {\n        AssignmentExpression: 'AssignmentExpression',\n        AssignmentPattern: 'AssignmentPattern',\n        ArrayExpression: 'ArrayExpression',\n        ArrayPattern: 'ArrayPattern',\n        ArrowFunctionExpression: 'ArrowFunctionExpression',\n        AwaitExpression: 'AwaitExpression', // CAUTION: It's deferred to ES7.\n        BlockStatement: 'BlockStatement',\n        BinaryExpression: 'BinaryExpression',\n        BreakStatement: 'BreakStatement',\n        CallExpression: 'CallExpression',\n        CatchClause: 'CatchClause',\n        ChainExpression: 'ChainExpression',\n        ClassBody: 'ClassBody',\n        ClassDeclaration: 'ClassDeclaration',\n        ClassExpression: 'ClassExpression',\n        ComprehensionBlock: 'ComprehensionBlock',  // CAUTION: It's deferred to ES7.\n        ComprehensionExpression: 'ComprehensionExpression',  // CAUTION: It's deferred to ES7.\n        ConditionalExpression: 'ConditionalExpression',\n        ContinueStatement: 'ContinueStatement',\n        DebuggerStatement: 'DebuggerStatement',\n        DirectiveStatement: 'DirectiveStatement',\n        DoWhileStatement: 'DoWhileStatement',\n        EmptyStatement: 'EmptyStatement',\n        ExportAllDeclaration: 'ExportAllDeclaration',\n        ExportDefaultDeclaration: 'ExportDefaultDeclaration',\n        ExportNamedDeclaration: 'ExportNamedDeclaration',\n        ExportSpecifier: 'ExportSpecifier',\n        ExpressionStatement: 'ExpressionStatement',\n        ForStatement: 'ForStatement',\n        ForInStatement: 'ForInStatement',\n        ForOfStatement: 'ForOfStatement',\n        FunctionDeclaration: 'FunctionDeclaration',\n        FunctionExpression: 'FunctionExpression',\n        GeneratorExpression: 'GeneratorExpression',  // CAUTION: It's deferred to ES7.\n        Identifier: 'Identifier',\n        IfStatement: 'IfStatement',\n        ImportExpression: 'ImportExpression',\n        ImportDeclaration: 'ImportDeclaration',\n        ImportDefaultSpecifier: 'ImportDefaultSpecifier',\n        ImportNamespaceSpecifier: 'ImportNamespaceSpecifier',\n        ImportSpecifier: 'ImportSpecifier',\n        Literal: 'Literal',\n        LabeledStatement: 'LabeledStatement',\n        LogicalExpression: 'LogicalExpression',\n        MemberExpression: 'MemberExpression',\n        MetaProperty: 'MetaProperty',\n        MethodDefinition: 'MethodDefinition',\n        ModuleSpecifier: 'ModuleSpecifier',\n        NewExpression: 'NewExpression',\n        ObjectExpression: 'ObjectExpression',\n        ObjectPattern: 'ObjectPattern',\n        Program: 'Program',\n        Property: 'Property',\n        RestElement: 'RestElement',\n        ReturnStatement: 'ReturnStatement',\n        SequenceExpression: 'SequenceExpression',\n        SpreadElement: 'SpreadElement',\n        Super: 'Super',\n        SwitchStatement: 'SwitchStatement',\n        SwitchCase: 'SwitchCase',\n        TaggedTemplateExpression: 'TaggedTemplateExpression',\n        TemplateElement: 'TemplateElement',\n        TemplateLiteral: 'TemplateLiteral',\n        ThisExpression: 'ThisExpression',\n        ThrowStatement: 'ThrowStatement',\n        TryStatement: 'TryStatement',\n        UnaryExpression: 'UnaryExpression',\n        UpdateExpression: 'UpdateExpression',\n        VariableDeclaration: 'VariableDeclaration',\n        VariableDeclarator: 'VariableDeclarator',\n        WhileStatement: 'WhileStatement',\n        WithStatement: 'WithStatement',\n        YieldExpression: 'YieldExpression'\n    };\n\n    VisitorKeys = {\n        AssignmentExpression: ['left', 'right'],\n        AssignmentPattern: ['left', 'right'],\n        ArrayExpression: ['elements'],\n        ArrayPattern: ['elements'],\n        ArrowFunctionExpression: ['params', 'body'],\n        AwaitExpression: ['argument'], // CAUTION: It's deferred to ES7.\n        BlockStatement: ['body'],\n        BinaryExpression: ['left', 'right'],\n        BreakStatement: ['label'],\n        CallExpression: ['callee', 'arguments'],\n        CatchClause: ['param', 'body'],\n        ChainExpression: ['expression'],\n        ClassBody: ['body'],\n        ClassDeclaration: ['id', 'superClass', 'body'],\n        ClassExpression: ['id', 'superClass', 'body'],\n        ComprehensionBlock: ['left', 'right'],  // CAUTION: It's deferred to ES7.\n        ComprehensionExpression: ['blocks', 'filter', 'body'],  // CAUTION: It's deferred to ES7.\n        ConditionalExpression: ['test', 'consequent', 'alternate'],\n        ContinueStatement: ['label'],\n        DebuggerStatement: [],\n        DirectiveStatement: [],\n        DoWhileStatement: ['body', 'test'],\n        EmptyStatement: [],\n        ExportAllDeclaration: ['source'],\n        ExportDefaultDeclaration: ['declaration'],\n        ExportNamedDeclaration: ['declaration', 'specifiers', 'source'],\n        ExportSpecifier: ['exported', 'local'],\n        ExpressionStatement: ['expression'],\n        ForStatement: ['init', 'test', 'update', 'body'],\n        ForInStatement: ['left', 'right', 'body'],\n        ForOfStatement: ['left', 'right', 'body'],\n        FunctionDeclaration: ['id', 'params', 'body'],\n        FunctionExpression: ['id', 'params', 'body'],\n        GeneratorExpression: ['blocks', 'filter', 'body'],  // CAUTION: It's deferred to ES7.\n        Identifier: [],\n        IfStatement: ['test', 'consequent', 'alternate'],\n        ImportExpression: ['source'],\n        ImportDeclaration: ['specifiers', 'source'],\n        ImportDefaultSpecifier: ['local'],\n        ImportNamespaceSpecifier: ['local'],\n        ImportSpecifier: ['imported', 'local'],\n        Literal: [],\n        LabeledStatement: ['label', 'body'],\n        LogicalExpression: ['left', 'right'],\n        MemberExpression: ['object', 'property'],\n        MetaProperty: ['meta', 'property'],\n        MethodDefinition: ['key', 'value'],\n        ModuleSpecifier: [],\n        NewExpression: ['callee', 'arguments'],\n        ObjectExpression: ['properties'],\n        ObjectPattern: ['properties'],\n        Program: ['body'],\n        Property: ['key', 'value'],\n        RestElement: [ 'argument' ],\n        ReturnStatement: ['argument'],\n        SequenceExpression: ['expressions'],\n        SpreadElement: ['argument'],\n        Super: [],\n        SwitchStatement: ['discriminant', 'cases'],\n        SwitchCase: ['test', 'consequent'],\n        TaggedTemplateExpression: ['tag', 'quasi'],\n        TemplateElement: [],\n        TemplateLiteral: ['quasis', 'expressions'],\n        ThisExpression: [],\n        ThrowStatement: ['argument'],\n        TryStatement: ['block', 'handler', 'finalizer'],\n        UnaryExpression: ['argument'],\n        UpdateExpression: ['argument'],\n        VariableDeclaration: ['declarations'],\n        VariableDeclarator: ['id', 'init'],\n        WhileStatement: ['test', 'body'],\n        WithStatement: ['object', 'body'],\n        YieldExpression: ['argument']\n    };\n\n    // unique id\n    BREAK = {};\n    SKIP = {};\n    REMOVE = {};\n\n    VisitorOption = {\n        Break: BREAK,\n        Skip: SKIP,\n        Remove: REMOVE\n    };\n\n    function Reference(parent, key) {\n        this.parent = parent;\n        this.key = key;\n    }\n\n    Reference.prototype.replace = function replace(node) {\n        this.parent[this.key] = node;\n    };\n\n    Reference.prototype.remove = function remove() {\n        if (Array.isArray(this.parent)) {\n            this.parent.splice(this.key, 1);\n            return true;\n        } else {\n            this.replace(null);\n            return false;\n        }\n    };\n\n    function Element(node, path, wrap, ref) {\n        this.node = node;\n        this.path = path;\n        this.wrap = wrap;\n        this.ref = ref;\n    }\n\n    function Controller() { }\n\n    // API:\n    // return property path array from root to current node\n    Controller.prototype.path = function path() {\n        var i, iz, j, jz, result, element;\n\n        function addToPath(result, path) {\n            if (Array.isArray(path)) {\n                for (j = 0, jz = path.length; j < jz; ++j) {\n                    result.push(path[j]);\n                }\n            } else {\n                result.push(path);\n            }\n        }\n\n        // root node\n        if (!this.__current.path) {\n            return null;\n        }\n\n        // first node is sentinel, second node is root element\n        result = [];\n        for (i = 2, iz = this.__leavelist.length; i < iz; ++i) {\n            element = this.__leavelist[i];\n            addToPath(result, element.path);\n        }\n        addToPath(result, this.__current.path);\n        return result;\n    };\n\n    // API:\n    // return type of current node\n    Controller.prototype.type = function () {\n        var node = this.current();\n        return node.type || this.__current.wrap;\n    };\n\n    // API:\n    // return array of parent elements\n    Controller.prototype.parents = function parents() {\n        var i, iz, result;\n\n        // first node is sentinel\n        result = [];\n        for (i = 1, iz = this.__leavelist.length; i < iz; ++i) {\n            result.push(this.__leavelist[i].node);\n        }\n\n        return result;\n    };\n\n    // API:\n    // return current node\n    Controller.prototype.current = function current() {\n        return this.__current.node;\n    };\n\n    Controller.prototype.__execute = function __execute(callback, element) {\n        var previous, result;\n\n        result = undefined;\n\n        previous  = this.__current;\n        this.__current = element;\n        this.__state = null;\n        if (callback) {\n            result = callback.call(this, element.node, this.__leavelist[this.__leavelist.length - 1].node);\n        }\n        this.__current = previous;\n\n        return result;\n    };\n\n    // API:\n    // notify control skip / break\n    Controller.prototype.notify = function notify(flag) {\n        this.__state = flag;\n    };\n\n    // API:\n    // skip child nodes of current node\n    Controller.prototype.skip = function () {\n        this.notify(SKIP);\n    };\n\n    // API:\n    // break traversals\n    Controller.prototype['break'] = function () {\n        this.notify(BREAK);\n    };\n\n    // API:\n    // remove node\n    Controller.prototype.remove = function () {\n        this.notify(REMOVE);\n    };\n\n    Controller.prototype.__initialize = function(root, visitor) {\n        this.visitor = visitor;\n        this.root = root;\n        this.__worklist = [];\n        this.__leavelist = [];\n        this.__current = null;\n        this.__state = null;\n        this.__fallback = null;\n        if (visitor.fallback === 'iteration') {\n            this.__fallback = Object.keys;\n        } else if (typeof visitor.fallback === 'function') {\n            this.__fallback = visitor.fallback;\n        }\n\n        this.__keys = VisitorKeys;\n        if (visitor.keys) {\n            this.__keys = Object.assign(Object.create(this.__keys), visitor.keys);\n        }\n    };\n\n    function isNode(node) {\n        if (node == null) {\n            return false;\n        }\n        return typeof node === 'object' && typeof node.type === 'string';\n    }\n\n    function isProperty(nodeType, key) {\n        return (nodeType === Syntax.ObjectExpression || nodeType === Syntax.ObjectPattern) && 'properties' === key;\n    }\n  \n    function candidateExistsInLeaveList(leavelist, candidate) {\n        for (var i = leavelist.length - 1; i >= 0; --i) {\n            if (leavelist[i].node === candidate) {\n                return true;\n            }\n        }\n        return false;\n    }\n\n    Controller.prototype.traverse = function traverse(root, visitor) {\n        var worklist,\n            leavelist,\n            element,\n            node,\n            nodeType,\n            ret,\n            key,\n            current,\n            current2,\n            candidates,\n            candidate,\n            sentinel;\n\n        this.__initialize(root, visitor);\n\n        sentinel = {};\n\n        // reference\n        worklist = this.__worklist;\n        leavelist = this.__leavelist;\n\n        // initialize\n        worklist.push(new Element(root, null, null, null));\n        leavelist.push(new Element(null, null, null, null));\n\n        while (worklist.length) {\n            element = worklist.pop();\n\n            if (element === sentinel) {\n                element = leavelist.pop();\n\n                ret = this.__execute(visitor.leave, element);\n\n                if (this.__state === BREAK || ret === BREAK) {\n                    return;\n                }\n                continue;\n            }\n\n            if (element.node) {\n\n                ret = this.__execute(visitor.enter, element);\n\n                if (this.__state === BREAK || ret === BREAK) {\n                    return;\n                }\n\n                worklist.push(sentinel);\n                leavelist.push(element);\n\n                if (this.__state === SKIP || ret === SKIP) {\n                    continue;\n                }\n\n                node = element.node;\n                nodeType = node.type || element.wrap;\n                candidates = this.__keys[nodeType];\n                if (!candidates) {\n                    if (this.__fallback) {\n                        candidates = this.__fallback(node);\n                    } else {\n                        throw new Error('Unknown node type ' + nodeType + '.');\n                    }\n                }\n\n                current = candidates.length;\n                while ((current -= 1) >= 0) {\n                    key = candidates[current];\n                    candidate = node[key];\n                    if (!candidate) {\n                        continue;\n                    }\n\n                    if (Array.isArray(candidate)) {\n                        current2 = candidate.length;\n                        while ((current2 -= 1) >= 0) {\n                            if (!candidate[current2]) {\n                                continue;\n                            }\n\n                            if (candidateExistsInLeaveList(leavelist, candidate[current2])) {\n                              continue;\n                            }\n\n                            if (isProperty(nodeType, candidates[current])) {\n                                element = new Element(candidate[current2], [key, current2], 'Property', null);\n                            } else if (isNode(candidate[current2])) {\n                                element = new Element(candidate[current2], [key, current2], null, null);\n                            } else {\n                                continue;\n                            }\n                            worklist.push(element);\n                        }\n                    } else if (isNode(candidate)) {\n                        if (candidateExistsInLeaveList(leavelist, candidate)) {\n                          continue;\n                        }\n\n                        worklist.push(new Element(candidate, key, null, null));\n                    }\n                }\n            }\n        }\n    };\n\n    Controller.prototype.replace = function replace(root, visitor) {\n        var worklist,\n            leavelist,\n            node,\n            nodeType,\n            target,\n            element,\n            current,\n            current2,\n            candidates,\n            candidate,\n            sentinel,\n            outer,\n            key;\n\n        function removeElem(element) {\n            var i,\n                key,\n                nextElem,\n                parent;\n\n            if (element.ref.remove()) {\n                // When the reference is an element of an array.\n                key = element.ref.key;\n                parent = element.ref.parent;\n\n                // If removed from array, then decrease following items' keys.\n                i = worklist.length;\n                while (i--) {\n                    nextElem = worklist[i];\n                    if (nextElem.ref && nextElem.ref.parent === parent) {\n                        if  (nextElem.ref.key < key) {\n                            break;\n                        }\n                        --nextElem.ref.key;\n                    }\n                }\n            }\n        }\n\n        this.__initialize(root, visitor);\n\n        sentinel = {};\n\n        // reference\n        worklist = this.__worklist;\n        leavelist = this.__leavelist;\n\n        // initialize\n        outer = {\n            root: root\n        };\n        element = new Element(root, null, null, new Reference(outer, 'root'));\n        worklist.push(element);\n        leavelist.push(element);\n\n        while (worklist.length) {\n            element = worklist.pop();\n\n            if (element === sentinel) {\n                element = leavelist.pop();\n\n                target = this.__execute(visitor.leave, element);\n\n                // node may be replaced with null,\n                // so distinguish between undefined and null in this place\n                if (target !== undefined && target !== BREAK && target !== SKIP && target !== REMOVE) {\n                    // replace\n                    element.ref.replace(target);\n                }\n\n                if (this.__state === REMOVE || target === REMOVE) {\n                    removeElem(element);\n                }\n\n                if (this.__state === BREAK || target === BREAK) {\n                    return outer.root;\n                }\n                continue;\n            }\n\n            target = this.__execute(visitor.enter, element);\n\n            // node may be replaced with null,\n            // so distinguish between undefined and null in this place\n            if (target !== undefined && target !== BREAK && target !== SKIP && target !== REMOVE) {\n                // replace\n                element.ref.replace(target);\n                element.node = target;\n            }\n\n            if (this.__state === REMOVE || target === REMOVE) {\n                removeElem(element);\n                element.node = null;\n            }\n\n            if (this.__state === BREAK || target === BREAK) {\n                return outer.root;\n            }\n\n            // node may be null\n            node = element.node;\n            if (!node) {\n                continue;\n            }\n\n            worklist.push(sentinel);\n            leavelist.push(element);\n\n            if (this.__state === SKIP || target === SKIP) {\n                continue;\n            }\n\n            nodeType = node.type || element.wrap;\n            candidates = this.__keys[nodeType];\n            if (!candidates) {\n                if (this.__fallback) {\n                    candidates = this.__fallback(node);\n                } else {\n                    throw new Error('Unknown node type ' + nodeType + '.');\n                }\n            }\n\n            current = candidates.length;\n            while ((current -= 1) >= 0) {\n                key = candidates[current];\n                candidate = node[key];\n                if (!candidate) {\n                    continue;\n                }\n\n                if (Array.isArray(candidate)) {\n                    current2 = candidate.length;\n                    while ((current2 -= 1) >= 0) {\n                        if (!candidate[current2]) {\n                            continue;\n                        }\n                        if (isProperty(nodeType, candidates[current])) {\n                            element = new Element(candidate[current2], [key, current2], 'Property', new Reference(candidate, current2));\n                        } else if (isNode(candidate[current2])) {\n                            element = new Element(candidate[current2], [key, current2], null, new Reference(candidate, current2));\n                        } else {\n                            continue;\n                        }\n                        worklist.push(element);\n                    }\n                } else if (isNode(candidate)) {\n                    worklist.push(new Element(candidate, key, null, new Reference(node, key)));\n                }\n            }\n        }\n\n        return outer.root;\n    };\n\n    function traverse(root, visitor) {\n        var controller = new Controller();\n        return controller.traverse(root, visitor);\n    }\n\n    function replace(root, visitor) {\n        var controller = new Controller();\n        return controller.replace(root, visitor);\n    }\n\n    function extendCommentRange(comment, tokens) {\n        var target;\n\n        target = upperBound(tokens, function search(token) {\n            return token.range[0] > comment.range[0];\n        });\n\n        comment.extendedRange = [comment.range[0], comment.range[1]];\n\n        if (target !== tokens.length) {\n            comment.extendedRange[1] = tokens[target].range[0];\n        }\n\n        target -= 1;\n        if (target >= 0) {\n            comment.extendedRange[0] = tokens[target].range[1];\n        }\n\n        return comment;\n    }\n\n    function attachComments(tree, providedComments, tokens) {\n        // At first, we should calculate extended comment ranges.\n        var comments = [], comment, len, i, cursor;\n\n        if (!tree.range) {\n            throw new Error('attachComments needs range information');\n        }\n\n        // tokens array is empty, we attach comments to tree as 'leadingComments'\n        if (!tokens.length) {\n            if (providedComments.length) {\n                for (i = 0, len = providedComments.length; i < len; i += 1) {\n                    comment = deepCopy(providedComments[i]);\n                    comment.extendedRange = [0, tree.range[0]];\n                    comments.push(comment);\n                }\n                tree.leadingComments = comments;\n            }\n            return tree;\n        }\n\n        for (i = 0, len = providedComments.length; i < len; i += 1) {\n            comments.push(extendCommentRange(deepCopy(providedComments[i]), tokens));\n        }\n\n        // This is based on John Freeman's implementation.\n        cursor = 0;\n        traverse(tree, {\n            enter: function (node) {\n                var comment;\n\n                while (cursor < comments.length) {\n                    comment = comments[cursor];\n                    if (comment.extendedRange[1] > node.range[0]) {\n                        break;\n                    }\n\n                    if (comment.extendedRange[1] === node.range[0]) {\n                        if (!node.leadingComments) {\n                            node.leadingComments = [];\n                        }\n                        node.leadingComments.push(comment);\n                        comments.splice(cursor, 1);\n                    } else {\n                        cursor += 1;\n                    }\n                }\n\n                // already out of owned node\n                if (cursor === comments.length) {\n                    return VisitorOption.Break;\n                }\n\n                if (comments[cursor].extendedRange[0] > node.range[1]) {\n                    return VisitorOption.Skip;\n                }\n            }\n        });\n\n        cursor = 0;\n        traverse(tree, {\n            leave: function (node) {\n                var comment;\n\n                while (cursor < comments.length) {\n                    comment = comments[cursor];\n                    if (node.range[1] < comment.extendedRange[0]) {\n                        break;\n                    }\n\n                    if (node.range[1] === comment.extendedRange[0]) {\n                        if (!node.trailingComments) {\n                            node.trailingComments = [];\n                        }\n                        node.trailingComments.push(comment);\n                        comments.splice(cursor, 1);\n                    } else {\n                        cursor += 1;\n                    }\n                }\n\n                // already out of owned node\n                if (cursor === comments.length) {\n                    return VisitorOption.Break;\n                }\n\n                if (comments[cursor].extendedRange[0] > node.range[1]) {\n                    return VisitorOption.Skip;\n                }\n            }\n        });\n\n        return tree;\n    }\n\n    exports.Syntax = Syntax;\n    exports.traverse = traverse;\n    exports.replace = replace;\n    exports.attachComments = attachComments;\n    exports.VisitorKeys = VisitorKeys;\n    exports.VisitorOption = VisitorOption;\n    exports.Controller = Controller;\n    exports.cloneEnvironment = function () { return clone({}); };\n\n    return exports;\n}(exports));\n/* vim: set sw=4 ts=4 et tw=80 : */\n", "/*\n * Generated by PEG.js 0.10.0.\n *\n * http://pegjs.org/\n */\n(function(root, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    define([], factory);\n  } else if (typeof module === \"object\" && module.exports) {\n    module.exports = factory();\n  }\n})(this, function() {\n  \"use strict\";\n\n  function peg$subclass(child, parent) {\n    function ctor() { this.constructor = child; }\n    ctor.prototype = parent.prototype;\n    child.prototype = new ctor();\n  }\n\n  function peg$SyntaxError(message, expected, found, location) {\n    this.message  = message;\n    this.expected = expected;\n    this.found    = found;\n    this.location = location;\n    this.name     = \"SyntaxError\";\n\n    if (typeof Error.captureStackTrace === \"function\") {\n      Error.captureStackTrace(this, peg$SyntaxError);\n    }\n  }\n\n  peg$subclass(peg$SyntaxError, Error);\n\n  peg$SyntaxError.buildMessage = function(expected, found) {\n    var DESCRIBE_EXPECTATION_FNS = {\n          literal: function(expectation) {\n            return \"\\\"\" + literalEscape(expectation.text) + \"\\\"\";\n          },\n\n          \"class\": function(expectation) {\n            var escapedParts = \"\",\n                i;\n\n            for (i = 0; i < expectation.parts.length; i++) {\n              escapedParts += expectation.parts[i] instanceof Array\n                ? classEscape(expectation.parts[i][0]) + \"-\" + classEscape(expectation.parts[i][1])\n                : classEscape(expectation.parts[i]);\n            }\n\n            return \"[\" + (expectation.inverted ? \"^\" : \"\") + escapedParts + \"]\";\n          },\n\n          any: function(expectation) {\n            return \"any character\";\n          },\n\n          end: function(expectation) {\n            return \"end of input\";\n          },\n\n          other: function(expectation) {\n            return expectation.description;\n          }\n        };\n\n    function hex(ch) {\n      return ch.charCodeAt(0).toString(16).toUpperCase();\n    }\n\n    function literalEscape(s) {\n      return s\n        .replace(/\\\\/g, '\\\\\\\\')\n        .replace(/\"/g,  '\\\\\"')\n        .replace(/\\0/g, '\\\\0')\n        .replace(/\\t/g, '\\\\t')\n        .replace(/\\n/g, '\\\\n')\n        .replace(/\\r/g, '\\\\r')\n        .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n        .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n    }\n\n    function classEscape(s) {\n      return s\n        .replace(/\\\\/g, '\\\\\\\\')\n        .replace(/\\]/g, '\\\\]')\n        .replace(/\\^/g, '\\\\^')\n        .replace(/-/g,  '\\\\-')\n        .replace(/\\0/g, '\\\\0')\n        .replace(/\\t/g, '\\\\t')\n        .replace(/\\n/g, '\\\\n')\n        .replace(/\\r/g, '\\\\r')\n        .replace(/[\\x00-\\x0F]/g,          function(ch) { return '\\\\x0' + hex(ch); })\n        .replace(/[\\x10-\\x1F\\x7F-\\x9F]/g, function(ch) { return '\\\\x'  + hex(ch); });\n    }\n\n    function describeExpectation(expectation) {\n      return DESCRIBE_EXPECTATION_FNS[expectation.type](expectation);\n    }\n\n    function describeExpected(expected) {\n      var descriptions = new Array(expected.length),\n          i, j;\n\n      for (i = 0; i < expected.length; i++) {\n        descriptions[i] = describeExpectation(expected[i]);\n      }\n\n      descriptions.sort();\n\n      if (descriptions.length > 0) {\n        for (i = 1, j = 1; i < descriptions.length; i++) {\n          if (descriptions[i - 1] !== descriptions[i]) {\n            descriptions[j] = descriptions[i];\n            j++;\n          }\n        }\n        descriptions.length = j;\n      }\n\n      switch (descriptions.length) {\n        case 1:\n          return descriptions[0];\n\n        case 2:\n          return descriptions[0] + \" or \" + descriptions[1];\n\n        default:\n          return descriptions.slice(0, -1).join(\", \")\n            + \", or \"\n            + descriptions[descriptions.length - 1];\n      }\n    }\n\n    function describeFound(found) {\n      return found ? \"\\\"\" + literalEscape(found) + \"\\\"\" : \"end of input\";\n    }\n\n    return \"Expected \" + describeExpected(expected) + \" but \" + describeFound(found) + \" found.\";\n  };\n\n  function peg$parse(input, options) {\n    options = options !== void 0 ? options : {};\n\n    var peg$FAILED = {},\n\n        peg$startRuleFunctions = { start: peg$parsestart },\n        peg$startRuleFunction  = peg$parsestart,\n\n        peg$c0 = function(ss) {\n            return ss.length === 1 ? ss[0] : { type: 'matches', selectors: ss };\n          },\n        peg$c1 = function() { return void 0; },\n        peg$c2 = \" \",\n        peg$c3 = peg$literalExpectation(\" \", false),\n        peg$c4 = /^[^ [\\],():#!=><~+.]/,\n        peg$c5 = peg$classExpectation([\" \", \"[\", \"]\", \",\", \"(\", \")\", \":\", \"#\", \"!\", \"=\", \">\", \"<\", \"~\", \"+\", \".\"], true, false),\n        peg$c6 = function(i) { return i.join(''); },\n        peg$c7 = \">\",\n        peg$c8 = peg$literalExpectation(\">\", false),\n        peg$c9 = function() { return 'child'; },\n        peg$c10 = \"~\",\n        peg$c11 = peg$literalExpectation(\"~\", false),\n        peg$c12 = function() { return 'sibling'; },\n        peg$c13 = \"+\",\n        peg$c14 = peg$literalExpectation(\"+\", false),\n        peg$c15 = function() { return 'adjacent'; },\n        peg$c16 = function() { return 'descendant'; },\n        peg$c17 = \",\",\n        peg$c18 = peg$literalExpectation(\",\", false),\n        peg$c19 = function(s, ss) {\n          return [s].concat(ss.map(function (s) { return s[3]; }));\n        },\n        peg$c20 = function(a, ops) {\n            return ops.reduce(function (memo, rhs) {\n              return { type: rhs[0], left: memo, right: rhs[1] };\n            }, a);\n          },\n        peg$c21 = \"!\",\n        peg$c22 = peg$literalExpectation(\"!\", false),\n        peg$c23 = function(subject, as) {\n            const b = as.length === 1 ? as[0] : { type: 'compound', selectors: as };\n            if(subject) b.subject = true;\n            return b;\n          },\n        peg$c24 = \"*\",\n        peg$c25 = peg$literalExpectation(\"*\", false),\n        peg$c26 = function(a) { return { type: 'wildcard', value: a }; },\n        peg$c27 = \"#\",\n        peg$c28 = peg$literalExpectation(\"#\", false),\n        peg$c29 = function(i) { return { type: 'identifier', value: i }; },\n        peg$c30 = \"[\",\n        peg$c31 = peg$literalExpectation(\"[\", false),\n        peg$c32 = \"]\",\n        peg$c33 = peg$literalExpectation(\"]\", false),\n        peg$c34 = function(v) { return v; },\n        peg$c35 = /^[><!]/,\n        peg$c36 = peg$classExpectation([\">\", \"<\", \"!\"], false, false),\n        peg$c37 = \"=\",\n        peg$c38 = peg$literalExpectation(\"=\", false),\n        peg$c39 = function(a) { return (a || '') + '='; },\n        peg$c40 = /^[><]/,\n        peg$c41 = peg$classExpectation([\">\", \"<\"], false, false),\n        peg$c42 = \".\",\n        peg$c43 = peg$literalExpectation(\".\", false),\n        peg$c44 = function(a, as) {\n            return [].concat.apply([a], as).join('');\n          },\n        peg$c45 = function(name, op, value) {\n              return { type: 'attribute', name: name, operator: op, value: value };\n            },\n        peg$c46 = function(name) { return { type: 'attribute', name: name }; },\n        peg$c47 = \"\\\"\",\n        peg$c48 = peg$literalExpectation(\"\\\"\", false),\n        peg$c49 = /^[^\\\\\"]/,\n        peg$c50 = peg$classExpectation([\"\\\\\", \"\\\"\"], true, false),\n        peg$c51 = \"\\\\\",\n        peg$c52 = peg$literalExpectation(\"\\\\\", false),\n        peg$c53 = peg$anyExpectation(),\n        peg$c54 = function(a, b) { return a + b; },\n        peg$c55 = function(d) {\n                return { type: 'literal', value: strUnescape(d.join('')) };\n              },\n        peg$c56 = \"'\",\n        peg$c57 = peg$literalExpectation(\"'\", false),\n        peg$c58 = /^[^\\\\']/,\n        peg$c59 = peg$classExpectation([\"\\\\\", \"'\"], true, false),\n        peg$c60 = /^[0-9]/,\n        peg$c61 = peg$classExpectation([[\"0\", \"9\"]], false, false),\n        peg$c62 = function(a, b) {\n                // Can use `a.flat().join('')` once supported\n                const leadingDecimals = a ? [].concat.apply([], a).join('') : '';\n                return { type: 'literal', value: parseFloat(leadingDecimals + b.join('')) };\n              },\n        peg$c63 = function(i) { return { type: 'literal', value: i }; },\n        peg$c64 = \"type(\",\n        peg$c65 = peg$literalExpectation(\"type(\", false),\n        peg$c66 = /^[^ )]/,\n        peg$c67 = peg$classExpectation([\" \", \")\"], true, false),\n        peg$c68 = \")\",\n        peg$c69 = peg$literalExpectation(\")\", false),\n        peg$c70 = function(t) { return { type: 'type', value: t.join('') }; },\n        peg$c71 = /^[imsu]/,\n        peg$c72 = peg$classExpectation([\"i\", \"m\", \"s\", \"u\"], false, false),\n        peg$c73 = \"/\",\n        peg$c74 = peg$literalExpectation(\"/\", false),\n        peg$c75 = /^[^\\/]/,\n        peg$c76 = peg$classExpectation([\"/\"], true, false),\n        peg$c77 = function(d, flgs) { return {\n              type: 'regexp', value: new RegExp(d.join(''), flgs ? flgs.join('') : '') };\n            },\n        peg$c78 = function(i, is) {\n          return { type: 'field', name: is.reduce(function(memo, p){ return memo + p[0] + p[1]; }, i)};\n        },\n        peg$c79 = \":not(\",\n        peg$c80 = peg$literalExpectation(\":not(\", false),\n        peg$c81 = function(ss) { return { type: 'not', selectors: ss }; },\n        peg$c82 = \":matches(\",\n        peg$c83 = peg$literalExpectation(\":matches(\", false),\n        peg$c84 = function(ss) { return { type: 'matches', selectors: ss }; },\n        peg$c85 = \":has(\",\n        peg$c86 = peg$literalExpectation(\":has(\", false),\n        peg$c87 = function(ss) { return { type: 'has', selectors: ss }; },\n        peg$c88 = \":first-child\",\n        peg$c89 = peg$literalExpectation(\":first-child\", false),\n        peg$c90 = function() { return nth(1); },\n        peg$c91 = \":last-child\",\n        peg$c92 = peg$literalExpectation(\":last-child\", false),\n        peg$c93 = function() { return nthLast(1); },\n        peg$c94 = \":nth-child(\",\n        peg$c95 = peg$literalExpectation(\":nth-child(\", false),\n        peg$c96 = function(n) { return nth(parseInt(n.join(''), 10)); },\n        peg$c97 = \":nth-last-child(\",\n        peg$c98 = peg$literalExpectation(\":nth-last-child(\", false),\n        peg$c99 = function(n) { return nthLast(parseInt(n.join(''), 10)); },\n        peg$c100 = \":\",\n        peg$c101 = peg$literalExpectation(\":\", false),\n        peg$c102 = \"statement\",\n        peg$c103 = peg$literalExpectation(\"statement\", true),\n        peg$c104 = \"expression\",\n        peg$c105 = peg$literalExpectation(\"expression\", true),\n        peg$c106 = \"declaration\",\n        peg$c107 = peg$literalExpectation(\"declaration\", true),\n        peg$c108 = \"function\",\n        peg$c109 = peg$literalExpectation(\"function\", true),\n        peg$c110 = \"pattern\",\n        peg$c111 = peg$literalExpectation(\"pattern\", true),\n        peg$c112 = function(c) {\n          return { type: 'class', name: c };\n        },\n\n        peg$currPos          = 0,\n        peg$savedPos         = 0,\n        peg$posDetailsCache  = [{ line: 1, column: 1 }],\n        peg$maxFailPos       = 0,\n        peg$maxFailExpected  = [],\n        peg$silentFails      = 0,\n\n        peg$resultsCache = {},\n\n        peg$result;\n\n    if (\"startRule\" in options) {\n      if (!(options.startRule in peg$startRuleFunctions)) {\n        throw new Error(\"Can't start parsing from rule \\\"\" + options.startRule + \"\\\".\");\n      }\n\n      peg$startRuleFunction = peg$startRuleFunctions[options.startRule];\n    }\n\n    function text() {\n      return input.substring(peg$savedPos, peg$currPos);\n    }\n\n    function location() {\n      return peg$computeLocation(peg$savedPos, peg$currPos);\n    }\n\n    function expected(description, location) {\n      location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n      throw peg$buildStructuredError(\n        [peg$otherExpectation(description)],\n        input.substring(peg$savedPos, peg$currPos),\n        location\n      );\n    }\n\n    function error(message, location) {\n      location = location !== void 0 ? location : peg$computeLocation(peg$savedPos, peg$currPos)\n\n      throw peg$buildSimpleError(message, location);\n    }\n\n    function peg$literalExpectation(text, ignoreCase) {\n      return { type: \"literal\", text: text, ignoreCase: ignoreCase };\n    }\n\n    function peg$classExpectation(parts, inverted, ignoreCase) {\n      return { type: \"class\", parts: parts, inverted: inverted, ignoreCase: ignoreCase };\n    }\n\n    function peg$anyExpectation() {\n      return { type: \"any\" };\n    }\n\n    function peg$endExpectation() {\n      return { type: \"end\" };\n    }\n\n    function peg$otherExpectation(description) {\n      return { type: \"other\", description: description };\n    }\n\n    function peg$computePosDetails(pos) {\n      var details = peg$posDetailsCache[pos], p;\n\n      if (details) {\n        return details;\n      } else {\n        p = pos - 1;\n        while (!peg$posDetailsCache[p]) {\n          p--;\n        }\n\n        details = peg$posDetailsCache[p];\n        details = {\n          line:   details.line,\n          column: details.column\n        };\n\n        while (p < pos) {\n          if (input.charCodeAt(p) === 10) {\n            details.line++;\n            details.column = 1;\n          } else {\n            details.column++;\n          }\n\n          p++;\n        }\n\n        peg$posDetailsCache[pos] = details;\n        return details;\n      }\n    }\n\n    function peg$computeLocation(startPos, endPos) {\n      var startPosDetails = peg$computePosDetails(startPos),\n          endPosDetails   = peg$computePosDetails(endPos);\n\n      return {\n        start: {\n          offset: startPos,\n          line:   startPosDetails.line,\n          column: startPosDetails.column\n        },\n        end: {\n          offset: endPos,\n          line:   endPosDetails.line,\n          column: endPosDetails.column\n        }\n      };\n    }\n\n    function peg$fail(expected) {\n      if (peg$currPos < peg$maxFailPos) { return; }\n\n      if (peg$currPos > peg$maxFailPos) {\n        peg$maxFailPos = peg$currPos;\n        peg$maxFailExpected = [];\n      }\n\n      peg$maxFailExpected.push(expected);\n    }\n\n    function peg$buildSimpleError(message, location) {\n      return new peg$SyntaxError(message, null, null, location);\n    }\n\n    function peg$buildStructuredError(expected, found, location) {\n      return new peg$SyntaxError(\n        peg$SyntaxError.buildMessage(expected, found),\n        expected,\n        found,\n        location\n      );\n    }\n\n    function peg$parsestart() {\n      var s0, s1, s2, s3;\n\n      var key    = peg$currPos * 30 + 0,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      s1 = peg$parse_();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseselectors();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parse_();\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c0(s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parse_();\n        if (s1 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c1();\n        }\n        s0 = s1;\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parse_() {\n      var s0, s1;\n\n      var key    = peg$currPos * 30 + 1,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = [];\n      if (input.charCodeAt(peg$currPos) === 32) {\n        s1 = peg$c2;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c3); }\n      }\n      while (s1 !== peg$FAILED) {\n        s0.push(s1);\n        if (input.charCodeAt(peg$currPos) === 32) {\n          s1 = peg$c2;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c3); }\n        }\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseidentifierName() {\n      var s0, s1, s2;\n\n      var key    = peg$currPos * 30 + 2,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      s1 = [];\n      if (peg$c4.test(input.charAt(peg$currPos))) {\n        s2 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s2 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c5); }\n      }\n      if (s2 !== peg$FAILED) {\n        while (s2 !== peg$FAILED) {\n          s1.push(s2);\n          if (peg$c4.test(input.charAt(peg$currPos))) {\n            s2 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c5); }\n          }\n        }\n      } else {\n        s1 = peg$FAILED;\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c6(s1);\n      }\n      s0 = s1;\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsebinaryOp() {\n      var s0, s1, s2, s3;\n\n      var key    = peg$currPos * 30 + 3,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      s1 = peg$parse_();\n      if (s1 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 62) {\n          s2 = peg$c7;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c8); }\n        }\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parse_();\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c9();\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parse_();\n        if (s1 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 126) {\n            s2 = peg$c10;\n            peg$currPos++;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c11); }\n          }\n          if (s2 !== peg$FAILED) {\n            s3 = peg$parse_();\n            if (s3 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c12();\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          s1 = peg$parse_();\n          if (s1 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 43) {\n              s2 = peg$c13;\n              peg$currPos++;\n            } else {\n              s2 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c14); }\n            }\n            if (s2 !== peg$FAILED) {\n              s3 = peg$parse_();\n              if (s3 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c15();\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n          if (s0 === peg$FAILED) {\n            s0 = peg$currPos;\n            if (input.charCodeAt(peg$currPos) === 32) {\n              s1 = peg$c2;\n              peg$currPos++;\n            } else {\n              s1 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c3); }\n            }\n            if (s1 !== peg$FAILED) {\n              s2 = peg$parse_();\n              if (s2 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c16();\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          }\n        }\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseselectors() {\n      var s0, s1, s2, s3, s4, s5, s6, s7;\n\n      var key    = peg$currPos * 30 + 4,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      s1 = peg$parseselector();\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$currPos;\n        s4 = peg$parse_();\n        if (s4 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 44) {\n            s5 = peg$c17;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c18); }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parse_();\n            if (s6 !== peg$FAILED) {\n              s7 = peg$parseselector();\n              if (s7 !== peg$FAILED) {\n                s4 = [s4, s5, s6, s7];\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$currPos;\n          s4 = peg$parse_();\n          if (s4 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 44) {\n              s5 = peg$c17;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c18); }\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parse_();\n              if (s6 !== peg$FAILED) {\n                s7 = peg$parseselector();\n                if (s7 !== peg$FAILED) {\n                  s4 = [s4, s5, s6, s7];\n                  s3 = s4;\n                } else {\n                  peg$currPos = s3;\n                  s3 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c19(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseselector() {\n      var s0, s1, s2, s3, s4, s5;\n\n      var key    = peg$currPos * 30 + 5,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      s1 = peg$parsesequence();\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$currPos;\n        s4 = peg$parsebinaryOp();\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parsesequence();\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$currPos;\n          s4 = peg$parsebinaryOp();\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parsesequence();\n            if (s5 !== peg$FAILED) {\n              s4 = [s4, s5];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c20(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsesequence() {\n      var s0, s1, s2, s3;\n\n      var key    = peg$currPos * 30 + 6,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 33) {\n        s1 = peg$c21;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c22); }\n      }\n      if (s1 === peg$FAILED) {\n        s1 = null;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$parseatom();\n        if (s3 !== peg$FAILED) {\n          while (s3 !== peg$FAILED) {\n            s2.push(s3);\n            s3 = peg$parseatom();\n          }\n        } else {\n          s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c23(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseatom() {\n      var s0;\n\n      var key    = peg$currPos * 30 + 7,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$parsewildcard();\n      if (s0 === peg$FAILED) {\n        s0 = peg$parseidentifier();\n        if (s0 === peg$FAILED) {\n          s0 = peg$parseattr();\n          if (s0 === peg$FAILED) {\n            s0 = peg$parsefield();\n            if (s0 === peg$FAILED) {\n              s0 = peg$parsenegation();\n              if (s0 === peg$FAILED) {\n                s0 = peg$parsematches();\n                if (s0 === peg$FAILED) {\n                  s0 = peg$parsehas();\n                  if (s0 === peg$FAILED) {\n                    s0 = peg$parsefirstChild();\n                    if (s0 === peg$FAILED) {\n                      s0 = peg$parselastChild();\n                      if (s0 === peg$FAILED) {\n                        s0 = peg$parsenthChild();\n                        if (s0 === peg$FAILED) {\n                          s0 = peg$parsenthLastChild();\n                          if (s0 === peg$FAILED) {\n                            s0 = peg$parseclass();\n                          }\n                        }\n                      }\n                    }\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsewildcard() {\n      var s0, s1;\n\n      var key    = peg$currPos * 30 + 8,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 42) {\n        s1 = peg$c24;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c25); }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c26(s1);\n      }\n      s0 = s1;\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseidentifier() {\n      var s0, s1, s2;\n\n      var key    = peg$currPos * 30 + 9,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 35) {\n        s1 = peg$c27;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c28); }\n      }\n      if (s1 === peg$FAILED) {\n        s1 = null;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseidentifierName();\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c29(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseattr() {\n      var s0, s1, s2, s3, s4, s5;\n\n      var key    = peg$currPos * 30 + 10,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 91) {\n        s1 = peg$c30;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c31); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseattrValue();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 93) {\n                s5 = peg$c32;\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c33); }\n              }\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c34(s3);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseattrOps() {\n      var s0, s1, s2;\n\n      var key    = peg$currPos * 30 + 11,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (peg$c35.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c36); }\n      }\n      if (s1 === peg$FAILED) {\n        s1 = null;\n      }\n      if (s1 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 61) {\n          s2 = peg$c37;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c38); }\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c39(s1);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        if (peg$c40.test(input.charAt(peg$currPos))) {\n          s0 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s0 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c41); }\n        }\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseattrEqOps() {\n      var s0, s1, s2;\n\n      var key    = peg$currPos * 30 + 12,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 33) {\n        s1 = peg$c21;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c22); }\n      }\n      if (s1 === peg$FAILED) {\n        s1 = null;\n      }\n      if (s1 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 61) {\n          s2 = peg$c37;\n          peg$currPos++;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c38); }\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c39(s1);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseattrName() {\n      var s0, s1, s2, s3, s4, s5;\n\n      var key    = peg$currPos * 30 + 13,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      s1 = peg$parseidentifierName();\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        s3 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 46) {\n          s4 = peg$c42;\n          peg$currPos++;\n        } else {\n          s4 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c43); }\n        }\n        if (s4 !== peg$FAILED) {\n          s5 = peg$parseidentifierName();\n          if (s5 !== peg$FAILED) {\n            s4 = [s4, s5];\n            s3 = s4;\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s3;\n          s3 = peg$FAILED;\n        }\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          s3 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 46) {\n            s4 = peg$c42;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c43); }\n          }\n          if (s4 !== peg$FAILED) {\n            s5 = peg$parseidentifierName();\n            if (s5 !== peg$FAILED) {\n              s4 = [s4, s5];\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c44(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseattrValue() {\n      var s0, s1, s2, s3, s4, s5;\n\n      var key    = peg$currPos * 30 + 14,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      s1 = peg$parseattrName();\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseattrEqOps();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n              s5 = peg$parsetype();\n              if (s5 === peg$FAILED) {\n                s5 = peg$parseregex();\n              }\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c45(s1, s3, s5);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        s1 = peg$parseattrName();\n        if (s1 !== peg$FAILED) {\n          s2 = peg$parse_();\n          if (s2 !== peg$FAILED) {\n            s3 = peg$parseattrOps();\n            if (s3 !== peg$FAILED) {\n              s4 = peg$parse_();\n              if (s4 !== peg$FAILED) {\n                s5 = peg$parsestring();\n                if (s5 === peg$FAILED) {\n                  s5 = peg$parsenumber();\n                  if (s5 === peg$FAILED) {\n                    s5 = peg$parsepath();\n                  }\n                }\n                if (s5 !== peg$FAILED) {\n                  peg$savedPos = s0;\n                  s1 = peg$c45(s1, s3, s5);\n                  s0 = s1;\n                } else {\n                  peg$currPos = s0;\n                  s0 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n        if (s0 === peg$FAILED) {\n          s0 = peg$currPos;\n          s1 = peg$parseattrName();\n          if (s1 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c46(s1);\n          }\n          s0 = s1;\n        }\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsestring() {\n      var s0, s1, s2, s3, s4, s5;\n\n      var key    = peg$currPos * 30 + 15,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 34) {\n        s1 = peg$c47;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c48); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        if (peg$c49.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c50); }\n        }\n        if (s3 === peg$FAILED) {\n          s3 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 92) {\n            s4 = peg$c51;\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c52); }\n          }\n          if (s4 !== peg$FAILED) {\n            if (input.length > peg$currPos) {\n              s5 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c53); }\n            }\n            if (s5 !== peg$FAILED) {\n              peg$savedPos = s3;\n              s4 = peg$c54(s4, s5);\n              s3 = s4;\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s3;\n            s3 = peg$FAILED;\n          }\n        }\n        while (s3 !== peg$FAILED) {\n          s2.push(s3);\n          if (peg$c49.test(input.charAt(peg$currPos))) {\n            s3 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c50); }\n          }\n          if (s3 === peg$FAILED) {\n            s3 = peg$currPos;\n            if (input.charCodeAt(peg$currPos) === 92) {\n              s4 = peg$c51;\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c52); }\n            }\n            if (s4 !== peg$FAILED) {\n              if (input.length > peg$currPos) {\n                s5 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c53); }\n              }\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s3;\n                s4 = peg$c54(s4, s5);\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 34) {\n            s3 = peg$c47;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c48); }\n          }\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c55(s2);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n      if (s0 === peg$FAILED) {\n        s0 = peg$currPos;\n        if (input.charCodeAt(peg$currPos) === 39) {\n          s1 = peg$c56;\n          peg$currPos++;\n        } else {\n          s1 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c57); }\n        }\n        if (s1 !== peg$FAILED) {\n          s2 = [];\n          if (peg$c58.test(input.charAt(peg$currPos))) {\n            s3 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c59); }\n          }\n          if (s3 === peg$FAILED) {\n            s3 = peg$currPos;\n            if (input.charCodeAt(peg$currPos) === 92) {\n              s4 = peg$c51;\n              peg$currPos++;\n            } else {\n              s4 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c52); }\n            }\n            if (s4 !== peg$FAILED) {\n              if (input.length > peg$currPos) {\n                s5 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c53); }\n              }\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s3;\n                s4 = peg$c54(s4, s5);\n                s3 = s4;\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s3;\n              s3 = peg$FAILED;\n            }\n          }\n          while (s3 !== peg$FAILED) {\n            s2.push(s3);\n            if (peg$c58.test(input.charAt(peg$currPos))) {\n              s3 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c59); }\n            }\n            if (s3 === peg$FAILED) {\n              s3 = peg$currPos;\n              if (input.charCodeAt(peg$currPos) === 92) {\n                s4 = peg$c51;\n                peg$currPos++;\n              } else {\n                s4 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c52); }\n              }\n              if (s4 !== peg$FAILED) {\n                if (input.length > peg$currPos) {\n                  s5 = input.charAt(peg$currPos);\n                  peg$currPos++;\n                } else {\n                  s5 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c53); }\n                }\n                if (s5 !== peg$FAILED) {\n                  peg$savedPos = s3;\n                  s4 = peg$c54(s4, s5);\n                  s3 = s4;\n                } else {\n                  peg$currPos = s3;\n                  s3 = peg$FAILED;\n                }\n              } else {\n                peg$currPos = s3;\n                s3 = peg$FAILED;\n              }\n            }\n          }\n          if (s2 !== peg$FAILED) {\n            if (input.charCodeAt(peg$currPos) === 39) {\n              s3 = peg$c56;\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c57); }\n            }\n            if (s3 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c55(s2);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsenumber() {\n      var s0, s1, s2, s3;\n\n      var key    = peg$currPos * 30 + 16,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      s1 = peg$currPos;\n      s2 = [];\n      if (peg$c60.test(input.charAt(peg$currPos))) {\n        s3 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s3 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c61); }\n      }\n      while (s3 !== peg$FAILED) {\n        s2.push(s3);\n        if (peg$c60.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c61); }\n        }\n      }\n      if (s2 !== peg$FAILED) {\n        if (input.charCodeAt(peg$currPos) === 46) {\n          s3 = peg$c42;\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c43); }\n        }\n        if (s3 !== peg$FAILED) {\n          s2 = [s2, s3];\n          s1 = s2;\n        } else {\n          peg$currPos = s1;\n          s1 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s1;\n        s1 = peg$FAILED;\n      }\n      if (s1 === peg$FAILED) {\n        s1 = null;\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        if (peg$c60.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c61); }\n        }\n        if (s3 !== peg$FAILED) {\n          while (s3 !== peg$FAILED) {\n            s2.push(s3);\n            if (peg$c60.test(input.charAt(peg$currPos))) {\n              s3 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c61); }\n            }\n          }\n        } else {\n          s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c62(s1, s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsepath() {\n      var s0, s1;\n\n      var key    = peg$currPos * 30 + 17,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      s1 = peg$parseidentifierName();\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c63(s1);\n      }\n      s0 = s1;\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsetype() {\n      var s0, s1, s2, s3, s4, s5;\n\n      var key    = peg$currPos * 30 + 18,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 5) === peg$c64) {\n        s1 = peg$c64;\n        peg$currPos += 5;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c65); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          if (peg$c66.test(input.charAt(peg$currPos))) {\n            s4 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c67); }\n          }\n          if (s4 !== peg$FAILED) {\n            while (s4 !== peg$FAILED) {\n              s3.push(s4);\n              if (peg$c66.test(input.charAt(peg$currPos))) {\n                s4 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s4 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c67); }\n              }\n            }\n          } else {\n            s3 = peg$FAILED;\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 41) {\n                s5 = peg$c68;\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c69); }\n              }\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c70(s3);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseflags() {\n      var s0, s1;\n\n      var key    = peg$currPos * 30 + 19,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = [];\n      if (peg$c71.test(input.charAt(peg$currPos))) {\n        s1 = input.charAt(peg$currPos);\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c72); }\n      }\n      if (s1 !== peg$FAILED) {\n        while (s1 !== peg$FAILED) {\n          s0.push(s1);\n          if (peg$c71.test(input.charAt(peg$currPos))) {\n            s1 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s1 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c72); }\n          }\n        }\n      } else {\n        s0 = peg$FAILED;\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseregex() {\n      var s0, s1, s2, s3, s4;\n\n      var key    = peg$currPos * 30 + 20,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 47) {\n        s1 = peg$c73;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c74); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = [];\n        if (peg$c75.test(input.charAt(peg$currPos))) {\n          s3 = input.charAt(peg$currPos);\n          peg$currPos++;\n        } else {\n          s3 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c76); }\n        }\n        if (s3 !== peg$FAILED) {\n          while (s3 !== peg$FAILED) {\n            s2.push(s3);\n            if (peg$c75.test(input.charAt(peg$currPos))) {\n              s3 = input.charAt(peg$currPos);\n              peg$currPos++;\n            } else {\n              s3 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c76); }\n            }\n          }\n        } else {\n          s2 = peg$FAILED;\n        }\n        if (s2 !== peg$FAILED) {\n          if (input.charCodeAt(peg$currPos) === 47) {\n            s3 = peg$c73;\n            peg$currPos++;\n          } else {\n            s3 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c74); }\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parseflags();\n            if (s4 === peg$FAILED) {\n              s4 = null;\n            }\n            if (s4 !== peg$FAILED) {\n              peg$savedPos = s0;\n              s1 = peg$c77(s2, s4);\n              s0 = s1;\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsefield() {\n      var s0, s1, s2, s3, s4, s5, s6;\n\n      var key    = peg$currPos * 30 + 21,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 46) {\n        s1 = peg$c42;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c43); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parseidentifierName();\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          s4 = peg$currPos;\n          if (input.charCodeAt(peg$currPos) === 46) {\n            s5 = peg$c42;\n            peg$currPos++;\n          } else {\n            s5 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c43); }\n          }\n          if (s5 !== peg$FAILED) {\n            s6 = peg$parseidentifierName();\n            if (s6 !== peg$FAILED) {\n              s5 = [s5, s6];\n              s4 = s5;\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s4;\n            s4 = peg$FAILED;\n          }\n          while (s4 !== peg$FAILED) {\n            s3.push(s4);\n            s4 = peg$currPos;\n            if (input.charCodeAt(peg$currPos) === 46) {\n              s5 = peg$c42;\n              peg$currPos++;\n            } else {\n              s5 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c43); }\n            }\n            if (s5 !== peg$FAILED) {\n              s6 = peg$parseidentifierName();\n              if (s6 !== peg$FAILED) {\n                s5 = [s5, s6];\n                s4 = s5;\n              } else {\n                peg$currPos = s4;\n                s4 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s4;\n              s4 = peg$FAILED;\n            }\n          }\n          if (s3 !== peg$FAILED) {\n            peg$savedPos = s0;\n            s1 = peg$c78(s2, s3);\n            s0 = s1;\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsenegation() {\n      var s0, s1, s2, s3, s4, s5;\n\n      var key    = peg$currPos * 30 + 22,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 5) === peg$c79) {\n        s1 = peg$c79;\n        peg$currPos += 5;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c80); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseselectors();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 41) {\n                s5 = peg$c68;\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c69); }\n              }\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c81(s3);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsematches() {\n      var s0, s1, s2, s3, s4, s5;\n\n      var key    = peg$currPos * 30 + 23,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 9) === peg$c82) {\n        s1 = peg$c82;\n        peg$currPos += 9;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c83); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseselectors();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 41) {\n                s5 = peg$c68;\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c69); }\n              }\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c84(s3);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsehas() {\n      var s0, s1, s2, s3, s4, s5;\n\n      var key    = peg$currPos * 30 + 24,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 5) === peg$c85) {\n        s1 = peg$c85;\n        peg$currPos += 5;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c86); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          s3 = peg$parseselectors();\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 41) {\n                s5 = peg$c68;\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c69); }\n              }\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c87(s3);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsefirstChild() {\n      var s0, s1;\n\n      var key    = peg$currPos * 30 + 25,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 12) === peg$c88) {\n        s1 = peg$c88;\n        peg$currPos += 12;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c89); }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c90();\n      }\n      s0 = s1;\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parselastChild() {\n      var s0, s1;\n\n      var key    = peg$currPos * 30 + 26,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 11) === peg$c91) {\n        s1 = peg$c91;\n        peg$currPos += 11;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c92); }\n      }\n      if (s1 !== peg$FAILED) {\n        peg$savedPos = s0;\n        s1 = peg$c93();\n      }\n      s0 = s1;\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsenthChild() {\n      var s0, s1, s2, s3, s4, s5;\n\n      var key    = peg$currPos * 30 + 27,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 11) === peg$c94) {\n        s1 = peg$c94;\n        peg$currPos += 11;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c95); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          if (peg$c60.test(input.charAt(peg$currPos))) {\n            s4 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c61); }\n          }\n          if (s4 !== peg$FAILED) {\n            while (s4 !== peg$FAILED) {\n              s3.push(s4);\n              if (peg$c60.test(input.charAt(peg$currPos))) {\n                s4 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s4 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c61); }\n              }\n            }\n          } else {\n            s3 = peg$FAILED;\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 41) {\n                s5 = peg$c68;\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c69); }\n              }\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c96(s3);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parsenthLastChild() {\n      var s0, s1, s2, s3, s4, s5;\n\n      var key    = peg$currPos * 30 + 28,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.substr(peg$currPos, 16) === peg$c97) {\n        s1 = peg$c97;\n        peg$currPos += 16;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c98); }\n      }\n      if (s1 !== peg$FAILED) {\n        s2 = peg$parse_();\n        if (s2 !== peg$FAILED) {\n          s3 = [];\n          if (peg$c60.test(input.charAt(peg$currPos))) {\n            s4 = input.charAt(peg$currPos);\n            peg$currPos++;\n          } else {\n            s4 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c61); }\n          }\n          if (s4 !== peg$FAILED) {\n            while (s4 !== peg$FAILED) {\n              s3.push(s4);\n              if (peg$c60.test(input.charAt(peg$currPos))) {\n                s4 = input.charAt(peg$currPos);\n                peg$currPos++;\n              } else {\n                s4 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c61); }\n              }\n            }\n          } else {\n            s3 = peg$FAILED;\n          }\n          if (s3 !== peg$FAILED) {\n            s4 = peg$parse_();\n            if (s4 !== peg$FAILED) {\n              if (input.charCodeAt(peg$currPos) === 41) {\n                s5 = peg$c68;\n                peg$currPos++;\n              } else {\n                s5 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c69); }\n              }\n              if (s5 !== peg$FAILED) {\n                peg$savedPos = s0;\n                s1 = peg$c99(s3);\n                s0 = s1;\n              } else {\n                peg$currPos = s0;\n                s0 = peg$FAILED;\n              }\n            } else {\n              peg$currPos = s0;\n              s0 = peg$FAILED;\n            }\n          } else {\n            peg$currPos = s0;\n            s0 = peg$FAILED;\n          }\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n    function peg$parseclass() {\n      var s0, s1, s2;\n\n      var key    = peg$currPos * 30 + 29,\n          cached = peg$resultsCache[key];\n\n      if (cached) {\n        peg$currPos = cached.nextPos;\n\n        return cached.result;\n      }\n\n      s0 = peg$currPos;\n      if (input.charCodeAt(peg$currPos) === 58) {\n        s1 = peg$c100;\n        peg$currPos++;\n      } else {\n        s1 = peg$FAILED;\n        if (peg$silentFails === 0) { peg$fail(peg$c101); }\n      }\n      if (s1 !== peg$FAILED) {\n        if (input.substr(peg$currPos, 9).toLowerCase() === peg$c102) {\n          s2 = input.substr(peg$currPos, 9);\n          peg$currPos += 9;\n        } else {\n          s2 = peg$FAILED;\n          if (peg$silentFails === 0) { peg$fail(peg$c103); }\n        }\n        if (s2 === peg$FAILED) {\n          if (input.substr(peg$currPos, 10).toLowerCase() === peg$c104) {\n            s2 = input.substr(peg$currPos, 10);\n            peg$currPos += 10;\n          } else {\n            s2 = peg$FAILED;\n            if (peg$silentFails === 0) { peg$fail(peg$c105); }\n          }\n          if (s2 === peg$FAILED) {\n            if (input.substr(peg$currPos, 11).toLowerCase() === peg$c106) {\n              s2 = input.substr(peg$currPos, 11);\n              peg$currPos += 11;\n            } else {\n              s2 = peg$FAILED;\n              if (peg$silentFails === 0) { peg$fail(peg$c107); }\n            }\n            if (s2 === peg$FAILED) {\n              if (input.substr(peg$currPos, 8).toLowerCase() === peg$c108) {\n                s2 = input.substr(peg$currPos, 8);\n                peg$currPos += 8;\n              } else {\n                s2 = peg$FAILED;\n                if (peg$silentFails === 0) { peg$fail(peg$c109); }\n              }\n              if (s2 === peg$FAILED) {\n                if (input.substr(peg$currPos, 7).toLowerCase() === peg$c110) {\n                  s2 = input.substr(peg$currPos, 7);\n                  peg$currPos += 7;\n                } else {\n                  s2 = peg$FAILED;\n                  if (peg$silentFails === 0) { peg$fail(peg$c111); }\n                }\n              }\n            }\n          }\n        }\n        if (s2 !== peg$FAILED) {\n          peg$savedPos = s0;\n          s1 = peg$c112(s2);\n          s0 = s1;\n        } else {\n          peg$currPos = s0;\n          s0 = peg$FAILED;\n        }\n      } else {\n        peg$currPos = s0;\n        s0 = peg$FAILED;\n      }\n\n      peg$resultsCache[key] = { nextPos: peg$currPos, result: s0 };\n\n      return s0;\n    }\n\n\n      function nth(n) { return { type: 'nth-child', index: { type: 'literal', value: n } }; }\n      function nthLast(n) { return { type: 'nth-last-child', index: { type: 'literal', value: n } }; }\n      function strUnescape(s) {\n        return s.replace(/\\\\(.)/g, function(match, ch) {\n          switch(ch) {\n            case 'b': return '\\b';\n            case 'f': return '\\f';\n            case 'n': return '\\n';\n            case 'r': return '\\r';\n            case 't': return '\\t';\n            case 'v': return '\\v';\n            default: return ch;\n          }\n        });\n      }\n\n\n    peg$result = peg$startRuleFunction();\n\n    if (peg$result !== peg$FAILED && peg$currPos === input.length) {\n      return peg$result;\n    } else {\n      if (peg$result !== peg$FAILED && peg$currPos < input.length) {\n        peg$fail(peg$endExpectation());\n      }\n\n      throw peg$buildStructuredError(\n        peg$maxFailExpected,\n        peg$maxFailPos < input.length ? input.charAt(peg$maxFailPos) : null,\n        peg$maxFailPos < input.length\n          ? peg$computeLocation(peg$maxFailPos, peg$maxFailPos + 1)\n          : peg$computeLocation(peg$maxFailPos, peg$maxFailPos)\n      );\n    }\n  }\n\n  return {\n    SyntaxError: peg$SyntaxError,\n    parse:       peg$parse\n  };\n});\n", "/* vim: set sw=4 sts=4 : */\nimport estraverse from 'estraverse';\nimport parser from './parser.js';\n\n/**\n* @typedef {\"LEFT_SIDE\"|\"RIGHT_SIDE\"} Side\n*/\n\nconst LEFT_SIDE = 'LEFT_SIDE';\nconst RIGHT_SIDE = 'RIGHT_SIDE';\n\n/**\n * @external AST\n * @see https://esprima.readthedocs.io/en/latest/syntax-tree-format.html\n */\n\n/**\n * One of the rules of `grammar.pegjs`\n * @typedef {PlainObject} SelectorAST\n * @see grammar.pegjs\n*/\n\n/**\n * The `sequence` production of `grammar.pegjs`\n * @typedef {PlainObject} SelectorSequenceAST\n*/\n\n/**\n * Get the value of a property which may be multiple levels down\n * in the object.\n * @param {?PlainObject} obj\n * @param {string} key\n * @returns {undefined|boolean|string|number|external:AST}\n */\nfunction getPath(obj, key) {\n    const keys = key.split('.');\n    for (const key of keys) {\n        if (obj == null) { return obj; }\n        obj = obj[key];\n    }\n    return obj;\n}\n\n/**\n * Determine whether `node` can be reached by following `path`,\n * starting at `ancestor`.\n * @param {?external:AST} node\n * @param {?external:AST} ancestor\n * @param {string[]} path\n * @returns {boolean}\n */\nfunction inPath(node, ancestor, path) {\n    if (path.length === 0) { return node === ancestor; }\n    if (ancestor == null) { return false; }\n    const field = ancestor[path[0]];\n    const remainingPath = path.slice(1);\n    if (Array.isArray(field)) {\n        for (const component of field) {\n            if (inPath(node, component, remainingPath)) { return true; }\n        }\n        return false;\n    } else {\n        return inPath(node, field, remainingPath);\n    }\n}\n\n/**\n * @callback TraverseOptionFallback\n * @param {external:AST} node The given node.\n * @returns {string[]} An array of visitor keys for the given node.\n */\n/**\n * @typedef {object} ESQueryOptions\n * @property { { [nodeType: string]: string[] } } [visitorKeys] By passing `visitorKeys` mapping, we can extend the properties of the nodes that traverse the node.\n * @property {TraverseOptionFallback} [fallback] By passing `fallback` option, we can control the properties of traversing nodes when encountering unknown nodes.\n */\n\n/**\n * Given a `node` and its ancestors, determine if `node` is matched\n * by `selector`.\n * @param {?external:AST} node\n * @param {?SelectorAST} selector\n * @param {external:AST[]} [ancestry=[]]\n * @param {ESQueryOptions} [options]\n * @throws {Error} Unknowns (operator, class name, selector type, or\n * selector value type)\n * @returns {boolean}\n */\nfunction matches(node, selector, ancestry, options) {\n    if (!selector) { return true; }\n    if (!node) { return false; }\n    if (!ancestry) { ancestry = []; }\n\n    switch(selector.type) {\n        case 'wildcard':\n            return true;\n\n        case 'identifier':\n            return selector.value.toLowerCase() === node.type.toLowerCase();\n\n        case 'field': {\n            const path = selector.name.split('.');\n            const ancestor = ancestry[path.length - 1];\n            return inPath(node, ancestor, path);\n\n        }\n        case 'matches':\n            for (const sel of selector.selectors) {\n                if (matches(node, sel, ancestry, options)) { return true; }\n            }\n            return false;\n\n        case 'compound':\n            for (const sel of selector.selectors) {\n                if (!matches(node, sel, ancestry, options)) { return false; }\n            }\n            return true;\n\n        case 'not':\n            for (const sel of selector.selectors) {\n                if (matches(node, sel, ancestry, options)) { return false; }\n            }\n            return true;\n\n        case 'has': {\n            const collector = [];\n            for (const sel of selector.selectors) {\n                const a = [];\n                estraverse.traverse(node, {\n                    enter (node, parent) {\n                        if (parent != null) { a.unshift(parent); }\n                        if (matches(node, sel, a, options)) {\n                            collector.push(node);\n                        }\n                    },\n                    leave () { a.shift(); },\n                    keys: options && options.visitorKeys,\n                    fallback: options && options.fallback || 'iteration'\n                });\n            }\n            return collector.length !== 0;\n\n        }\n        case 'child':\n            if (matches(node, selector.right, ancestry, options)) {\n                return matches(ancestry[0], selector.left, ancestry.slice(1), options);\n            }\n            return false;\n\n        case 'descendant':\n            if (matches(node, selector.right, ancestry, options)) {\n                for (let i = 0, l = ancestry.length; i < l; ++i) {\n                    if (matches(ancestry[i], selector.left, ancestry.slice(i + 1), options)) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n\n        case 'attribute': {\n            const p = getPath(node, selector.name);\n            switch (selector.operator) {\n                case void 0:\n                    return p != null;\n                case '=':\n                    switch (selector.value.type) {\n                        case 'regexp': return typeof p === 'string' && selector.value.value.test(p);\n                        case 'literal': return `${selector.value.value}` === `${p}`;\n                        case 'type': return selector.value.value === typeof p;\n                    }\n                    throw new Error(`Unknown selector value type: ${selector.value.type}`);\n                case '!=':\n                    switch (selector.value.type) {\n                        case 'regexp': return !selector.value.value.test(p);\n                        case 'literal': return `${selector.value.value}` !== `${p}`;\n                        case 'type': return selector.value.value !== typeof p;\n                    }\n                    throw new Error(`Unknown selector value type: ${selector.value.type}`);\n                case '<=': return p <= selector.value.value;\n                case '<': return p < selector.value.value;\n                case '>': return p > selector.value.value;\n                case '>=': return p >= selector.value.value;\n            }\n            throw new Error(`Unknown operator: ${selector.operator}`);\n        }\n        case 'sibling':\n            return matches(node, selector.right, ancestry, options) &&\n                sibling(node, selector.left, ancestry, LEFT_SIDE, options) ||\n                selector.left.subject &&\n                matches(node, selector.left, ancestry, options) &&\n                sibling(node, selector.right, ancestry, RIGHT_SIDE, options);\n        case 'adjacent':\n            return matches(node, selector.right, ancestry, options) &&\n                adjacent(node, selector.left, ancestry, LEFT_SIDE, options) ||\n                selector.right.subject &&\n                matches(node, selector.left, ancestry, options) &&\n                adjacent(node, selector.right, ancestry, RIGHT_SIDE, options);\n\n        case 'nth-child':\n            return matches(node, selector.right, ancestry, options) &&\n                nthChild(node, ancestry, function () {\n                    return selector.index.value - 1;\n                }, options);\n\n        case 'nth-last-child':\n            return matches(node, selector.right, ancestry, options) &&\n                nthChild(node, ancestry, function (length) {\n                    return length - selector.index.value;\n                }, options);\n\n        case 'class':\n            switch(selector.name.toLowerCase()){\n                case 'statement':\n                    if(node.type.slice(-9) === 'Statement') return true;\n                    // fallthrough: interface Declaration <: Statement { }\n                case 'declaration':\n                    return node.type.slice(-11) === 'Declaration';\n                case 'pattern':\n                    if(node.type.slice(-7) === 'Pattern') return true;\n                    // fallthrough: interface Expression <: Node, Pattern { }\n                case 'expression':\n                    return node.type.slice(-10) === 'Expression' ||\n                        node.type.slice(-7) === 'Literal' ||\n                        (\n                            node.type === 'Identifier' &&\n                            (ancestry.length === 0 || ancestry[0].type !== 'MetaProperty')\n                        ) ||\n                        node.type === 'MetaProperty';\n                case 'function':\n                    return node.type === 'FunctionDeclaration' ||\n                        node.type === 'FunctionExpression' ||\n                        node.type === 'ArrowFunctionExpression';\n            }\n            throw new Error(`Unknown class name: ${selector.name}`);\n    }\n\n    throw new Error(`Unknown selector type: ${selector.type}`);\n}\n\n/**\n * Get visitor keys of a given node.\n * @param {external:AST} node The AST node to get keys.\n * @param {ESQueryOptions|undefined} options\n * @returns {string[]} Visitor keys of the node.\n */\nfunction getVisitorKeys(node, options) {\n    const nodeType = node.type;\n    if (options && options.visitorKeys && options.visitorKeys[nodeType]) {\n        return options.visitorKeys[nodeType];\n    }\n    if (estraverse.VisitorKeys[nodeType]) {\n        return estraverse.VisitorKeys[nodeType];\n    }\n    if (options && typeof options.fallback === 'function') {\n        return options.fallback(node);\n    }\n    // 'iteration' fallback\n    return Object.keys(node).filter(function (key) {\n        return key !== 'type';\n    });\n}\n\n\n/**\n * Check whether the given value is an ASTNode or not.\n * @param {any} node The value to check.\n * @returns {boolean} `true` if the value is an ASTNode.\n */\nfunction isNode(node) {\n    return node !== null && typeof node === 'object' && typeof node.type === 'string';\n}\n\n/**\n * Determines if the given node has a sibling that matches the\n * given selector.\n * @param {external:AST} node\n * @param {SelectorSequenceAST} selector\n * @param {external:AST[]} ancestry\n * @param {Side} side\n * @param {ESQueryOptions|undefined} options\n * @returns {boolean}\n */\nfunction sibling(node, selector, ancestry, side, options) {\n    const [parent] = ancestry;\n    if (!parent) { return false; }\n    const keys = getVisitorKeys(parent, options);\n    for (const key of keys) {\n        const listProp = parent[key];\n        if (Array.isArray(listProp)) {\n            const startIndex = listProp.indexOf(node);\n            if (startIndex < 0) { continue; }\n            let lowerBound, upperBound;\n            if (side === LEFT_SIDE) {\n                lowerBound = 0;\n                upperBound = startIndex;\n            } else {\n                lowerBound = startIndex + 1;\n                upperBound = listProp.length;\n            }\n            for (let k = lowerBound; k < upperBound; ++k) {\n                if (isNode(listProp[k]) && matches(listProp[k], selector, ancestry, options)) {\n                    return true;\n                }\n            }\n        }\n    }\n    return false;\n}\n\n/**\n * Determines if the given node has an adjacent sibling that matches\n * the given selector.\n * @param {external:AST} node\n * @param {SelectorSequenceAST} selector\n * @param {external:AST[]} ancestry\n * @param {Side} side\n * @param {ESQueryOptions|undefined} options\n * @returns {boolean}\n */\nfunction adjacent(node, selector, ancestry, side, options) {\n    const [parent] = ancestry;\n    if (!parent) { return false; }\n    const keys = getVisitorKeys(parent, options);\n    for (const key of keys) {\n        const listProp = parent[key];\n        if (Array.isArray(listProp)) {\n            const idx = listProp.indexOf(node);\n            if (idx < 0) { continue; }\n            if (side === LEFT_SIDE && idx > 0 && isNode(listProp[idx - 1]) && matches(listProp[idx - 1], selector, ancestry, options)) {\n                return true;\n            }\n            if (side === RIGHT_SIDE && idx < listProp.length - 1 && isNode(listProp[idx + 1]) &&  matches(listProp[idx + 1], selector, ancestry, options)) {\n                return true;\n            }\n        }\n    }\n    return false;\n}\n\n/**\n* @callback IndexFunction\n* @param {Integer} len Containing list's length\n* @returns {Integer}\n*/\n\n/**\n * Determines if the given node is the nth child, determined by\n * `idxFn`, which is given the containing list's length.\n * @param {external:AST} node\n * @param {external:AST[]} ancestry\n * @param {IndexFunction} idxFn\n * @param {ESQueryOptions|undefined} options\n * @returns {boolean}\n */\nfunction nthChild(node, ancestry, idxFn, options) {\n    const [parent] = ancestry;\n    if (!parent) { return false; }\n    const keys = getVisitorKeys(parent, options);\n    for (const key of keys) {\n        const listProp = parent[key];\n        if (Array.isArray(listProp)) {\n            const idx = listProp.indexOf(node);\n            if (idx >= 0 && idx === idxFn(listProp.length)) { return true; }\n        }\n    }\n    return false;\n}\n\n/**\n * For each selector node marked as a subject, find the portion of the\n * selector that the subject must match.\n * @param {SelectorAST} selector\n * @param {SelectorAST} [ancestor] Defaults to `selector`\n * @returns {SelectorAST[]}\n */\nfunction subjects(selector, ancestor) {\n    if (selector == null || typeof selector != 'object') { return []; }\n    if (ancestor == null) { ancestor = selector; }\n    const results = selector.subject ? [ancestor] : [];\n    for (const [p, sel] of Object.entries(selector)) {\n        results.push(...subjects(sel, p === 'left' ? sel : ancestor));\n    }\n    return results;\n}\n\n/**\n* @callback TraverseVisitor\n* @param {?external:AST} node\n* @param {?external:AST} parent\n* @param {external:AST[]} ancestry\n*/\n\n/**\n * From a JS AST and a selector AST, collect all JS AST nodes that\n * match the selector.\n * @param {external:AST} ast\n * @param {?SelectorAST} selector\n * @param {TraverseVisitor} visitor\n * @param {ESQueryOptions} [options]\n * @returns {external:AST[]}\n */\nfunction traverse(ast, selector, visitor, options) {\n    if (!selector) { return; }\n    const ancestry = [];\n    const altSubjects = subjects(selector);\n    estraverse.traverse(ast, {\n        enter (node, parent) {\n            if (parent != null) { ancestry.unshift(parent); }\n            if (matches(node, selector, ancestry, options)) {\n                if (altSubjects.length) {\n                    for (let i = 0, l = altSubjects.length; i < l; ++i) {\n                        if (matches(node, altSubjects[i], ancestry, options)) {\n                            visitor(node, parent, ancestry);\n                        }\n                        for (let k = 0, m = ancestry.length; k < m; ++k) {\n                            const succeedingAncestry = ancestry.slice(k + 1);\n                            if (matches(ancestry[k], altSubjects[i], succeedingAncestry, options)) {\n                                visitor(ancestry[k], parent, succeedingAncestry);\n                            }\n                        }\n                    }\n                } else {\n                    visitor(node, parent, ancestry);\n                }\n            }\n        },\n        leave () { ancestry.shift(); },\n        keys: options && options.visitorKeys,\n        fallback: options && options.fallback || 'iteration'\n    });\n}\n\n\n/**\n * From a JS AST and a selector AST, collect all JS AST nodes that\n * match the selector.\n * @param {external:AST} ast\n * @param {?SelectorAST} selector\n * @param {ESQueryOptions} [options]\n * @returns {external:AST[]}\n */\nfunction match(ast, selector, options) {\n    const results = [];\n    traverse(ast, selector, function (node) {\n        results.push(node);\n    }, options);\n    return results;\n}\n\n/**\n * Parse a selector string and return its AST.\n * @param {string} selector\n * @returns {SelectorAST}\n */\nfunction parse(selector) {\n    return parser.parse(selector);\n}\n\n/**\n * Query the code AST using the selector string.\n * @param {external:AST} ast\n * @param {string} selector\n * @param {ESQueryOptions} [options]\n * @returns {external:AST[]}\n */\nfunction query(ast, selector, options) {\n    return match(ast, parse(selector), options);\n}\n\nquery.parse = parse;\nquery.match = match;\nquery.traverse = traverse;\nquery.matches = matches;\nquery.query = query;\n\nexport default query;\n", "var Symbol = require('./_Symbol'),\n    isArguments = require('./isArguments'),\n    isArray = require('./isArray');\n\n/** Built-in value references. */\nvar spreadableSymbol = Symbol ? Symbol.isConcatSpreadable : undefined;\n\n/**\n * Checks if `value` is a flattenable `arguments` object or array.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is flattenable, else `false`.\n */\nfunction isFlattenable(value) {\n  return isArray(value) || isArguments(value) ||\n    !!(spreadableSymbol && value && value[spreadableSymbol]);\n}\n\nmodule.exports = isFlattenable;\n", "var arrayPush = require('./_arrayPush'),\n    isFlattenable = require('./_isFlattenable');\n\n/**\n * The base implementation of `_.flatten` with support for restricting flattening.\n *\n * @private\n * @param {Array} array The array to flatten.\n * @param {number} depth The maximum recursion depth.\n * @param {boolean} [predicate=isFlattenable] The function invoked per iteration.\n * @param {boolean} [isStrict] Restrict to values that pass `predicate` checks.\n * @param {Array} [result=[]] The initial result value.\n * @returns {Array} Returns the new flattened array.\n */\nfunction baseFlatten(array, depth, predicate, isStrict, result) {\n  var index = -1,\n      length = array.length;\n\n  predicate || (predicate = isFlattenable);\n  result || (result = []);\n\n  while (++index < length) {\n    var value = array[index];\n    if (depth > 0 && predicate(value)) {\n      if (depth > 1) {\n        // Recursively flatten arrays (susceptible to call stack limits).\n        baseFlatten(value, depth - 1, predicate, isStrict, result);\n      } else {\n        arrayPush(result, value);\n      }\n    } else if (!isStrict) {\n      result[result.length] = value;\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseFlatten;\n", "/**\n * A faster alternative to `Function#apply`, this function invokes `func`\n * with the `this` binding of `thisArg` and the arguments of `args`.\n *\n * @private\n * @param {Function} func The function to invoke.\n * @param {*} thisArg The `this` binding of `func`.\n * @param {Array} args The arguments to invoke `func` with.\n * @returns {*} Returns the result of `func`.\n */\nfunction apply(func, thisArg, args) {\n  switch (args.length) {\n    case 0: return func.call(thisArg);\n    case 1: return func.call(thisArg, args[0]);\n    case 2: return func.call(thisArg, args[0], args[1]);\n    case 3: return func.call(thisArg, args[0], args[1], args[2]);\n  }\n  return func.apply(thisArg, args);\n}\n\nmodule.exports = apply;\n", "var apply = require('./_apply');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMax = Math.max;\n\n/**\n * A specialized version of `baseRest` which transforms the rest array.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @param {Function} transform The rest array transform.\n * @returns {Function} Returns the new function.\n */\nfunction overRest(func, start, transform) {\n  start = nativeMax(start === undefined ? (func.length - 1) : start, 0);\n  return function() {\n    var args = arguments,\n        index = -1,\n        length = nativeMax(args.length - start, 0),\n        array = Array(length);\n\n    while (++index < length) {\n      array[index] = args[start + index];\n    }\n    index = -1;\n    var otherArgs = Array(start + 1);\n    while (++index < start) {\n      otherArgs[index] = args[index];\n    }\n    otherArgs[start] = transform(array);\n    return apply(func, this, otherArgs);\n  };\n}\n\nmodule.exports = overRest;\n", "/**\n * Creates a function that returns `value`.\n *\n * @static\n * @memberOf _\n * @since 2.4.0\n * @category Util\n * @param {*} value The value to return from the new function.\n * @returns {Function} Returns the new constant function.\n * @example\n *\n * var objects = _.times(2, _.constant({ 'a': 1 }));\n *\n * console.log(objects);\n * // => [{ 'a': 1 }, { 'a': 1 }]\n *\n * console.log(objects[0] === objects[1]);\n * // => true\n */\nfunction constant(value) {\n  return function() {\n    return value;\n  };\n}\n\nmodule.exports = constant;\n", "var getNative = require('./_getNative');\n\nvar defineProperty = (function() {\n  try {\n    var func = getNative(Object, 'defineProperty');\n    func({}, '', {});\n    return func;\n  } catch (e) {}\n}());\n\nmodule.exports = defineProperty;\n", "var constant = require('./constant'),\n    defineProperty = require('./_defineProperty'),\n    identity = require('./identity');\n\n/**\n * The base implementation of `setToString` without support for hot loop shorting.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar baseSetToString = !defineProperty ? identity : function(func, string) {\n  return defineProperty(func, 'toString', {\n    'configurable': true,\n    'enumerable': false,\n    'value': constant(string),\n    'writable': true\n  });\n};\n\nmodule.exports = baseSetToString;\n", "/** Used to detect hot functions by number of calls within a span of milliseconds. */\nvar HOT_COUNT = 800,\n    HOT_SPAN = 16;\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeNow = Date.now;\n\n/**\n * Creates a function that'll short out and invoke `identity` instead\n * of `func` when it's called `HOT_COUNT` or more times in `HOT_SPAN`\n * milliseconds.\n *\n * @private\n * @param {Function} func The function to restrict.\n * @returns {Function} Returns the new shortable function.\n */\nfunction shortOut(func) {\n  var count = 0,\n      lastCalled = 0;\n\n  return function() {\n    var stamp = nativeNow(),\n        remaining = HOT_SPAN - (stamp - lastCalled);\n\n    lastCalled = stamp;\n    if (remaining > 0) {\n      if (++count >= HOT_COUNT) {\n        return arguments[0];\n      }\n    } else {\n      count = 0;\n    }\n    return func.apply(undefined, arguments);\n  };\n}\n\nmodule.exports = shortOut;\n", "var baseSetToString = require('./_baseSetToString'),\n    shortOut = require('./_shortOut');\n\n/**\n * Sets the `toString` method of `func` to return `string`.\n *\n * @private\n * @param {Function} func The function to modify.\n * @param {Function} string The `toString` result.\n * @returns {Function} Returns `func`.\n */\nvar setToString = shortOut(baseSetToString);\n\nmodule.exports = setToString;\n", "var identity = require('./identity'),\n    overRest = require('./_overRest'),\n    setToString = require('./_setToString');\n\n/**\n * The base implementation of `_.rest` which doesn't validate or coerce arguments.\n *\n * @private\n * @param {Function} func The function to apply a rest parameter to.\n * @param {number} [start=func.length-1] The start position of the rest parameter.\n * @returns {Function} Returns the new function.\n */\nfunction baseRest(func, start) {\n  return setToString(overRest(func, start, identity), func + '');\n}\n\nmodule.exports = baseRest;\n", "/**\n * The base implementation of `_.isNaN` without support for number objects.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is `NaN`, else `false`.\n */\nfunction baseIsNaN(value) {\n  return value !== value;\n}\n\nmodule.exports = baseIsNaN;\n", "/**\n * A specialized version of `_.indexOf` which performs strict equality\n * comparisons of values, i.e. `===`.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction strictIndexOf(array, value, fromIndex) {\n  var index = fromIndex - 1,\n      length = array.length;\n\n  while (++index < length) {\n    if (array[index] === value) {\n      return index;\n    }\n  }\n  return -1;\n}\n\nmodule.exports = strictIndexOf;\n", "var baseFindIndex = require('./_baseFindIndex'),\n    baseIsNaN = require('./_baseIsNaN'),\n    strictIndexOf = require('./_strictIndexOf');\n\n/**\n * The base implementation of `_.indexOf` without `fromIndex` bounds checks.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {*} value The value to search for.\n * @param {number} fromIndex The index to search from.\n * @returns {number} Returns the index of the matched value, else `-1`.\n */\nfunction baseIndexOf(array, value, fromIndex) {\n  return value === value\n    ? strictIndexOf(array, value, fromIndex)\n    : baseFindIndex(array, baseIsNaN, fromIndex);\n}\n\nmodule.exports = baseIndexOf;\n", "var baseIndexOf = require('./_baseIndexOf');\n\n/**\n * A specialized version of `_.includes` for arrays without support for\n * specifying an index to search from.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludes(array, value) {\n  var length = array == null ? 0 : array.length;\n  return !!length && baseIndexOf(array, value, 0) > -1;\n}\n\nmodule.exports = arrayIncludes;\n", "/**\n * This function is like `arrayIncludes` except that it accepts a comparator.\n *\n * @private\n * @param {Array} [array] The array to inspect.\n * @param {*} target The value to search for.\n * @param {Function} comparator The comparator invoked per element.\n * @returns {boolean} Returns `true` if `target` is found, else `false`.\n */\nfunction arrayIncludesWith(array, value, comparator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    if (comparator(value, array[index])) {\n      return true;\n    }\n  }\n  return false;\n}\n\nmodule.exports = arrayIncludesWith;\n", "/**\n * This method returns `undefined`.\n *\n * @static\n * @memberOf _\n * @since 2.3.0\n * @category Util\n * @example\n *\n * _.times(2, _.noop);\n * // => [undefined, undefined]\n */\nfunction noop() {\n  // No operation performed.\n}\n\nmodule.exports = noop;\n", "var Set = require('./_Set'),\n    noop = require('./noop'),\n    setToArray = require('./_setToArray');\n\n/** Used as references for various `Number` constants. */\nvar INFINITY = 1 / 0;\n\n/**\n * Creates a set object of `values`.\n *\n * @private\n * @param {Array} values The values to add to the set.\n * @returns {Object} Returns the new set.\n */\nvar createSet = !(Set && (1 / setToArray(new Set([,-0]))[1]) == INFINITY) ? noop : function(values) {\n  return new Set(values);\n};\n\nmodule.exports = createSet;\n", "var SetCache = require('./_SetCache'),\n    arrayIncludes = require('./_arrayIncludes'),\n    arrayIncludesWith = require('./_arrayIncludesWith'),\n    cacheHas = require('./_cacheHas'),\n    createSet = require('./_createSet'),\n    setToArray = require('./_setToArray');\n\n/** Used as the size to enable large array optimizations. */\nvar LARGE_ARRAY_SIZE = 200;\n\n/**\n * The base implementation of `_.uniqBy` without support for iteratee shorthands.\n *\n * @private\n * @param {Array} array The array to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new duplicate free array.\n */\nfunction baseUniq(array, iteratee, comparator) {\n  var index = -1,\n      includes = arrayIncludes,\n      length = array.length,\n      isCommon = true,\n      result = [],\n      seen = result;\n\n  if (comparator) {\n    isCommon = false;\n    includes = arrayIncludesWith;\n  }\n  else if (length >= LARGE_ARRAY_SIZE) {\n    var set = iteratee ? null : createSet(array);\n    if (set) {\n      return setToArray(set);\n    }\n    isCommon = false;\n    includes = cacheHas;\n    seen = new SetCache;\n  }\n  else {\n    seen = iteratee ? [] : result;\n  }\n  outer:\n  while (++index < length) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (isCommon && computed === computed) {\n      var seenIndex = seen.length;\n      while (seenIndex--) {\n        if (seen[seenIndex] === computed) {\n          continue outer;\n        }\n      }\n      if (iteratee) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n    else if (!includes(seen, computed, comparator)) {\n      if (seen !== result) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseUniq;\n", "var isArrayLike = require('./isArrayLike'),\n    isObjectLike = require('./isObjectLike');\n\n/**\n * This method is like `_.isArrayLike` except that it also checks if `value`\n * is an object.\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is an array-like object,\n *  else `false`.\n * @example\n *\n * _.isArrayLikeObject([1, 2, 3]);\n * // => true\n *\n * _.isArrayLikeObject(document.body.children);\n * // => true\n *\n * _.isArrayLikeObject('abc');\n * // => false\n *\n * _.isArrayLikeObject(_.noop);\n * // => false\n */\nfunction isArrayLikeObject(value) {\n  return isObjectLike(value) && isArrayLike(value);\n}\n\nmodule.exports = isArrayLikeObject;\n", "var baseFlatten = require('./_baseFlatten'),\n    baseRest = require('./_baseRest'),\n    baseUniq = require('./_baseUniq'),\n    isArrayLikeObject = require('./isArrayLikeObject');\n\n/**\n * Creates an array of unique values, in order, from all given arrays using\n * [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @returns {Array} Returns the new array of combined values.\n * @example\n *\n * _.union([2], [1, 2]);\n * // => [2, 1]\n */\nvar union = baseRest(function(arrays) {\n  return baseUniq(baseFlatten(arrays, 1, isArrayLikeObject, true));\n});\n\nmodule.exports = union;\n", "var SetCache = require('./_SetCache'),\n    arrayIncludes = require('./_arrayIncludes'),\n    arrayIncludesWith = require('./_arrayIncludesWith'),\n    arrayMap = require('./_arrayMap'),\n    baseUnary = require('./_baseUnary'),\n    cacheHas = require('./_cacheHas');\n\n/* Built-in method references for those with the same name as other `lodash` methods. */\nvar nativeMin = Math.min;\n\n/**\n * The base implementation of methods like `_.intersection`, without support\n * for iteratee shorthands, that accepts an array of arrays to inspect.\n *\n * @private\n * @param {Array} arrays The arrays to inspect.\n * @param {Function} [iteratee] The iteratee invoked per element.\n * @param {Function} [comparator] The comparator invoked per element.\n * @returns {Array} Returns the new array of shared values.\n */\nfunction baseIntersection(arrays, iteratee, comparator) {\n  var includes = comparator ? arrayIncludesWith : arrayIncludes,\n      length = arrays[0].length,\n      othLength = arrays.length,\n      othIndex = othLength,\n      caches = Array(othLength),\n      maxLength = Infinity,\n      result = [];\n\n  while (othIndex--) {\n    var array = arrays[othIndex];\n    if (othIndex && iteratee) {\n      array = arrayMap(array, baseUnary(iteratee));\n    }\n    maxLength = nativeMin(array.length, maxLength);\n    caches[othIndex] = !comparator && (iteratee || (length >= 120 && array.length >= 120))\n      ? new SetCache(othIndex && array)\n      : undefined;\n  }\n  array = arrays[0];\n\n  var index = -1,\n      seen = caches[0];\n\n  outer:\n  while (++index < length && result.length < maxLength) {\n    var value = array[index],\n        computed = iteratee ? iteratee(value) : value;\n\n    value = (comparator || value !== 0) ? value : 0;\n    if (!(seen\n          ? cacheHas(seen, computed)\n          : includes(result, computed, comparator)\n        )) {\n      othIndex = othLength;\n      while (--othIndex) {\n        var cache = caches[othIndex];\n        if (!(cache\n              ? cacheHas(cache, computed)\n              : includes(arrays[othIndex], computed, comparator))\n            ) {\n          continue outer;\n        }\n      }\n      if (seen) {\n        seen.push(computed);\n      }\n      result.push(value);\n    }\n  }\n  return result;\n}\n\nmodule.exports = baseIntersection;\n", "var isArrayLikeObject = require('./isArrayLikeObject');\n\n/**\n * Casts `value` to an empty array if it's not an array like object.\n *\n * @private\n * @param {*} value The value to inspect.\n * @returns {Array|Object} Returns the cast array-like object.\n */\nfunction castArrayLikeObject(value) {\n  return isArrayLikeObject(value) ? value : [];\n}\n\nmodule.exports = castArrayLikeObject;\n", "var arrayMap = require('./_arrayMap'),\n    baseIntersection = require('./_baseIntersection'),\n    baseRest = require('./_baseRest'),\n    castArrayLikeObject = require('./_castArrayLikeObject');\n\n/**\n * Creates an array of unique values that are included in all given arrays\n * using [`SameValueZero`](http://ecma-international.org/ecma-262/7.0/#sec-samevaluezero)\n * for equality comparisons. The order and references of result values are\n * determined by the first array.\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Array\n * @param {...Array} [arrays] The arrays to inspect.\n * @returns {Array} Returns the new array of intersecting values.\n * @example\n *\n * _.intersection([2, 1], [2, 3]);\n * // => [2]\n */\nvar intersection = baseRest(function(arrays) {\n  var mapped = arrayMap(arrays, castArrayLikeObject);\n  return (mapped.length && mapped[0] === arrays[0])\n    ? baseIntersection(mapped)\n    : [];\n});\n\nmodule.exports = intersection;\n", "/**\n * @author Toru Nagashima <https://github.com/mysticatea>\n * @copyright 2017 Toru Nagashima. All rights reserved.\n * See LICENSE file in root directory for full license.\n */\nimport type { Location } from \"./locations\"\n\n/**\n * Check whether the given value has acorn style location information.\n * @param x The value to check.\n * @returns `true` if the value has acorn style location information.\n */\nfunction isAcornStyleParseError(\n    x: any,\n): x is { message: string; pos: number; loc: Location } {\n    return (\n        typeof x.message === \"string\" &&\n        typeof x.pos === \"number\" &&\n        typeof x.loc === \"object\" &&\n        x.loc !== null &&\n        typeof x.loc.line === \"number\" &&\n        typeof x.loc.column === \"number\"\n    )\n}\n\n/**\n * HTML parse errors.\n */\nexport class ParseError extends SyntaxError {\n    public code?: ErrorCode\n    public index: number\n    public lineNumber: number\n    public column: number\n\n    /**\n     * Create new parser error object.\n     * @param code The error code. See also: https://html.spec.whatwg.org/multipage/parsing.html#parse-errors\n     * @param offset The offset number of this error.\n     * @param line The line number of this error.\n     * @param column The column number of this error.\n     */\n    public static fromCode(\n        code: ErrorCode,\n        offset: number,\n        line: number,\n        column: number,\n    ): ParseError {\n        return new ParseError(code, code, offset, line, column)\n    }\n\n    /**\n     * Normalize the error object.\n     * @param x The error object to normalize.\n     */\n    public static normalize(x: any): ParseError | null {\n        if (ParseError.isParseError(x)) {\n            return x\n        }\n        if (isAcornStyleParseError(x)) {\n            return new ParseError(\n                x.message,\n                undefined,\n                x.pos,\n                x.loc.line,\n                x.loc.column,\n            )\n        }\n        return null\n    }\n\n    /**\n     * Initialize this ParseError instance.\n     * @param message The error message.\n     * @param code The error code. See also: https://html.spec.whatwg.org/multipage/parsing.html#parse-errors\n     * @param offset The offset number of this error.\n     * @param line The line number of this error.\n     * @param column The column number of this error.\n     */\n    public constructor(\n        message: string,\n        code: ErrorCode | undefined,\n        offset: number,\n        line: number,\n        column: number,\n    ) {\n        super(message)\n        this.code = code\n        this.index = offset\n        this.lineNumber = line\n        this.column = column\n    }\n\n    /**\n     * Type guard for ParseError.\n     * @param x The value to check.\n     * @returns `true` if the value has `message`, `pos`, `loc` properties.\n     */\n    public static isParseError(x: any): x is ParseError {\n        return (\n            x instanceof ParseError ||\n            (typeof x.message === \"string\" &&\n                typeof x.index === \"number\" &&\n                typeof x.lineNumber === \"number\" &&\n                typeof x.column === \"number\")\n        )\n    }\n}\n\n/**\n * The error codes of HTML syntax errors.\n * https://html.spec.whatwg.org/multipage/parsing.html#parse-errors\n */\nexport type ErrorCode =\n    | \"abrupt-closing-of-empty-comment\"\n    | \"absence-of-digits-in-numeric-character-reference\"\n    | \"cdata-in-html-content\"\n    | \"character-reference-outside-unicode-range\"\n    | \"control-character-in-input-stream\"\n    | \"control-character-reference\"\n    | \"eof-before-tag-name\"\n    | \"eof-in-cdata\"\n    | \"eof-in-comment\"\n    | \"eof-in-tag\"\n    | \"incorrectly-closed-comment\"\n    | \"incorrectly-opened-comment\"\n    | \"invalid-first-character-of-tag-name\"\n    | \"missing-attribute-value\"\n    | \"missing-end-tag-name\"\n    | \"missing-semicolon-after-character-reference\"\n    | \"missing-whitespace-between-attributes\"\n    | \"nested-comment\"\n    | \"noncharacter-character-reference\"\n    | \"noncharacter-in-input-stream\"\n    | \"null-character-reference\"\n    | \"surrogate-character-reference\"\n    | \"surrogate-in-input-stream\"\n    | \"unexpected-character-in-attribute-name\"\n    | \"unexpected-character-in-unquoted-attribute-value\"\n    | \"unexpected-equals-sign-before-attribute-name\"\n    | \"unexpected-null-character\"\n    | \"unexpected-question-mark-instead-of-tag-name\"\n    | \"unexpected-solidus-in-tag\"\n    | \"unknown-named-character-reference\"\n    | \"end-tag-with-attributes\"\n    | \"duplicate-attribute\"\n    | \"end-tag-with-trailing-solidus\"\n    | \"non-void-html-element-start-tag-with-trailing-solidus\"\n    | \"x-invalid-end-tag\"\n    | \"x-invalid-namespace\"\n    | \"x-missing-interpolation-end\"\n// ---- Use RAWTEXT state for <script> elements instead ----\n// \"eof-in-script-html-comment-like-text\" |\n// ---- Use BOGUS_COMMENT state for DOCTYPEs instead ----\n// \"abrupt-doctype-public-identifier\" |\n// \"abrupt-doctype-system-identifier\" |\n// \"eof-in-doctype\" |\n// \"invalid-character-sequence-after-doctype-name\" |\n// \"missing-doctype-name\" |\n// \"missing-doctype-public-identifier\" |\n// \"missing-doctype-system-identifier\" |\n// \"missing-quote-before-doctype-public-identifier\" |\n// \"missing-quote-before-doctype-system-identifier\" |\n// \"missing-whitespace-after-doctype-public-keyword\" |\n// \"missing-whitespace-after-doctype-system-keyword\" |\n// \"missing-whitespace-before-doctype-name\" |\n// \"missing-whitespace-between-doctype-public-and-system-identifiers\" |\n// \"unexpected-character-after-doctype-system-identifier\" |\n", "/**\n * @author Toru Nagashima <https://github.com/mysticatea>\n * @copyright 2017 Toru Nagashima. All rights reserved.\n * See LICENSE file in root directory for full license.\n */\nimport type { ScopeManager } from \"eslint-scope\"\nimport type { ParseError } from \"./errors\"\nimport type { HasLocation } from \"./locations\"\nimport type { Token } from \"./tokens\"\n\n//------------------------------------------------------------------------------\n// Common\n//------------------------------------------------------------------------------\n\n/**\n * Objects which have their parent.\n */\nexport interface HasParent {\n    parent?: Node | null\n}\n\n/**\n * The union type for all nodes.\n */\nexport type Node =\n    | ESLintNode\n    | VNode\n    | VForExpression\n    | VOnExpression\n    | VSlotScopeExpression\n    | VFilterSequenceExpression\n    | VFilter\n\n//------------------------------------------------------------------------------\n// Script\n//------------------------------------------------------------------------------\n\n/**\n * The union type for ESLint nodes.\n */\nexport type ESLintNode =\n    | ESLintIdentifier\n    | ESLintLiteral\n    | ESLintProgram\n    | ESLintSwitchCase\n    | ESLintCatchClause\n    | ESLintVariableDeclarator\n    | ESLintStatement\n    | ESLintExpression\n    | ESLintProperty\n    | ESLintAssignmentProperty\n    | ESLintSuper\n    | ESLintTemplateElement\n    | ESLintSpreadElement\n    | ESLintPattern\n    | ESLintClassBody\n    | ESLintMethodDefinition\n    | ESLintModuleDeclaration\n    | ESLintModuleSpecifier\n    | ESLintLegacyRestProperty\n\n/**\n * The parsing result of ESLint custom parsers.\n */\nexport interface ESLintExtendedProgram {\n    ast: ESLintProgram\n    services?: {}\n    visitorKeys?: { [type: string]: string[] }\n    scopeManager?: ScopeManager\n}\n\nexport interface ESLintProgram extends HasLocation, HasParent {\n    type: \"Program\"\n    sourceType: \"script\" | \"module\"\n    body: (ESLintStatement | ESLintModuleDeclaration)[]\n    templateBody?: VElement & HasConcreteInfo\n    tokens?: Token[]\n    comments?: Token[]\n    errors?: ParseError[]\n}\n\nexport type ESLintStatement =\n    | ESLintExpressionStatement\n    | ESLintBlockStatement\n    | ESLintEmptyStatement\n    | ESLintDebuggerStatement\n    | ESLintWithStatement\n    | ESLintReturnStatement\n    | ESLintLabeledStatement\n    | ESLintBreakStatement\n    | ESLintContinueStatement\n    | ESLintIfStatement\n    | ESLintSwitchStatement\n    | ESLintThrowStatement\n    | ESLintTryStatement\n    | ESLintWhileStatement\n    | ESLintDoWhileStatement\n    | ESLintForStatement\n    | ESLintForInStatement\n    | ESLintForOfStatement\n    | ESLintDeclaration\n\nexport interface ESLintEmptyStatement extends HasLocation, HasParent {\n    type: \"EmptyStatement\"\n}\n\nexport interface ESLintBlockStatement extends HasLocation, HasParent {\n    type: \"BlockStatement\"\n    body: ESLintStatement[]\n}\n\nexport interface ESLintExpressionStatement extends HasLocation, HasParent {\n    type: \"ExpressionStatement\"\n    expression: ESLintExpression\n}\n\nexport interface ESLintIfStatement extends HasLocation, HasParent {\n    type: \"IfStatement\"\n    test: ESLintExpression\n    consequent: ESLintStatement\n    alternate: ESLintStatement | null\n}\n\nexport interface ESLintSwitchStatement extends HasLocation, HasParent {\n    type: \"SwitchStatement\"\n    discriminant: ESLintExpression\n    cases: ESLintSwitchCase[]\n}\n\nexport interface ESLintSwitchCase extends HasLocation, HasParent {\n    type: \"SwitchCase\"\n    test: ESLintExpression | null\n    consequent: ESLintStatement[]\n}\n\nexport interface ESLintWhileStatement extends HasLocation, HasParent {\n    type: \"WhileStatement\"\n    test: ESLintExpression\n    body: ESLintStatement\n}\n\nexport interface ESLintDoWhileStatement extends HasLocation, HasParent {\n    type: \"DoWhileStatement\"\n    body: ESLintStatement\n    test: ESLintExpression\n}\n\nexport interface ESLintForStatement extends HasLocation, HasParent {\n    type: \"ForStatement\"\n    init: ESLintVariableDeclaration | ESLintExpression | null\n    test: ESLintExpression | null\n    update: ESLintExpression | null\n    body: ESLintStatement\n}\n\nexport interface ESLintForInStatement extends HasLocation, HasParent {\n    type: \"ForInStatement\"\n    left: ESLintVariableDeclaration | ESLintPattern\n    right: ESLintExpression\n    body: ESLintStatement\n}\n\nexport interface ESLintForOfStatement extends HasLocation, HasParent {\n    type: \"ForOfStatement\"\n    left: ESLintVariableDeclaration | ESLintPattern\n    right: ESLintExpression\n    body: ESLintStatement\n}\n\nexport interface ESLintLabeledStatement extends HasLocation, HasParent {\n    type: \"LabeledStatement\"\n    label: ESLintIdentifier\n    body: ESLintStatement\n}\n\nexport interface ESLintBreakStatement extends HasLocation, HasParent {\n    type: \"BreakStatement\"\n    label: ESLintIdentifier | null\n}\n\nexport interface ESLintContinueStatement extends HasLocation, HasParent {\n    type: \"ContinueStatement\"\n    label: ESLintIdentifier | null\n}\n\nexport interface ESLintReturnStatement extends HasLocation, HasParent {\n    type: \"ReturnStatement\"\n    argument: ESLintExpression | null\n}\n\nexport interface ESLintThrowStatement extends HasLocation, HasParent {\n    type: \"ThrowStatement\"\n    argument: ESLintExpression\n}\n\nexport interface ESLintTryStatement extends HasLocation, HasParent {\n    type: \"TryStatement\"\n    block: ESLintBlockStatement\n    handler: ESLintCatchClause | null\n    finalizer: ESLintBlockStatement | null\n}\n\nexport interface ESLintCatchClause extends HasLocation, HasParent {\n    type: \"CatchClause\"\n    param: ESLintPattern\n    body: ESLintBlockStatement\n}\n\nexport interface ESLintWithStatement extends HasLocation, HasParent {\n    type: \"WithStatement\"\n    object: ESLintExpression\n    body: ESLintStatement\n}\n\nexport interface ESLintDebuggerStatement extends HasLocation, HasParent {\n    type: \"DebuggerStatement\"\n}\n\nexport type ESLintDeclaration =\n    | ESLintFunctionDeclaration\n    | ESLintVariableDeclaration\n    | ESLintClassDeclaration\n\nexport interface ESLintFunctionDeclaration extends HasLocation, HasParent {\n    type: \"FunctionDeclaration\"\n    async: boolean\n    generator: boolean\n    id: ESLintIdentifier | null\n    params: ESLintPattern[]\n    body: ESLintBlockStatement\n}\n\nexport interface ESLintVariableDeclaration extends HasLocation, HasParent {\n    type: \"VariableDeclaration\"\n    kind: \"var\" | \"let\" | \"const\"\n    declarations: ESLintVariableDeclarator[]\n}\n\nexport interface ESLintVariableDeclarator extends HasLocation, HasParent {\n    type: \"VariableDeclarator\"\n    id: ESLintPattern\n    init: ESLintExpression | null\n}\n\nexport interface ESLintClassDeclaration extends HasLocation, HasParent {\n    type: \"ClassDeclaration\"\n    id: ESLintIdentifier | null\n    superClass: ESLintExpression | null\n    body: ESLintClassBody\n}\n\nexport interface ESLintClassBody extends HasLocation, HasParent {\n    type: \"ClassBody\"\n    body: ESLintMethodDefinition[]\n}\n\nexport interface ESLintMethodDefinition extends HasLocation, HasParent {\n    type: \"MethodDefinition\"\n    kind: \"constructor\" | \"method\" | \"get\" | \"set\"\n    computed: boolean\n    static: boolean\n    key: ESLintExpression\n    value: ESLintFunctionExpression\n}\n\nexport type ESLintModuleDeclaration =\n    | ESLintImportDeclaration\n    | ESLintExportNamedDeclaration\n    | ESLintExportDefaultDeclaration\n    | ESLintExportAllDeclaration\n\nexport type ESLintModuleSpecifier =\n    | ESLintImportSpecifier\n    | ESLintImportDefaultSpecifier\n    | ESLintImportNamespaceSpecifier\n    | ESLintExportSpecifier\n\nexport interface ESLintImportDeclaration extends HasLocation, HasParent {\n    type: \"ImportDeclaration\"\n    specifiers: (\n        | ESLintImportSpecifier\n        | ESLintImportDefaultSpecifier\n        | ESLintImportNamespaceSpecifier\n    )[]\n    source: ESLintLiteral\n}\n\nexport interface ESLintImportSpecifier extends HasLocation, HasParent {\n    type: \"ImportSpecifier\"\n    imported: ESLintIdentifier\n    local: ESLintIdentifier\n}\n\nexport interface ESLintImportDefaultSpecifier extends HasLocation, HasParent {\n    type: \"ImportDefaultSpecifier\"\n    local: ESLintIdentifier\n}\n\nexport interface ESLintImportNamespaceSpecifier extends HasLocation, HasParent {\n    type: \"ImportNamespaceSpecifier\"\n    local: ESLintIdentifier\n}\n\nexport interface ESLintExportNamedDeclaration extends HasLocation, HasParent {\n    type: \"ExportNamedDeclaration\"\n    declaration?: ESLintDeclaration | null\n    specifiers: ESLintExportSpecifier[]\n    source?: ESLintLiteral | null\n}\n\nexport interface ESLintExportSpecifier extends HasLocation, HasParent {\n    type: \"ExportSpecifier\"\n    local: ESLintIdentifier\n    exported: ESLintIdentifier\n}\n\nexport interface ESLintExportDefaultDeclaration extends HasLocation, HasParent {\n    type: \"ExportDefaultDeclaration\"\n    declaration: ESLintDeclaration | ESLintExpression\n}\n\nexport interface ESLintExportAllDeclaration extends HasLocation, HasParent {\n    type: \"ExportAllDeclaration\"\n    source: ESLintLiteral\n}\n\nexport type ESLintExpression =\n    | ESLintThisExpression\n    | ESLintArrayExpression\n    | ESLintObjectExpression\n    | ESLintFunctionExpression\n    | ESLintArrowFunctionExpression\n    | ESLintYieldExpression\n    | ESLintLiteral\n    | ESLintUnaryExpression\n    | ESLintUpdateExpression\n    | ESLintBinaryExpression\n    | ESLintAssignmentExpression\n    | ESLintLogicalExpression\n    | ESLintMemberExpression\n    | ESLintConditionalExpression\n    | ESLintCallExpression\n    | ESLintNewExpression\n    | ESLintSequenceExpression\n    | ESLintTemplateLiteral\n    | ESLintTaggedTemplateExpression\n    | ESLintClassExpression\n    | ESLintMetaProperty\n    | ESLintIdentifier\n    | ESLintAwaitExpression\n\nexport interface ESLintIdentifier extends HasLocation, HasParent {\n    type: \"Identifier\"\n    name: string\n}\n\nexport interface ESLintLiteral extends HasLocation, HasParent {\n    type: \"Literal\"\n    value: string | boolean | null | number | RegExp\n    regex?: {\n        pattern: string\n        flags: string\n    }\n}\n\nexport interface ESLintThisExpression extends HasLocation, HasParent {\n    type: \"ThisExpression\"\n}\n\nexport interface ESLintArrayExpression extends HasLocation, HasParent {\n    type: \"ArrayExpression\"\n    elements: (ESLintExpression | ESLintSpreadElement)[]\n}\n\nexport interface ESLintObjectExpression extends HasLocation, HasParent {\n    type: \"ObjectExpression\"\n    properties: (\n        | ESLintProperty\n        | ESLintSpreadElement\n        | ESLintLegacySpreadProperty\n    )[]\n}\n\nexport interface ESLintProperty extends HasLocation, HasParent {\n    type: \"Property\"\n    kind: \"init\" | \"get\" | \"set\"\n    method: boolean\n    shorthand: boolean\n    computed: boolean\n    key: ESLintExpression\n    value: ESLintExpression | ESLintPattern\n}\n\nexport interface ESLintFunctionExpression extends HasLocation, HasParent {\n    type: \"FunctionExpression\"\n    async: boolean\n    generator: boolean\n    id: ESLintIdentifier | null\n    params: ESLintPattern[]\n    body: ESLintBlockStatement\n}\n\nexport interface ESLintArrowFunctionExpression extends HasLocation, HasParent {\n    type: \"ArrowFunctionExpression\"\n    async: boolean\n    generator: boolean\n    id: ESLintIdentifier | null\n    params: ESLintPattern[]\n    body: ESLintBlockStatement\n}\n\nexport interface ESLintSequenceExpression extends HasLocation, HasParent {\n    type: \"SequenceExpression\"\n    expressions: ESLintExpression[]\n}\n\nexport interface ESLintUnaryExpression extends HasLocation, HasParent {\n    type: \"UnaryExpression\"\n    operator: \"-\" | \"+\" | \"!\" | \"~\" | \"typeof\" | \"void\" | \"delete\"\n    prefix: boolean\n    argument: ESLintExpression\n}\n\nexport interface ESLintBinaryExpression extends HasLocation, HasParent {\n    type: \"BinaryExpression\"\n    operator:\n        | \"==\"\n        | \"!=\"\n        | \"===\"\n        | \"!==\"\n        | \"<\"\n        | \"<=\"\n        | \">\"\n        | \">=\"\n        | \"<<\"\n        | \">>\"\n        | \">>>\"\n        | \"+\"\n        | \"-\"\n        | \"*\"\n        | \"/\"\n        | \"%\"\n        | \"**\"\n        | \"|\"\n        | \"^\"\n        | \"&\"\n        | \"in\"\n        | \"instanceof\"\n    left: ESLintExpression\n    right: ESLintExpression\n}\n\nexport interface ESLintAssignmentExpression extends HasLocation, HasParent {\n    type: \"AssignmentExpression\"\n    operator:\n        | \"=\"\n        | \"+=\"\n        | \"-=\"\n        | \"*=\"\n        | \"/=\"\n        | \"%=\"\n        | \"**=\"\n        | \"<<=\"\n        | \">>=\"\n        | \">>>=\"\n        | \"|=\"\n        | \"^=\"\n        | \"&=\"\n    left: ESLintPattern\n    right: ESLintExpression\n}\n\nexport interface ESLintUpdateExpression extends HasLocation, HasParent {\n    type: \"UpdateExpression\"\n    operator: \"++\" | \"--\"\n    argument: ESLintExpression\n    prefix: boolean\n}\n\nexport interface ESLintLogicalExpression extends HasLocation, HasParent {\n    type: \"LogicalExpression\"\n    operator: \"||\" | \"&&\"\n    left: ESLintExpression\n    right: ESLintExpression\n}\n\nexport interface ESLintConditionalExpression extends HasLocation, HasParent {\n    type: \"ConditionalExpression\"\n    test: ESLintExpression\n    alternate: ESLintExpression\n    consequent: ESLintExpression\n}\n\nexport interface ESLintCallExpression extends HasLocation, HasParent {\n    type: \"CallExpression\"\n    callee: ESLintExpression | ESLintSuper\n    arguments: (ESLintExpression | ESLintSpreadElement)[]\n}\n\nexport interface ESLintSuper extends HasLocation, HasParent {\n    type: \"Super\"\n}\n\nexport interface ESLintNewExpression extends HasLocation, HasParent {\n    type: \"NewExpression\"\n    callee: ESLintExpression\n    arguments: (ESLintExpression | ESLintSpreadElement)[]\n}\n\nexport interface ESLintMemberExpression extends HasLocation, HasParent {\n    type: \"MemberExpression\"\n    computed: boolean\n    object: ESLintExpression | ESLintSuper\n    property: ESLintExpression\n}\n\nexport interface ESLintYieldExpression extends HasLocation, HasParent {\n    type: \"YieldExpression\"\n    delegate: boolean\n    argument: ESLintExpression | null\n}\n\nexport interface ESLintAwaitExpression extends HasLocation, HasParent {\n    type: \"AwaitExpression\"\n    argument: ESLintExpression\n}\n\nexport interface ESLintTemplateLiteral extends HasLocation, HasParent {\n    type: \"TemplateLiteral\"\n    quasis: ESLintTemplateElement[]\n    expressions: ESLintExpression[]\n}\n\nexport interface ESLintTaggedTemplateExpression extends HasLocation, HasParent {\n    type: \"TaggedTemplateExpression\"\n    tag: ESLintExpression\n    quasi: ESLintTemplateLiteral\n}\n\nexport interface ESLintTemplateElement extends HasLocation, HasParent {\n    type: \"TemplateElement\"\n    tail: boolean\n    value: {\n        cooked: string\n        raw: string\n    }\n}\n\nexport interface ESLintClassExpression extends HasLocation, HasParent {\n    type: \"ClassExpression\"\n    id: ESLintIdentifier | null\n    superClass: ESLintExpression | null\n    body: ESLintClassBody\n}\n\nexport interface ESLintMetaProperty extends HasLocation, HasParent {\n    type: \"MetaProperty\"\n    meta: ESLintIdentifier\n    property: ESLintIdentifier\n}\n\nexport type ESLintPattern =\n    | ESLintIdentifier\n    | ESLintObjectPattern\n    | ESLintArrayPattern\n    | ESLintRestElement\n    | ESLintAssignmentPattern\n    | ESLintMemberExpression\n    | ESLintLegacyRestProperty\n\nexport interface ESLintObjectPattern extends HasLocation, HasParent {\n    type: \"ObjectPattern\"\n    properties: (\n        | ESLintAssignmentProperty\n        | ESLintRestElement\n        | ESLintLegacyRestProperty\n    )[]\n}\n\nexport interface ESLintAssignmentProperty extends ESLintProperty {\n    value: ESLintPattern\n    kind: \"init\"\n    method: false\n}\n\nexport interface ESLintArrayPattern extends HasLocation, HasParent {\n    type: \"ArrayPattern\"\n    elements: ESLintPattern[]\n}\n\nexport interface ESLintRestElement extends HasLocation, HasParent {\n    type: \"RestElement\"\n    argument: ESLintPattern\n}\n\nexport interface ESLintSpreadElement extends HasLocation, HasParent {\n    type: \"SpreadElement\"\n    argument: ESLintExpression\n}\n\nexport interface ESLintAssignmentPattern extends HasLocation, HasParent {\n    type: \"AssignmentPattern\"\n    left: ESLintPattern\n    right: ESLintExpression\n}\n\n/**\n * Legacy for babel-eslint and espree.\n */\nexport interface ESLintLegacyRestProperty extends HasLocation, HasParent {\n    type: \"RestProperty\" | \"ExperimentalRestProperty\"\n    argument: ESLintPattern\n}\n\n/**\n * Legacy for babel-eslint and espree.\n */\nexport interface ESLintLegacySpreadProperty extends HasLocation, HasParent {\n    type: \"SpreadProperty\" | \"ExperimentalSpreadProperty\"\n    argument: ESLintExpression\n}\n\n//------------------------------------------------------------------------------\n// Template\n//------------------------------------------------------------------------------\n\n/**\n * Constants of namespaces.\n * @see https://infra.spec.whatwg.org/#namespaces\n */\nexport const NS = Object.freeze({\n    HTML: \"http://www.w3.org/1999/xhtml\" as \"http://www.w3.org/1999/xhtml\",\n    MathML: \"http://www.w3.org/1998/Math/MathML\" as \"http://www.w3.org/1998/Math/MathML\",\n    SVG: \"http://www.w3.org/2000/svg\" as \"http://www.w3.org/2000/svg\",\n    XLink: \"http://www.w3.org/1999/xlink\" as \"http://www.w3.org/1999/xlink\",\n    XML: \"http://www.w3.org/XML/1998/namespace\" as \"http://www.w3.org/XML/1998/namespace\",\n    XMLNS: \"http://www.w3.org/2000/xmlns/\" as \"http://www.w3.org/2000/xmlns/\",\n})\n\n/**\n * Type of namespaces.\n */\nexport type Namespace =\n    | typeof NS.HTML\n    | typeof NS.MathML\n    | typeof NS.SVG\n    | typeof NS.XLink\n    | typeof NS.XML\n    | typeof NS.XMLNS\n\n/**\n * Type of variable definitions.\n */\nexport interface Variable {\n    id: ESLintIdentifier\n    kind: \"v-for\" | \"scope\"\n    references: Reference[]\n}\n\n/**\n * Type of variable references.\n */\nexport interface Reference {\n    id: ESLintIdentifier\n    mode: \"rw\" | \"r\" | \"w\"\n    variable: Variable | null\n}\n\n/**\n * The node of `v-for` directives.\n */\nexport interface VForExpression extends HasLocation, HasParent {\n    type: \"VForExpression\"\n    parent: VExpressionContainer\n    left: ESLintPattern[]\n    right: ESLintExpression\n}\n\n/**\n * The node of `v-on` directives.\n */\nexport interface VOnExpression extends HasLocation, HasParent {\n    type: \"VOnExpression\"\n    parent: VExpressionContainer\n    body: ESLintStatement[]\n}\n\n/**\n * The node of `slot-scope` directives.\n */\nexport interface VSlotScopeExpression extends HasLocation, HasParent {\n    type: \"VSlotScopeExpression\"\n    parent: VExpressionContainer\n    params: ESLintPattern[]\n}\n\n/**\n * The node of a filter sequence which is separated by `|`.\n */\nexport interface VFilterSequenceExpression extends HasLocation, HasParent {\n    type: \"VFilterSequenceExpression\"\n    parent: VExpressionContainer\n    expression: ESLintExpression\n    filters: VFilter[]\n}\n\n/**\n * The node of a filter sequence which is separated by `|`.\n */\nexport interface VFilter extends HasLocation, HasParent {\n    type: \"VFilter\"\n    parent: VFilterSequenceExpression\n    callee: ESLintIdentifier\n    arguments: (ESLintExpression | ESLintSpreadElement)[]\n}\n\n/**\n * The union type of any nodes.\n */\nexport type VNode =\n    | VAttribute\n    | VDirective\n    | VDirectiveKey\n    | VDocumentFragment\n    | VElement\n    | VEndTag\n    | VExpressionContainer\n    | VIdentifier\n    | VLiteral\n    | VStartTag\n    | VText\n\n/**\n * Text nodes.\n */\nexport interface VText extends HasLocation, HasParent {\n    type: \"VText\"\n    parent: VDocumentFragment | VElement\n    value: string\n}\n\n/**\n * The node of JavaScript expression in text.\n * e.g. `{{ name }}`\n */\nexport interface VExpressionContainer extends HasLocation, HasParent {\n    type: \"VExpressionContainer\"\n    parent: VDocumentFragment | VElement | VDirective | VDirectiveKey\n    expression:\n        | ESLintExpression\n        | VFilterSequenceExpression\n        | VForExpression\n        | VOnExpression\n        | VSlotScopeExpression\n        | null\n    references: Reference[]\n}\n\n/**\n * Attribute name nodes.\n */\nexport interface VIdentifier extends HasLocation, HasParent {\n    type: \"VIdentifier\"\n    parent: VAttribute | VDirectiveKey\n    name: string\n    rawName: string\n}\n\n/**\n * Attribute name nodes.\n */\nexport interface VDirectiveKey extends HasLocation, HasParent {\n    type: \"VDirectiveKey\"\n    parent: VDirective\n    name: VIdentifier\n    argument: VExpressionContainer | VIdentifier | null\n    modifiers: VIdentifier[]\n}\n\n/**\n * Attribute value nodes.\n */\nexport interface VLiteral extends HasLocation, HasParent {\n    type: \"VLiteral\"\n    parent: VAttribute\n    value: string\n}\n\n/**\n * Static attribute nodes.\n */\nexport interface VAttribute extends HasLocation, HasParent {\n    type: \"VAttribute\"\n    parent: VStartTag\n    directive: false\n    key: VIdentifier\n    value: VLiteral | null\n}\n\n/**\n * Directive nodes.\n */\nexport interface VDirective extends HasLocation, HasParent {\n    type: \"VAttribute\"\n    parent: VStartTag\n    directive: true\n    key: VDirectiveKey\n    value: VExpressionContainer | null\n}\n\n/**\n * Start tag nodes.\n */\nexport interface VStartTag extends HasLocation, HasParent {\n    type: \"VStartTag\"\n    parent: VElement\n    selfClosing: boolean\n    attributes: (VAttribute | VDirective)[]\n}\n\n/**\n * End tag nodes.\n */\nexport interface VEndTag extends HasLocation, HasParent {\n    type: \"VEndTag\"\n    parent: VElement\n}\n\n/**\n * The property which has concrete information.\n */\nexport interface HasConcreteInfo {\n    tokens: Token[]\n    comments: Token[]\n    errors: ParseError[]\n}\n\n/**\n * Element nodes.\n */\nexport interface VElement extends HasLocation, HasParent {\n    type: \"VElement\"\n    parent: VDocumentFragment | VElement\n    namespace: Namespace\n    name: string\n    rawName: string\n    startTag: VStartTag\n    children: (VElement | VText | VExpressionContainer)[]\n    endTag: VEndTag | null\n    variables: Variable[]\n}\n\n/**\n * Root nodes.\n */\nexport interface VDocumentFragment\n    extends HasLocation,\n        HasParent,\n        HasConcreteInfo {\n    type: \"VDocumentFragment\"\n    parent: null\n    children: (VElement | VText | VExpressionContainer | VStyleElement)[]\n}\n\n/**\n * Style element nodes.\n */\nexport interface VStyleElement extends VElement {\n    type: \"VElement\"\n    name: \"style\"\n    style: true\n    children: (VText | VExpressionContainer)[]\n}\n", "/**\n * @author Toru Nagashima <https://github.com/mysticatea>\n * @copyright 2017 Toru Nagashima. All rights reserved.\n * See LICENSE file in root directory for full license.\n */\nimport type { VisitorKeys } from \"eslint-visitor-keys\"\nimport Evk from \"eslint-visitor-keys\"\nimport type { Node } from \"./nodes\"\n\n//------------------------------------------------------------------------------\n// Helpers\n//------------------------------------------------------------------------------\n\nexport const KEYS = Evk.unionWith({\n    VAttribute: [\"key\", \"value\"],\n    VDirectiveKey: [\"name\", \"argument\", \"modifiers\"],\n    VDocumentFragment: [\"children\"],\n    VElement: [\"startTag\", \"children\", \"endTag\"],\n    VEndTag: [],\n    VExpressionContainer: [\"expression\"],\n    VFilter: [\"callee\", \"arguments\"],\n    VFilterSequenceExpression: [\"expression\", \"filters\"],\n    VForExpression: [\"left\", \"right\"],\n    VIdentifier: [],\n    VLiteral: [],\n    VOnExpression: [\"body\"],\n    VSlotScopeExpression: [\"params\"],\n    VStartTag: [\"attributes\"],\n    VText: [],\n})\n\n/**\n * Check that the given key should be traversed or not.\n * @this {Traversable}\n * @param key The key to check.\n * @returns `true` if the key should be traversed.\n */\nfunction fallbackKeysFilter(this: any, key: string): boolean {\n    let value = null\n    return (\n        key !== \"comments\" &&\n        key !== \"leadingComments\" &&\n        key !== \"loc\" &&\n        key !== \"parent\" &&\n        key !== \"range\" &&\n        key !== \"tokens\" &&\n        key !== \"trailingComments\" &&\n        (value = this[key]) !== null &&\n        typeof value === \"object\" &&\n        (typeof value.type === \"string\" || Array.isArray(value))\n    )\n}\n\n/**\n * Get the keys of the given node to traverse it.\n * @param node The node to get.\n * @returns The keys to traverse.\n */\nfunction getFallbackKeys(node: Node): string[] {\n    return Object.keys(node).filter(fallbackKeysFilter, node)\n}\n\n/**\n * Check wheather a given value is a node.\n * @param x The value to check.\n * @returns `true` if the value is a node.\n */\nfunction isNode(x: any): x is Node {\n    return x !== null && typeof x === \"object\" && typeof x.type === \"string\"\n}\n\n/**\n * Traverse the given node.\n * @param node The node to traverse.\n * @param parent The parent node.\n * @param visitor The node visitor.\n */\nfunction traverse(node: Node, parent: Node | null, visitor: Visitor): void {\n    let i = 0\n    let j = 0\n\n    visitor.enterNode(node, parent)\n\n    const keys =\n        (visitor.visitorKeys || KEYS)[node.type] || getFallbackKeys(node)\n    for (i = 0; i < keys.length; ++i) {\n        const child = (node as any)[keys[i]]\n\n        if (Array.isArray(child)) {\n            for (j = 0; j < child.length; ++j) {\n                if (isNode(child[j])) {\n                    traverse(child[j], node, visitor)\n                }\n            }\n        } else if (isNode(child)) {\n            traverse(child, node, visitor)\n        }\n    }\n\n    visitor.leaveNode(node, parent)\n}\n\n//------------------------------------------------------------------------------\n// Exports\n//------------------------------------------------------------------------------\n\nexport interface Visitor {\n    visitorKeys?: VisitorKeys\n    enterNode(node: Node, parent: Node | null): void\n    leaveNode(node: Node, parent: Node | null): void\n}\n\n/**\n * Traverse the given AST tree.\n * @param node Root node to traverse.\n * @param visitor Visitor.\n */\nexport function traverseNodes(node: Node, visitor: Visitor): void {\n    traverse(node, null, visitor)\n}\n\nexport { getFallbackKeys }\n", "import sortedLastIndex from \"lodash/sortedLastIndex\"\nimport type { Location } from \"../ast\"\n/**\n * A class for getting lines and columns location.\n */\nexport class LinesAndColumns {\n    protected ltOffsets: number[]\n\n    /**\n     * Initialize.\n     * @param ltOffsets The list of the offset of line terminators.\n     */\n    public constructor(ltOffsets: number[]) {\n        this.ltOffsets = ltOffsets\n    }\n\n    /**\n     * Calculate the location of the given index.\n     * @param index The index to calculate their location.\n     * @returns The location of the index.\n     */\n    public getLocFromIndex(index: number): Location {\n        const line = sortedLastIndex(this.ltOffsets, index) + 1\n        const column = index - (line === 1 ? 0 : this.ltOffsets[line - 2])\n        return { line, column }\n    }\n}\n", "/**\n * @author Toru Nagashima <https://github.com/mysticatea>\n * @copyright 2017 Toru Nagashima. All rights reserved.\n * See LICENSE file in root directory for full license.\n */\nimport sortedLastIndex from \"lodash/sortedLastIndex\"\nimport type { Location } from \"../ast\"\nimport { LinesAndColumns } from \"./lines-and-columns\"\n\n/**\n * Location calculators.\n */\nexport interface LocationCalculator {\n    /**\n     * Gets the fix location offset of the given offset with using the base offset of this calculator.\n     * @param offset The offset to modify.\n     */\n    getFixOffset(offset: number, kind: \"start\" | \"end\"): number\n\n    /**\n     * Calculate the location of the given index.\n     * @param index The index to calculate their location.\n     * @returns The location of the index.\n     */\n    getLocFromIndex(index: number): Location\n}\n\n/**\n * Location calculators.\n *\n * HTML tokenizers remove several characters to handle HTML entities and line terminators.\n * Tokens have the processed text as their value, but tokens have offsets and locations in the original text.\n * This calculator calculates the original locations from the processed texts.\n *\n * This calculator will be used for:\n *\n * - Adjusts the locations of script ASTs.\n * - Creates expression containers in postprocess.\n */\nexport class LocationCalculatorForHtml\n    extends LinesAndColumns\n    implements LocationCalculator\n{\n    private gapOffsets: number[]\n    private baseOffset: number\n    private baseIndexOfGap: number\n    private shiftOffset: number\n\n    /**\n     * Initialize this calculator.\n     * @param gapOffsets The list of the offset of removed characters in tokenization phase.\n     * @param ltOffsets The list of the offset of line terminators.\n     * @param baseOffset The base offset to calculate locations.\n     * @param shiftOffset The shift offset to calculate locations.\n     */\n    public constructor(\n        gapOffsets: number[],\n        ltOffsets: number[],\n        baseOffset?: number,\n        shiftOffset = 0,\n    ) {\n        super(ltOffsets)\n        this.gapOffsets = gapOffsets\n        this.ltOffsets = ltOffsets\n        this.baseOffset = baseOffset || 0\n        this.baseIndexOfGap =\n            this.baseOffset === 0\n                ? 0\n                : sortedLastIndex(gapOffsets, this.baseOffset)\n        this.shiftOffset = shiftOffset\n    }\n\n    /**\n     * Get sub calculator which have the given base offset.\n     * @param offset The base offset of new sub calculator.\n     * @returns Sub calculator.\n     */\n    public getSubCalculatorAfter(offset: number): LocationCalculatorForHtml {\n        return new LocationCalculatorForHtml(\n            this.gapOffsets,\n            this.ltOffsets,\n            this.baseOffset + offset,\n            this.shiftOffset,\n        )\n    }\n\n    /**\n     * Get sub calculator that shifts the given offset.\n     * @param offset The shift of new sub calculator.\n     * @returns Sub calculator.\n     */\n    public getSubCalculatorShift(offset: number): LocationCalculatorForHtml {\n        return new LocationCalculatorForHtml(\n            this.gapOffsets,\n            this.ltOffsets,\n            this.baseOffset,\n            this.shiftOffset + offset,\n        )\n    }\n\n    /**\n     * Calculate gap at the given index.\n     * @param index The index to calculate gap.\n     */\n    private _getGap(index: number): number {\n        const offsets = this.gapOffsets\n        let g0 = sortedLastIndex(offsets, index + this.baseOffset)\n        let pos = index + this.baseOffset + g0 - this.baseIndexOfGap\n\n        while (g0 < offsets.length && offsets[g0] <= pos) {\n            g0 += 1\n            pos += 1\n        }\n\n        return g0 - this.baseIndexOfGap\n    }\n\n    /**\n     * Calculate the location of the given index.\n     * @param index The index to calculate their location.\n     * @returns The location of the index.\n     */\n    public getLocation(index: number): Location {\n        return this.getLocFromIndex(this.getOffsetWithGap(index))\n    }\n\n    /**\n     * Calculate the offset of the given index.\n     * @param index The index to calculate their location.\n     * @returns The offset of the index.\n     */\n    public getOffsetWithGap(index: number): number {\n        return index + this.getFixOffset(index)\n    }\n\n    /**\n     * Gets the fix location offset of the given offset with using the base offset of this calculator.\n     * @param offset The offset to modify.\n     */\n    public getFixOffset(offset: number): number {\n        const shiftOffset = this.shiftOffset\n        const gap = this._getGap(offset + shiftOffset)\n        return this.baseOffset + gap + shiftOffset\n    }\n}\n", "/**\n * @author Toru Nagashima <https://github.com/mysticatea>\n * @copyright 2017 Toru Nagashima. All rights reserved.\n * See LICENSE file in root directory for full license.\n */\nimport debugFactory from \"debug\"\nexport const debug = debugFactory(\"vue-eslint-parser\")\n", "import type {\n    VAttribute,\n    VDirective,\n    VDocumentFragment,\n    VElement,\n    VNode,\n} from \"../ast\"\n\n/**\n * Check whether the node is a `<script>` element.\n * @param node The node to check.\n * @returns `true` if the node is a `<script>` element.\n */\nexport function isScriptElement(node: VNode): node is VElement {\n    return node.type === \"VElement\" && node.name === \"script\"\n}\n\n/**\n * Checks whether the given script element is `<script setup>`.\n */\nexport function isScriptSetupElement(script: VElement): boolean {\n    return (\n        isScriptElement(script) &&\n        script.startTag.attributes.some(\n            (attr) => !attr.directive && attr.key.name === \"setup\",\n        )\n    )\n}\n\n/**\n * Check whether the node is a `<template>` element.\n * @param node The node to check.\n * @returns `true` if the node is a `<template>` element.\n */\nexport function isTemplateElement(node: VNode): node is VElement {\n    return node.type === \"VElement\" && node.name === \"template\"\n}\n\n/**\n * Check whether the node is a `<style>` element.\n * @param node The node to check.\n * @returns `true` if the node is a `<style>` element.\n */\nexport function isStyleElement(node: VNode): node is VElement {\n    return node.type === \"VElement\" && node.name === \"style\"\n}\n\n/**\n * Get the belonging document of the given node.\n * @param leafNode The node to get.\n * @returns The belonging document.\n */\nexport function getOwnerDocument(leafNode: VNode): VDocumentFragment | null {\n    let node: VNode | null = leafNode\n    while (node != null && node.type !== \"VDocumentFragment\") {\n        node = node.parent\n    }\n    return node\n}\n\n/**\n * Check whether the attribute node is a `lang` attribute.\n * @param attribute The attribute node to check.\n * @returns `true` if the attribute node is a `lang` attribute.\n */\nexport function isLang(\n    attribute: VAttribute | VDirective,\n): attribute is VAttribute {\n    return attribute.directive === false && attribute.key.name === \"lang\"\n}\n\n/**\n * Get the `lang` attribute value from a given element.\n * @param element The element to get.\n * @param defaultLang The default value of the `lang` attribute.\n * @returns The `lang` attribute value.\n */\nexport function getLang(element: VElement | undefined): string | null {\n    const langAttr = element && element.startTag.attributes.find(isLang)\n    const lang = langAttr && langAttr.value && langAttr.value.value\n    return lang || null\n}\n", "import * as path from \"path\"\nimport type { VDocumentFragment } from \"../ast\"\nimport { getLang, isScriptElement, isScriptSetupElement } from \"./ast-utils\"\n\nexport interface ParserOptions {\n    // vue-eslint-parser options\n    parser?: boolean | string\n    vueFeatures?: {\n        interpolationAsNonHTML?: boolean // default false\n        filter?: boolean // default true\n        styleCSSVariableInjection?: boolean // default true\n    }\n\n    // espree options\n    ecmaVersion?: number | \"latest\"\n    sourceType?: \"script\" | \"module\"\n    ecmaFeatures?: { [key: string]: any }\n\n    // @typescript-eslint/parser options\n    jsxPragma?: string\n    jsxFragmentName?: string | null\n    lib?: string[]\n\n    project?: string | string[]\n    projectFolderIgnoreList?: string[]\n    tsconfigRootDir?: string\n    extraFileExtensions?: string[]\n    warnOnUnsupportedTypeScriptVersion?: boolean\n\n    // set by eslint\n    filePath?: string\n    // enables by eslint\n    comment?: boolean\n    loc?: boolean\n    range?: boolean\n    tokens?: boolean\n\n    // others\n    // [key: string]: any\n}\n\nexport function isSFCFile(parserOptions: ParserOptions) {\n    if (parserOptions.filePath === \"<input>\") {\n        return true\n    }\n    return path.extname(parserOptions.filePath || \"unknown.vue\") === \".vue\"\n}\n\n/**\n * Gets the script parser name from the given SFC document fragment.\n */\nexport function getScriptParser(\n    parser: boolean | string | Record<string, string | undefined> | undefined,\n    doc: VDocumentFragment | null,\n    block: \"script\" | \"template\",\n): string | undefined {\n    if (parser && typeof parser === \"object\") {\n        if (block === \"template\") {\n            const parserForTemplate = parser[\"<template>\"]\n            if (typeof parserForTemplate === \"string\") {\n                return parserForTemplate\n            }\n        }\n        const lang = getScriptLang()\n        if (lang) {\n            const parserForLang = parser[lang]\n            if (typeof parserForLang === \"string\") {\n                return parserForLang\n            }\n        }\n        return parser.js\n    }\n    return typeof parser === \"string\" ? parser : undefined\n\n    function getScriptLang() {\n        if (doc) {\n            const scripts = doc.children.filter(isScriptElement)\n            const script =\n                scripts.length === 2\n                    ? scripts.find(isScriptSetupElement)\n                    : scripts[0]\n            if (script) {\n                return getLang(script)\n            }\n        }\n        return null\n    }\n}\n", "import Module from \"module\"\nimport path from \"path\"\nexport const createRequire: (filename: string) => (modname: string) => any =\n    // Added in v12.2.0\n    (Module as any).createRequire ||\n    // Added in v10.12.0, but deprecated in v12.2.0.\n    // eslint-disable-next-line @mysticatea/node/no-deprecated-api\n    Module.createRequireFromPath ||\n    // Polyfill - This is not executed on the tests on node@>=10.\n    /* istanbul ignore next */\n    ((modname) => {\n        const mod = new Module(modname)\n\n        mod.filename = modname\n        mod.paths = (Module as any)._nodeModulePaths(path.dirname(modname))\n        ;(mod as any)._compile(\"module.exports = require;\", modname)\n        return mod.exports\n    })\n", "import path from \"path\"\nimport { createRequire } from \"./create-require\"\n\nfunction isLinterPath(p: string): boolean {\n    return (\n        // ESLint 6 and above\n        p.includes(\n            `eslint${path.sep}lib${path.sep}linter${path.sep}linter.js`,\n        ) ||\n        // ESLint 5\n        p.includes(`eslint${path.sep}lib${path.sep}linter.js`)\n    )\n}\n\nexport function getLinterRequire() {\n    // Lookup the loaded eslint\n    const linterPath = Object.keys(require.cache).find(isLinterPath)\n    if (linterPath) {\n        try {\n            return createRequire(linterPath)\n        } catch {\n            // ignore\n        }\n    }\n    return null\n}\n", "import escope from \"eslint-scope\"\nimport { getLinterRequire } from \"./linter-require\"\nimport { lte } from \"semver\"\n\nlet escopeCache: typeof escope | null = null\n\n/**\n * Load the newest `eslint-scope` from the loaded ESLint or dependency.\n */\nexport function getEslintScope(): typeof escope & {\n    version: string\n} {\n    if (!escopeCache) {\n        escopeCache = getLinterRequire()?.(\"eslint-scope\")\n        if (\n            !escopeCache ||\n            escopeCache.version == null ||\n            lte(escopeCache.version, escope.version)\n        ) {\n            escopeCache = escope\n        }\n    }\n\n    return escopeCache\n}\n", "import type { ESLintExtendedProgram, ESLintProgram } from \"../ast\"\nimport type { ParserOptions } from \"../common/parser-options\"\nimport { getLinterRequire } from \"./linter-require\"\n// @ts-expect-error -- ignore\nimport * as dependencyEspree from \"espree\"\nimport { lte, lt } from \"semver\"\nimport { createRequire } from \"./create-require\"\nimport path from \"path\"\n\n/**\n * The interface of a result of ESLint custom parser.\n */\nexport type ESLintCustomParserResult = ESLintProgram | ESLintExtendedProgram\n\n/**\n * The interface of ESLint custom parsers.\n */\nexport interface ESLintCustomParser {\n    parse(code: string, options: any): ESLintCustomParserResult\n    parseForESLint?(code: string, options: any): ESLintCustomParserResult\n}\ntype Espree = ESLintCustomParser & {\n    latestEcmaVersion?: number\n    version: string\n}\nlet espreeCache: Espree | null = null\n\n/**\n * Gets the espree that the given ecmaVersion can parse.\n */\nexport function getEspreeFromEcmaVersion(\n    ecmaVersion: ParserOptions[\"ecmaVersion\"],\n): Espree {\n    const linterEspree = getEspreeFromLinter()\n    if (ecmaVersion == null) {\n        return linterEspree\n    }\n    if (ecmaVersion === \"latest\") {\n        return getNewestEspree()\n    }\n    if (\n        normalizeEcmaVersion(ecmaVersion) <= getLatestEcmaVersion(linterEspree)\n    ) {\n        return linterEspree\n    }\n    const userEspree = getEspreeFromUser()\n    if (normalizeEcmaVersion(ecmaVersion) <= getLatestEcmaVersion(userEspree)) {\n        return userEspree\n    }\n    return linterEspree\n}\n\n/**\n * Load `espree` from the user dir.\n */\nexport function getEspreeFromUser(): Espree {\n    try {\n        const cwd = process.cwd()\n        const relativeTo = path.join(cwd, \"__placeholder__.js\")\n        return createRequire(relativeTo)(\"espree\")\n    } catch {\n        return getEspreeFromLinter()\n    }\n}\n\n/**\n * Load `espree` from the loaded ESLint.\n * If the loaded ESLint was not found, just returns `require(\"espree\")`.\n */\nexport function getEspreeFromLinter(): Espree {\n    if (!espreeCache) {\n        espreeCache = getLinterRequire()?.(\"espree\")\n        if (!espreeCache) {\n            espreeCache = dependencyEspree\n        }\n    }\n\n    return espreeCache!\n}\n\n/**\n * Load the newest `espree` from the loaded ESLint or dependency.\n */\nfunction getNewestEspree(): Espree {\n    let newest = dependencyEspree\n    const linterEspree = getEspreeFromLinter()\n    if (\n        linterEspree.version != null &&\n        lte(newest.version, linterEspree.version)\n    ) {\n        newest = linterEspree\n    }\n    const userEspree = getEspreeFromUser()\n    if (userEspree.version != null && lte(newest.version, userEspree.version)) {\n        newest = userEspree\n    }\n    return newest\n}\n\nexport function getEcmaVersionIfUseEspree(\n    parserOptions: ParserOptions,\n    getDefault?: (defaultVer: number) => number,\n): number | undefined {\n    if (parserOptions.parser != null && parserOptions.parser !== \"espree\") {\n        return undefined\n    }\n\n    if (parserOptions.ecmaVersion === \"latest\") {\n        return normalizeEcmaVersion(getLatestEcmaVersion(getNewestEspree()))\n    }\n    if (parserOptions.ecmaVersion == null) {\n        const defVer = getDefaultEcmaVersion()\n        return getDefault?.(defVer) ?? defVer\n    }\n    return normalizeEcmaVersion(parserOptions.ecmaVersion)\n}\n\nfunction getDefaultEcmaVersion(): number {\n    if (lt(getEspreeFromLinter().version, \"9.0.0\")) {\n        return 5\n    }\n    // Perhaps the version 9 will change the default to \"latest\".\n    return normalizeEcmaVersion(getLatestEcmaVersion(getNewestEspree()))\n}\n\n/**\n * Normalize ECMAScript version\n */\nfunction normalizeEcmaVersion(version: number) {\n    if (version > 5 && version < 2015) {\n        return version + 2009\n    }\n    return version\n}\n\nfunction getLatestEcmaVersion(espree: Espree) {\n    if (espree.latestEcmaVersion == null) {\n        for (const { v, latest } of [\n            { v: \"6.1.0\", latest: 2020 },\n            { v: \"4.0.0\", latest: 2019 },\n        ]) {\n            if (lte(v, espree.version)) {\n                return latest\n            }\n        }\n        return 2018\n    }\n    return normalizeEcmaVersion(espree.latestEcmaVersion)\n}\n", "/**\n * @author Toru Nagashima <https://github.com/mysticatea>\n * @copyright 2017 Toru Nagashima. All rights reserved.\n * See LICENSE file in root directory for full license.\n */\nimport type * as escopeTypes from \"eslint-scope\"\nimport type { ParserOptions } from \"../common/parser-options\"\nimport type {\n    ESLintIdentifier,\n    ESLintProgram,\n    Reference,\n    Variable,\n} from \"../ast\"\nimport { getFallbackKeys } from \"../ast\"\nimport { getEslintScope } from \"../common/eslint-scope\"\nimport { getEcmaVersionIfUseEspree } from \"../common/espree\"\n\n/**\n * Check whether the given reference is unique in the belonging array.\n * @param reference The current reference to check.\n * @param index The index of the reference.\n * @param references The belonging array of the reference.\n */\nfunction isUnique(\n    reference: escopeTypes.Reference,\n    index: number,\n    references: escopeTypes.Reference[],\n): boolean {\n    return (\n        index === 0 || reference.identifier !== references[index - 1].identifier\n    )\n}\n\n/**\n * Check whether a given variable has that definition.\n * @param variable The variable to check.\n * @returns `true` if the variable has that definition.\n */\nfunction hasDefinition(variable: escopeTypes.Variable): boolean {\n    return variable.defs.length >= 1\n}\n\n/**\n * Transform the given reference object.\n * @param reference The source reference object.\n * @returns The transformed reference object.\n */\nfunction transformReference(reference: escopeTypes.Reference): Reference {\n    const ret: Reference = {\n        id: reference.identifier as ESLintIdentifier,\n        mode: reference.isReadOnly()\n            ? \"r\"\n            : reference.isWriteOnly()\n            ? \"w\"\n            : /* otherwise */ \"rw\",\n        variable: null,\n    }\n    Object.defineProperty(ret, \"variable\", { enumerable: false })\n\n    return ret\n}\n\n/**\n * Transform the given variable object.\n * @param variable The source variable object.\n * @returns The transformed variable object.\n */\nfunction transformVariable(variable: escopeTypes.Variable): Variable {\n    const ret: Variable = {\n        id: variable.defs[0].name as ESLintIdentifier,\n        kind: variable.scope.type === \"for\" ? \"v-for\" : \"scope\",\n        references: [],\n    }\n    Object.defineProperty(ret, \"references\", { enumerable: false })\n\n    return ret\n}\n\n/**\n * Get the `for` statement scope.\n * @param scope The global scope.\n * @returns The `for` statement scope.\n */\nfunction getForScope(scope: escopeTypes.Scope): escopeTypes.Scope {\n    const child = scope.childScopes[0]\n    return child.block === scope.block ? child.childScopes[0] : child\n}\n\n/**\n *\n * @param ast\n * @param parserOptions\n */\nfunction analyze(\n    ast: ESLintProgram,\n    parserOptions: ParserOptions,\n): escopeTypes.Scope {\n    const ecmaVersion = getEcmaVersionIfUseEspree(parserOptions) || 2022\n    const ecmaFeatures = parserOptions.ecmaFeatures || {}\n    const sourceType = parserOptions.sourceType || \"script\"\n    const result = getEslintScope().analyze(ast, {\n        ignoreEval: true,\n        nodejsScope: false,\n        impliedStrict: ecmaFeatures.impliedStrict,\n        ecmaVersion,\n        sourceType,\n        fallback: getFallbackKeys,\n    })\n\n    return result.globalScope\n}\n\n/**\n * Analyze the external references of the given AST.\n * @param {ASTNode} ast The root node to analyze.\n * @returns {Reference[]} The reference objects of external references.\n */\nexport function analyzeExternalReferences(\n    ast: ESLintProgram,\n    parserOptions: ParserOptions,\n): Reference[] {\n    const scope = analyze(ast, parserOptions)\n    return scope.through.filter(isUnique).map(transformReference)\n}\n\n/**\n * Analyze the external references of the given AST.\n * @param {ASTNode} ast The root node to analyze.\n * @returns {Reference[]} The reference objects of external references.\n */\nexport function analyzeVariablesAndExternalReferences(\n    ast: ESLintProgram,\n    parserOptions: ParserOptions,\n): { variables: Variable[]; references: Reference[] } {\n    const scope = analyze(ast, parserOptions)\n    return {\n        variables: getForScope(scope)\n            .variables.filter(hasDefinition)\n            .map(transformVariable),\n        references: scope.through.filter(isUnique).map(transformReference),\n    }\n}\n", "import type {\n    ESLintExtendedProgram,\n    ESLintNode,\n    HasLocation,\n    LocationRange,\n    Node,\n    ParseError,\n} from \"../ast\"\nimport { traverseNodes } from \"../ast\"\nimport type { LocationCalculator } from \"./location-calculator\"\n\n/**\n * Do post-process of parsing an expression.\n *\n * 1. Set `node.parent`.\n * 2. Fix `node.range` and `node.loc` for HTML entities.\n *\n * @param result The parsing result to modify.\n * @param locationCalculator The location calculator to modify.\n */\nexport function fixLocations(\n    result: ESLintExtendedProgram,\n    locationCalculator: LocationCalculator,\n): void {\n    fixNodeLocations(result.ast, result.visitorKeys, locationCalculator)\n\n    for (const token of result.ast.tokens || []) {\n        fixLocation(token, locationCalculator)\n    }\n    for (const comment of result.ast.comments || []) {\n        fixLocation(comment, locationCalculator)\n    }\n}\n\nexport function fixNodeLocations(\n    rootNode: ESLintNode,\n    visitorKeys: ESLintExtendedProgram[\"visitorKeys\"],\n    locationCalculator: LocationCalculator,\n): void {\n    // There are cases which the same node instance appears twice in the tree.\n    // E.g. `let {a} = {}` // This `a` appears twice at `Property#key` and `Property#value`.\n    const traversed = new Map<Node | number[] | LocationRange, Node>()\n\n    traverseNodes(rootNode, {\n        visitorKeys,\n\n        enterNode(node, parent) {\n            if (!traversed.has(node)) {\n                traversed.set(node, node)\n                node.parent = parent\n\n                // `babel-eslint@8` has shared `Node#range` with multiple nodes.\n                // See also: https://github.com/vuejs/eslint-plugin-vue/issues/208\n                if (traversed.has(node.range)) {\n                    if (!traversed.has(node.loc)) {\n                        // However, `Node#loc` may not be shared.\n                        // See also: https://github.com/vuejs/vue-eslint-parser/issues/84\n                        node.loc.start = locationCalculator.getLocFromIndex(\n                            node.range[0],\n                        )\n                        node.loc.end = locationCalculator.getLocFromIndex(\n                            node.range[1],\n                        )\n                        traversed.set(node.loc, node)\n                    } else if (node.start != null || node.end != null) {\n                        const traversedNode = traversed.get(node.range)!\n                        if (traversedNode.type === node.type) {\n                            node.start = traversedNode.start\n                            node.end = traversedNode.end\n                        }\n                    }\n                } else {\n                    fixLocation(node, locationCalculator)\n                    traversed.set(node.range, node)\n                    traversed.set(node.loc, node)\n                }\n            }\n        },\n\n        leaveNode() {\n            // Do nothing.\n        },\n    })\n}\n\n/**\n * Modify the location information of the given node with using the base offset and gaps of this calculator.\n * @param node The node to modify their location.\n */\nexport function fixLocation<T extends HasLocation>(\n    node: T,\n    locationCalculator: LocationCalculator,\n): T {\n    const range = node.range\n    const loc = node.loc\n    const d0 = locationCalculator.getFixOffset(range[0], \"start\")\n    const d1 = locationCalculator.getFixOffset(range[1], \"end\")\n\n    if (d0 !== 0) {\n        range[0] += d0\n        if (node.start != null) {\n            node.start += d0\n        }\n        loc.start = locationCalculator.getLocFromIndex(range[0])\n    }\n    if (d1 !== 0) {\n        range[1] += d1\n        if (node.end != null) {\n            node.end += d0\n        }\n        loc.end = locationCalculator.getLocFromIndex(range[1])\n    }\n\n    return node\n}\n\n/**\n * Modify the location information of the given error with using the base offset and gaps of this calculator.\n * @param error The error to modify their location.\n */\nexport function fixErrorLocation(\n    error: ParseError,\n    locationCalculator: LocationCalculator,\n) {\n    const diff = locationCalculator.getFixOffset(error.index, \"start\")\n\n    error.index += diff\n\n    const loc = locationCalculator.getLocFromIndex(error.index)\n    error.lineNumber = loc.line\n    error.column = loc.column\n}\n", "import { lte } from \"semver\"\nimport { getEcmaVersionIfUseEspree, getEspreeFromUser } from \"../common/espree\"\nimport type { ParserOptions } from \"../common/parser-options\"\n\nexport const DEFAULT_ECMA_VERSION = 2017\n\n/**\n * Get parser options for <script setup>\n */\nexport function getScriptSetupParserOptions(\n    parserOptions: ParserOptions,\n): ParserOptions {\n    const espreeEcmaVersion = getEcmaVersionIfUseEspree(\n        parserOptions,\n        getDefaultEcmaVersion,\n    )\n\n    return {\n        ...parserOptions,\n        ecmaVersion: espreeEcmaVersion,\n    }\n}\n\nfunction getDefaultEcmaVersion(def: number) {\n    if (lte(\"8.0.0\", getEspreeFromUser().version)) {\n        // Script setup requires top level await support, so default the ecma version to 2022.\n        return getEspreeFromUser().latestEcmaVersion!\n    }\n    return Math.max(def, DEFAULT_ECMA_VERSION)\n}\n", "/**\n * @author Toru Nagashima <https://github.com/mysticatea>\n * @copyright 2017 Toru Nagashima. All rights reserved.\n * See LICENSE file in root directory for full license.\n */\nimport first from \"lodash/first\"\nimport last from \"lodash/last\"\nimport sortedIndexBy from \"lodash/sortedIndexBy\"\nimport type {\n    ESLintArrayExpression,\n    ESLintArrayPattern,\n    ESLintCallExpression,\n    ESLintExpression,\n    ESLintExpressionStatement,\n    ESLintExtendedProgram,\n    ESLintForInStatement,\n    ESLintForOfStatement,\n    ESLintFunctionExpression,\n    ESLintIdentifier,\n    ESLintUnaryExpression,\n    ESLintVariableDeclaration,\n    HasLocation,\n    Node,\n    Reference,\n    Token,\n    Variable,\n    VElement,\n    VFilter,\n    VFilterSequenceExpression,\n    VForExpression,\n    VOnExpression,\n    VSlotScopeExpression,\n    OffsetRange,\n} from \"../ast\"\nimport { ParseError } from \"../ast\"\nimport { debug } from \"../common/debug\"\nimport type {\n    LocationCalculator,\n    LocationCalculatorForHtml,\n} from \"../common/location-calculator\"\nimport {\n    analyzeExternalReferences,\n    analyzeVariablesAndExternalReferences,\n} from \"./scope-analyzer\"\nimport type { ESLintCustomParser } from \"../common/espree\"\nimport {\n    getEcmaVersionIfUseEspree,\n    getEspreeFromUser,\n    getEspreeFromEcmaVersion,\n} from \"../common/espree\"\nimport type { ParserOptions } from \"../common/parser-options\"\nimport {\n    fixErrorLocation,\n    fixLocation,\n    fixLocations,\n} from \"../common/fix-locations\"\nimport {\n    DEFAULT_ECMA_VERSION,\n    getScriptSetupParserOptions,\n} from \"../script-setup/parser-options\"\nimport { isScriptSetupElement } from \"../common/ast-utils\"\n\n// [1] = aliases.\n// [2] = delimiter.\n// [3] = iterator.\nconst ALIAS_ITERATOR = /^([\\s\\S]*?(?:\\s|\\)))(\\bin\\b|\\bof\\b)([\\s\\S]*)$/u\nconst PARENS = /^(\\s*\\()([\\s\\S]*?)(\\)\\s*)$/u\nconst DUMMY_PARENT: any = {}\n\n// Like Vue, it judges whether it is a function expression or not.\n// https://github.com/vuejs/vue/blob/0948d999f2fddf9f90991956493f976273c5da1f/src/compiler/codegen/events.js#L3\nconst IS_FUNCTION_EXPRESSION = /^\\s*([\\w$_]+|\\([^)]*?\\))\\s*=>|^function\\s*\\(/u\nconst IS_SIMPLE_PATH =\n    /^[A-Za-z_$][\\w$]*(?:\\.[A-Za-z_$][\\w$]*|\\['[^']*?'\\]|\\[\"[^\"]*?\"\\]|\\[\\d+\\]|\\[[A-Za-z_$][\\w$]*\\])*$/u\n\n/**\n * Parse the alias and iterator of 'v-for' directive values.\n * @param code The code to parse.\n * @returns The parsed result.\n */\nfunction processVForAliasAndIterator(code: string): {\n    aliases: string\n    hasParens: boolean\n    delimiter: string\n    iterator: string\n    aliasesWithBrackets: string\n} {\n    const match = ALIAS_ITERATOR.exec(code)\n    if (match != null) {\n        const aliases = match[1]\n        const parenMatch = PARENS.exec(aliases)\n        return {\n            aliases,\n            hasParens: Boolean(parenMatch),\n            aliasesWithBrackets: parenMatch\n                ? `${parenMatch[1].slice(0, -1)}[${\n                      parenMatch[2]\n                  }]${parenMatch[3].slice(1)}`\n                : `[${aliases.slice(0, -1)}]`,\n            delimiter: match[2] || \"\",\n            iterator: match[3],\n        }\n    }\n    return {\n        aliases: \"\",\n        hasParens: false,\n        aliasesWithBrackets: \"\",\n        delimiter: \"\",\n        iterator: code,\n    }\n}\n\n/**\n * Get the comma token before a given node.\n * @param tokens The token list.\n * @param node The node to get the comma before this node.\n * @returns The comma token.\n */\nfunction getCommaTokenBeforeNode(tokens: Token[], node: Node): Token | null {\n    let tokenIndex = sortedIndexBy(\n        tokens as { range: OffsetRange }[],\n        { range: node.range },\n        (t) => t.range[0],\n    )\n\n    while (tokenIndex >= 0) {\n        const token = tokens[tokenIndex]\n        if (token.type === \"Punctuator\" && token.value === \",\") {\n            return token\n        }\n        tokenIndex -= 1\n    }\n\n    return null\n}\n\n/**\n * Throw syntax error for empty.\n * @param locationCalculator The location calculator to get line/column.\n */\nfunction throwEmptyError(\n    locationCalculator: LocationCalculatorForHtml,\n    expected: string,\n): never {\n    const loc = locationCalculator.getLocation(0)\n    const err = new ParseError(\n        `Expected to be ${expected}, but got empty.`,\n        undefined,\n        0,\n        loc.line,\n        loc.column,\n    )\n    fixErrorLocation(err, locationCalculator)\n\n    throw err\n}\n\n/**\n * Throw syntax error for unexpected token.\n * @param locationCalculator The location calculator to get line/column.\n * @param name The token name.\n * @param token The token object to get that location.\n */\nfunction throwUnexpectedTokenError(name: string, token: HasLocation): never {\n    const err = new ParseError(\n        `Unexpected token '${name}'.`,\n        undefined,\n        token.range[0],\n        token.loc.start.line,\n        token.loc.start.column,\n    )\n\n    throw err\n}\n\n/**\n * Throw syntax error of outside of code.\n * @param locationCalculator The location calculator to get line/column.\n */\nfunction throwErrorAsAdjustingOutsideOfCode(\n    err: any,\n    code: string,\n    locationCalculator: LocationCalculatorForHtml,\n): never {\n    if (ParseError.isParseError(err)) {\n        const endOffset = locationCalculator.getOffsetWithGap(code.length)\n        if (err.index >= endOffset) {\n            err.message = \"Unexpected end of expression.\"\n        }\n    }\n\n    throw err\n}\n\n/**\n * Parse the given source code.\n *\n * @param code The source code to parse.\n * @param locationCalculator The location calculator for fixLocations.\n * @param parserOptions The parser options.\n * @returns The result of parsing.\n */\nexport function parseScriptFragment(\n    code: string,\n    locationCalculator: LocationCalculator,\n    parserOptions: ParserOptions,\n): ESLintExtendedProgram {\n    try {\n        const result = parseScript(code, parserOptions)\n        fixLocations(result, locationCalculator)\n        return result\n    } catch (err) {\n        const perr = ParseError.normalize(err)\n        if (perr) {\n            fixErrorLocation(perr, locationCalculator)\n            throw perr\n        }\n        throw err\n    }\n}\n\nconst validDivisionCharRE = /[\\w).+\\-_$\\]]/u\n\n/**\n * This is a fork of https://github.com/vuejs/vue/blob/2686818beb5728e3b7aa22f47a3b3f0d39d90c8e/src/compiler/parser/filter-parser.js\n * @param exp the expression to process filters.\n */\n//eslint-disable-next-line complexity\nfunction splitFilters(exp: string): string[] {\n    const result: string[] = []\n    let inSingle = false\n    let inDouble = false\n    let inTemplateString = false\n    let inRegex = false\n    let curly = 0\n    let square = 0\n    let paren = 0\n    let lastFilterIndex = 0\n    let c = 0\n    let prev = 0\n\n    for (let i = 0; i < exp.length; i++) {\n        prev = c\n        c = exp.charCodeAt(i)\n        if (inSingle) {\n            if (c === 0x27 && prev !== 0x5c) {\n                inSingle = false\n            }\n        } else if (inDouble) {\n            if (c === 0x22 && prev !== 0x5c) {\n                inDouble = false\n            }\n        } else if (inTemplateString) {\n            if (c === 0x60 && prev !== 0x5c) {\n                inTemplateString = false\n            }\n        } else if (inRegex) {\n            if (c === 0x2f && prev !== 0x5c) {\n                inRegex = false\n            }\n        } else if (\n            c === 0x7c && // pipe\n            exp.charCodeAt(i + 1) !== 0x7c &&\n            exp.charCodeAt(i - 1) !== 0x7c &&\n            !curly &&\n            !square &&\n            !paren\n        ) {\n            result.push(exp.slice(lastFilterIndex, i))\n            lastFilterIndex = i + 1\n        } else {\n            switch (c) {\n                case 0x22: // \"\n                    inDouble = true\n                    break\n                case 0x27: // '\n                    inSingle = true\n                    break\n                case 0x60: // `\n                    inTemplateString = true\n                    break\n                case 0x28: // (\n                    paren++\n                    break\n                case 0x29: // )\n                    paren--\n                    break\n                case 0x5b: // [\n                    square++\n                    break\n                case 0x5d: // ]\n                    square--\n                    break\n                case 0x7b: // {\n                    curly++\n                    break\n                case 0x7d: // }\n                    curly--\n                    break\n                // no default\n            }\n            if (c === 0x2f) {\n                // /\n                let j = i - 1\n                let p\n                // find first non-whitespace prev char\n                for (; j >= 0; j--) {\n                    p = exp.charAt(j)\n                    if (p !== \" \") {\n                        break\n                    }\n                }\n                if (!p || !validDivisionCharRE.test(p)) {\n                    inRegex = true\n                }\n            }\n        }\n    }\n\n    result.push(exp.slice(lastFilterIndex))\n\n    return result\n}\n\n/**\n * Parse the source code of inline scripts.\n * @param code The source code of inline scripts.\n * @param locationCalculator The location calculator for the inline script.\n * @param parserOptions The parser options.\n * @returns The result of parsing.\n */\nfunction parseExpressionBody(\n    code: string,\n    locationCalculator: LocationCalculatorForHtml,\n    parserOptions: ParserOptions,\n    allowEmpty = false,\n): ExpressionParseResult<ESLintExpression> {\n    debug('[script] parse expression: \"0(%s)\"', code)\n\n    try {\n        const ast = parseScriptFragment(\n            `0(${code})`,\n            locationCalculator.getSubCalculatorShift(-2),\n            parserOptions,\n        ).ast\n        const tokens = ast.tokens || []\n        const comments = ast.comments || []\n        const references = analyzeExternalReferences(ast, parserOptions)\n        const statement = ast.body[0] as ESLintExpressionStatement\n        const callExpression = statement.expression as ESLintCallExpression\n        const expression = callExpression.arguments[0]\n\n        if (!allowEmpty && !expression) {\n            return throwEmptyError(locationCalculator, \"an expression\")\n        }\n        if (expression && expression.type === \"SpreadElement\") {\n            return throwUnexpectedTokenError(\"...\", expression)\n        }\n        if (callExpression.arguments[1]) {\n            const node = callExpression.arguments[1]\n            return throwUnexpectedTokenError(\n                \",\",\n                getCommaTokenBeforeNode(tokens, node) || node,\n            )\n        }\n\n        // Remove parens.\n        tokens.shift()\n        tokens.shift()\n        tokens.pop()\n\n        return { expression, tokens, comments, references, variables: [] }\n    } catch (err) {\n        return throwErrorAsAdjustingOutsideOfCode(err, code, locationCalculator)\n    }\n}\n\n/**\n * Parse the source code of inline scripts.\n * @param code The source code of inline scripts.\n * @param locationCalculator The location calculator for the inline script.\n * @param parserOptions The parser options.\n * @returns The result of parsing.\n */\nfunction parseFilter(\n    code: string,\n    locationCalculator: LocationCalculatorForHtml,\n    parserOptions: ParserOptions,\n): ExpressionParseResult<VFilter> | null {\n    debug('[script] parse filter: \"%s\"', code)\n\n    try {\n        const expression: VFilter = {\n            type: \"VFilter\",\n            parent: null as any,\n            range: [0, 0],\n            loc: {} as any,\n            callee: null as any,\n            arguments: [],\n        }\n        const tokens: Token[] = []\n        const comments: Token[] = []\n        const references: Reference[] = []\n\n        // Parse the callee.\n        const paren = code.indexOf(\"(\")\n        const calleeCode = paren === -1 ? code : code.slice(0, paren)\n        const argsCode = paren === -1 ? null : code.slice(paren)\n\n        // Parse the callee.\n        if (calleeCode.trim()) {\n            const spaces = /^\\s*/u.exec(calleeCode)![0]\n            const subCalculator = locationCalculator.getSubCalculatorShift(\n                spaces.length,\n            )\n            const { ast } = parseScriptFragment(\n                `\"${calleeCode.trim()}\"`,\n                subCalculator,\n                parserOptions,\n            )\n            const statement = ast.body[0] as ESLintExpressionStatement\n            const callee = statement.expression\n            if (callee.type !== \"Literal\") {\n                const { loc, range } = ast.tokens![0]\n                return throwUnexpectedTokenError('\"', {\n                    range: [range[1] - 1, range[1]],\n                    loc: {\n                        start: {\n                            line: loc.end.line,\n                            column: loc.end.column - 1,\n                        },\n                        end: loc.end,\n                    },\n                })\n            }\n\n            expression.callee = {\n                type: \"Identifier\",\n                parent: expression,\n                range: [\n                    callee.range[0],\n                    subCalculator.getOffsetWithGap(calleeCode.trim().length),\n                ],\n                loc: {\n                    start: callee.loc.start,\n                    end: subCalculator.getLocation(calleeCode.trim().length),\n                },\n                name: String(callee.value),\n            }\n            tokens.push({\n                type: \"Identifier\",\n                value: calleeCode.trim(),\n                range: expression.callee.range,\n                loc: expression.callee.loc,\n            })\n        } else {\n            return throwEmptyError(locationCalculator, \"a filter name\")\n        }\n\n        // Parse the arguments.\n        if (argsCode != null) {\n            const { ast } = parseScriptFragment(\n                `0${argsCode}`,\n                locationCalculator\n                    .getSubCalculatorAfter(paren)\n                    .getSubCalculatorShift(-1),\n                parserOptions,\n            )\n            const statement = ast.body[0] as ESLintExpressionStatement\n            const callExpression = statement.expression\n\n            ast.tokens!.shift()\n\n            if (\n                callExpression.type !== \"CallExpression\" ||\n                callExpression.callee.type !== \"Literal\"\n            ) {\n                // Report the next token of `)`.\n                let nestCount = 1\n                for (const token of ast.tokens!.slice(1)) {\n                    if (nestCount === 0) {\n                        return throwUnexpectedTokenError(token.value, token)\n                    }\n                    if (token.type === \"Punctuator\" && token.value === \"(\") {\n                        nestCount += 1\n                    }\n                    if (token.type === \"Punctuator\" && token.value === \")\") {\n                        nestCount -= 1\n                    }\n                }\n\n                const token = last(ast.tokens)!\n                return throwUnexpectedTokenError(token.value, token)\n            }\n\n            for (const argument of callExpression.arguments) {\n                argument.parent = expression\n                expression.arguments.push(argument)\n            }\n            tokens.push(...ast.tokens!)\n            comments.push(...ast.comments!)\n            references.push(...analyzeExternalReferences(ast, parserOptions))\n        }\n\n        // Update range.\n        const firstToken = tokens[0]\n        const lastToken = last(tokens)!\n        expression.range = [firstToken.range[0], lastToken.range[1]]\n        expression.loc = { start: firstToken.loc.start, end: lastToken.loc.end }\n\n        return { expression, tokens, comments, references, variables: [] }\n    } catch (err) {\n        return throwErrorAsAdjustingOutsideOfCode(err, code, locationCalculator)\n    }\n}\n\n/**\n * The result of parsing expressions.\n */\nexport interface ExpressionParseResult<T extends Node> {\n    expression: T | null\n    tokens: Token[]\n    comments: Token[]\n    references: Reference[]\n    variables: Variable[]\n}\n\nfunction loadParser(parser: string) {\n    if (parser !== \"espree\") {\n        // eslint-disable-next-line @mysticatea/ts/no-require-imports\n        return require(parser)\n    }\n    return getEspreeFromUser()\n}\n\n/**\n * Parse the given source code.\n *\n * @param code The source code to parse.\n * @param parserOptions The parser options.\n * @returns The result of parsing.\n */\nexport function parseScript(\n    code: string,\n    parserOptions: ParserOptions,\n): ESLintExtendedProgram {\n    const parser: ESLintCustomParser =\n        typeof parserOptions.parser === \"string\"\n            ? loadParser(parserOptions.parser)\n            : getEspreeFromEcmaVersion(parserOptions.ecmaVersion)\n\n    const result: any =\n        typeof parser.parseForESLint === \"function\"\n            ? parser.parseForESLint(code, parserOptions)\n            : parser.parse(code, parserOptions)\n\n    if (result.ast != null) {\n        return result\n    }\n    return { ast: result }\n}\n\n/**\n * Parse the source code of the given `<script>` element.\n * @param node The `<script>` element to parse.\n * @param globalLocationCalculator The location calculator for fixLocations.\n * @param parserOptions The parser options.\n * @returns The result of parsing.\n */\nexport function parseScriptElement(\n    node: VElement,\n    globalLocationCalculator: LocationCalculatorForHtml,\n    originalParserOptions: ParserOptions,\n): ESLintExtendedProgram {\n    const parserOptions: ParserOptions = isScriptSetupElement(node)\n        ? getScriptSetupParserOptions(originalParserOptions)\n        : {\n              ...originalParserOptions,\n              ecmaVersion:\n                  originalParserOptions.ecmaVersion || DEFAULT_ECMA_VERSION,\n          }\n\n    const text = node.children[0]\n    const { code, offset } =\n        text != null && text.type === \"VText\"\n            ? { code: text.value, offset: text.range[0] }\n            : { code: \"\", offset: node.startTag.range[1] }\n    const locationCalculator =\n        globalLocationCalculator.getSubCalculatorAfter(offset)\n    const result = parseScriptFragment(code, locationCalculator, parserOptions)\n\n    // Needs the tokens of start/end tags for `lines-around-*` rules to work\n    // correctly.\n    if (result.ast.tokens != null) {\n        const startTag = node.startTag\n        const endTag = node.endTag\n\n        result.ast.tokens.unshift({\n            type: \"Punctuator\",\n            range: startTag.range,\n            loc: startTag.loc,\n            value: \"<script>\",\n        })\n        if (endTag != null) {\n            result.ast.tokens.push({\n                type: \"Punctuator\",\n                range: endTag.range,\n                loc: endTag.loc,\n                value: \"</script>\",\n            })\n        }\n    }\n\n    return result\n}\n\n/**\n * Parse the source code of inline scripts.\n * @param code The source code of inline scripts.\n * @param locationCalculator The location calculator for the inline script.\n * @param parserOptions The parser options.\n * @returns The result of parsing.\n */\nexport function parseExpression(\n    code: string,\n    locationCalculator: LocationCalculatorForHtml,\n    parserOptions: ParserOptions,\n    { allowEmpty = false, allowFilters = false } = {},\n): ExpressionParseResult<ESLintExpression | VFilterSequenceExpression> {\n    debug('[script] parse expression: \"%s\"', code)\n\n    const [mainCode, ...filterCodes] =\n        allowFilters && (parserOptions.vueFeatures?.filter ?? true)\n            ? splitFilters(code)\n            : [code]\n    if (filterCodes.length === 0) {\n        return parseExpressionBody(\n            code,\n            locationCalculator,\n            parserOptions,\n            allowEmpty,\n        )\n    }\n\n    // Parse expression\n    const retB = parseExpressionBody(\n        mainCode,\n        locationCalculator,\n        parserOptions,\n    )\n    if (!retB.expression) {\n        return retB\n    }\n    const ret =\n        retB as unknown as ExpressionParseResult<VFilterSequenceExpression>\n\n    ret.expression = {\n        type: \"VFilterSequenceExpression\",\n        parent: null as any,\n        expression: retB.expression,\n        filters: [],\n        range: retB.expression.range.slice(0) as [number, number],\n        loc: Object.assign({}, retB.expression.loc),\n    }\n    ret.expression.expression.parent = ret.expression\n\n    // Parse filters\n    let prevLoc = mainCode.length\n    for (const filterCode of filterCodes) {\n        // Pipe token.\n        ret.tokens.push(\n            fixLocation(\n                {\n                    type: \"Punctuator\",\n                    value: \"|\",\n                    range: [prevLoc, prevLoc + 1],\n                    loc: {} as any,\n                },\n                locationCalculator,\n            ),\n        )\n\n        // Parse a filter\n        const retF = parseFilter(\n            filterCode,\n            locationCalculator.getSubCalculatorShift(prevLoc + 1),\n            parserOptions,\n        )\n        if (retF) {\n            if (retF.expression) {\n                ret.expression.filters.push(retF.expression)\n                retF.expression.parent = ret.expression\n            }\n            ret.tokens.push(...retF.tokens)\n            ret.comments.push(...retF.comments)\n            ret.references.push(...retF.references)\n        }\n\n        prevLoc += 1 + filterCode.length\n    }\n\n    // Update range.\n    const lastToken = last(ret.tokens)!\n    ret.expression.range[1] = lastToken.range[1]\n    ret.expression.loc.end = lastToken.loc.end\n\n    return ret\n}\n\n/**\n * Parse the source code of inline scripts.\n * @param code The source code of inline scripts.\n * @param locationCalculator The location calculator for the inline script.\n * @param parserOptions The parser options.\n * @returns The result of parsing.\n */\n// eslint-disable-next-line complexity\nexport function parseVForExpression(\n    code: string,\n    locationCalculator: LocationCalculatorForHtml,\n    parserOptions: ParserOptions,\n): ExpressionParseResult<VForExpression> {\n    if (code.trim() === \"\") {\n        throwEmptyError(locationCalculator, \"'<alias> in <expression>'\")\n    }\n\n    if (isEcmaVersion5(parserOptions)) {\n        return parseVForExpressionForEcmaVersion5(\n            code,\n            locationCalculator,\n            parserOptions,\n        )\n    }\n    const processed = processVForAliasAndIterator(code)\n\n    if (!processed.aliases.trim()) {\n        return throwEmptyError(locationCalculator, \"an alias\")\n    }\n    try {\n        debug(\n            '[script] parse v-for expression: \"for(%s%s%s);\"',\n            processed.aliasesWithBrackets,\n            processed.delimiter,\n            processed.iterator,\n        )\n\n        const ast = parseScriptFragment(\n            `for(let ${processed.aliasesWithBrackets}${processed.delimiter}${processed.iterator});`,\n            locationCalculator.getSubCalculatorShift(\n                processed.hasParens ? -8 : -9,\n            ),\n            parserOptions,\n        ).ast\n        const tokens = ast.tokens || []\n        const comments = ast.comments || []\n        const scope = analyzeVariablesAndExternalReferences(ast, parserOptions)\n        const references = scope.references\n        const variables = scope.variables\n        const statement = ast.body[0] as\n            | ESLintForInStatement\n            | ESLintForOfStatement\n        const varDecl = statement.left as ESLintVariableDeclaration\n        const id = varDecl.declarations[0].id as ESLintArrayPattern\n        const left = id.elements\n        const right = statement.right\n\n        if (!processed.hasParens && !left.length) {\n            return throwEmptyError(locationCalculator, \"an alias\")\n        }\n        // Remove `for` `(` `let` `)` `;`.\n        tokens.shift()\n        tokens.shift()\n        tokens.shift()\n        tokens.pop()\n        tokens.pop()\n\n        const closeOffset = statement.left.range[1] - 1\n        const closeIndex = tokens.findIndex((t) => t.range[0] === closeOffset)\n\n        if (processed.hasParens) {\n            // Restore parentheses from array brackets.\n            const open = tokens[0]\n            if (open != null) {\n                open.value = \"(\"\n            }\n            const close = tokens[closeIndex]\n            if (close != null) {\n                close.value = \")\"\n            }\n        } else {\n            // Remove array brackets.\n            tokens.splice(closeIndex, 1)\n            tokens.shift()\n        }\n        const firstToken = tokens[0] || statement.left\n        const lastToken = tokens[tokens.length - 1] || statement.right\n        const expression: VForExpression = {\n            type: \"VForExpression\",\n            range: [firstToken.range[0], lastToken.range[1]],\n            loc: { start: firstToken.loc.start, end: lastToken.loc.end },\n            parent: DUMMY_PARENT,\n            left,\n            right,\n        }\n\n        // Modify parent.\n        for (const l of left) {\n            if (l != null) {\n                l.parent = expression\n            }\n        }\n        right.parent = expression\n\n        return { expression, tokens, comments, references, variables }\n    } catch (err) {\n        return throwErrorAsAdjustingOutsideOfCode(err, code, locationCalculator)\n    }\n}\n\nfunction isEcmaVersion5(parserOptions: ParserOptions) {\n    const ecmaVersion = getEcmaVersionIfUseEspree(parserOptions)\n    return ecmaVersion != null && ecmaVersion <= 5\n}\n\nfunction parseVForExpressionForEcmaVersion5(\n    code: string,\n    locationCalculator: LocationCalculatorForHtml,\n    parserOptions: ParserOptions,\n): ExpressionParseResult<VForExpression> {\n    const processed = processVForAliasAndIterator(code)\n\n    if (!processed.aliases.trim()) {\n        return throwEmptyError(locationCalculator, \"an alias\")\n    }\n    try {\n        const tokens: Token[] = []\n        const comments: Token[] = []\n\n        const parsedAliases = parseVForAliasesForEcmaVersion5(\n            processed.aliasesWithBrackets,\n            locationCalculator.getSubCalculatorShift(\n                processed.hasParens ? 0 : -1,\n            ),\n            parserOptions,\n        )\n\n        if (processed.hasParens) {\n            // Restore parentheses from array brackets.\n            const open = parsedAliases.tokens[0]\n            if (open != null) {\n                open.value = \"(\"\n            }\n            const close = last(parsedAliases.tokens)\n            if (close != null) {\n                close.value = \")\"\n            }\n        } else {\n            // Remove array brackets.\n            parsedAliases.tokens.shift()\n            parsedAliases.tokens.pop()\n        }\n        tokens.push(...parsedAliases.tokens)\n        comments.push(...parsedAliases.comments)\n        const { left, variables } = parsedAliases\n\n        if (!processed.hasParens && !left.length) {\n            return throwEmptyError(locationCalculator, \"an alias\")\n        }\n\n        const delimiterStart = processed.aliases.length\n        const delimiterEnd = delimiterStart + processed.delimiter.length\n        tokens.push(\n            fixLocation(\n                {\n                    type:\n                        processed.delimiter === \"in\" ? \"Keyword\" : \"Identifier\",\n                    value: processed.delimiter,\n                    start: delimiterStart,\n                    end: delimiterEnd,\n                    loc: {} as any,\n                    range: [delimiterStart, delimiterEnd],\n                } as Token,\n                locationCalculator,\n            ),\n        )\n\n        const parsedIterator = parseVForIteratorForEcmaVersion5(\n            processed.iterator,\n            locationCalculator.getSubCalculatorShift(delimiterEnd),\n            parserOptions,\n        )\n\n        tokens.push(...parsedIterator.tokens)\n        comments.push(...parsedIterator.comments)\n        const { right, references } = parsedIterator\n        const firstToken = tokens[0]\n        const lastToken = last(tokens) || firstToken\n        const expression: VForExpression = {\n            type: \"VForExpression\",\n            range: [firstToken.range[0], lastToken.range[1]],\n            loc: { start: firstToken.loc.start, end: lastToken.loc.end },\n            parent: DUMMY_PARENT,\n            left,\n            right,\n        }\n\n        // Modify parent.\n        for (const l of left) {\n            if (l != null) {\n                l.parent = expression\n            }\n        }\n        right.parent = expression\n\n        return { expression, tokens, comments, references, variables }\n    } catch (err) {\n        return throwErrorAsAdjustingOutsideOfCode(err, code, locationCalculator)\n    }\n}\n\nfunction parseVForAliasesForEcmaVersion5(\n    code: string,\n    locationCalculator: LocationCalculatorForHtml,\n    parserOptions: ParserOptions,\n) {\n    const ast = parseScriptFragment(\n        `0(${code})`,\n        locationCalculator.getSubCalculatorShift(-2),\n        parserOptions,\n    ).ast\n    const tokens = ast.tokens || []\n    const comments = ast.comments || []\n    const variables = analyzeExternalReferences(ast, parserOptions).map(\n        transformVariable,\n    )\n\n    const statement = ast.body[0] as ESLintExpressionStatement\n    const callExpression = statement.expression as ESLintCallExpression\n    const expression = callExpression.arguments[0] as ESLintArrayExpression\n\n    const left: ESLintIdentifier[] = expression.elements.filter(\n        (e): e is ESLintIdentifier => {\n            if (e == null || e.type === \"Identifier\") {\n                return true\n            }\n            const errorToken = tokens.find(\n                (t) => e.range[0] <= t.range[0] && t.range[1] <= e.range[1],\n            )!\n            return throwUnexpectedTokenError(errorToken.value, errorToken)\n        },\n    )\n    // Remove parens.\n    tokens.shift()\n    tokens.shift()\n    tokens.pop()\n\n    return { left, tokens, comments, variables }\n\n    function transformVariable(reference: Reference): Variable {\n        const ret: Variable = {\n            id: reference.id,\n            kind: \"v-for\",\n            references: [],\n        }\n        Object.defineProperty(ret, \"references\", { enumerable: false })\n\n        return ret\n    }\n}\n\nfunction parseVForIteratorForEcmaVersion5(\n    code: string,\n    locationCalculator: LocationCalculatorForHtml,\n    parserOptions: ParserOptions,\n) {\n    const ast = parseScriptFragment(\n        `0(${code})`,\n        locationCalculator.getSubCalculatorShift(-2),\n        parserOptions,\n    ).ast\n    const tokens = ast.tokens || []\n    const comments = ast.comments || []\n    const references = analyzeExternalReferences(ast, parserOptions)\n\n    const statement = ast.body[0] as ESLintExpressionStatement\n    const callExpression = statement.expression as ESLintCallExpression\n    const expression = callExpression.arguments[0]\n\n    if (!expression) {\n        return throwEmptyError(locationCalculator, \"an expression\")\n    }\n    if (expression && expression.type === \"SpreadElement\") {\n        return throwUnexpectedTokenError(\"...\", expression)\n    }\n    const right = expression\n\n    // Remove parens.\n    tokens.shift()\n    tokens.shift()\n    tokens.pop()\n    return { right, tokens, comments, references }\n}\n\n/**\n * Parse the source code of inline scripts.\n * @param code The source code of inline scripts.\n * @param locationCalculator The location calculator for the inline script.\n * @param parserOptions The parser options.\n * @returns The result of parsing.\n */\nexport function parseVOnExpression(\n    code: string,\n    locationCalculator: LocationCalculatorForHtml,\n    parserOptions: ParserOptions,\n): ExpressionParseResult<ESLintExpression | VOnExpression> {\n    if (IS_FUNCTION_EXPRESSION.test(code) || IS_SIMPLE_PATH.test(code)) {\n        return parseExpressionBody(code, locationCalculator, parserOptions)\n    }\n    return parseVOnExpressionBody(code, locationCalculator, parserOptions)\n}\n\n/**\n * Parse the source code of inline scripts.\n * @param code The source code of inline scripts.\n * @param locationCalculator The location calculator for the inline script.\n * @param parserOptions The parser options.\n * @returns The result of parsing.\n */\nfunction parseVOnExpressionBody(\n    code: string,\n    locationCalculator: LocationCalculatorForHtml,\n    parserOptions: ParserOptions,\n): ExpressionParseResult<VOnExpression> {\n    debug('[script] parse v-on expression: \"void function($event){%s}\"', code)\n\n    if (code.trim() === \"\") {\n        throwEmptyError(locationCalculator, \"statements\")\n    }\n\n    try {\n        const ast = parseScriptFragment(\n            `void function($event){${code}}`,\n            locationCalculator.getSubCalculatorShift(-22),\n            parserOptions,\n        ).ast\n        const references = analyzeExternalReferences(ast, parserOptions)\n        const outermostStatement = ast.body[0] as ESLintExpressionStatement\n        const functionDecl = (\n            outermostStatement.expression as ESLintUnaryExpression\n        ).argument as ESLintFunctionExpression\n        const block = functionDecl.body\n        const body = block.body\n        const firstStatement = first(body)\n        const lastStatement = last(body)\n        const expression: VOnExpression = {\n            type: \"VOnExpression\",\n            range: [\n                firstStatement != null\n                    ? firstStatement.range[0]\n                    : block.range[0] + 1,\n                lastStatement != null\n                    ? lastStatement.range[1]\n                    : block.range[1] - 1,\n            ],\n            loc: {\n                start:\n                    firstStatement != null\n                        ? firstStatement.loc.start\n                        : locationCalculator.getLocation(1),\n                end:\n                    lastStatement != null\n                        ? lastStatement.loc.end\n                        : locationCalculator.getLocation(code.length + 1),\n            },\n            parent: DUMMY_PARENT,\n            body,\n        }\n        const tokens = ast.tokens || []\n        const comments = ast.comments || []\n\n        // Modify parent.\n        for (const b of body) {\n            b.parent = expression\n        }\n\n        // Remove braces.\n        tokens.splice(0, 6)\n        tokens.pop()\n\n        return { expression, tokens, comments, references, variables: [] }\n    } catch (err) {\n        return throwErrorAsAdjustingOutsideOfCode(err, code, locationCalculator)\n    }\n}\n\n/**\n * Parse the source code of `slot-scope` directive.\n * @param code The source code of `slot-scope` directive.\n * @param locationCalculator The location calculator for the inline script.\n * @param parserOptions The parser options.\n * @returns The result of parsing.\n */\nexport function parseSlotScopeExpression(\n    code: string,\n    locationCalculator: LocationCalculatorForHtml,\n    parserOptions: ParserOptions,\n): ExpressionParseResult<VSlotScopeExpression> {\n    debug('[script] parse slot-scope expression: \"void function(%s) {}\"', code)\n\n    if (code.trim() === \"\") {\n        throwEmptyError(\n            locationCalculator,\n            \"an identifier or an array/object pattern\",\n        )\n    }\n\n    try {\n        const ast = parseScriptFragment(\n            `void function(${code}) {}`,\n            locationCalculator.getSubCalculatorShift(-14),\n            parserOptions,\n        ).ast\n        const statement = ast.body[0] as ESLintExpressionStatement\n        const rawExpression = statement.expression as ESLintUnaryExpression\n        const functionDecl = rawExpression.argument as ESLintFunctionExpression\n        const params = functionDecl.params\n\n        if (params.length === 0) {\n            return {\n                expression: null,\n                tokens: [],\n                comments: [],\n                references: [],\n                variables: [],\n            }\n        }\n\n        const tokens = ast.tokens || []\n        const comments = ast.comments || []\n        const scope = analyzeVariablesAndExternalReferences(ast, parserOptions)\n        const references = scope.references\n        const variables = scope.variables\n        const firstParam = first(params)!\n        const lastParam = last(params)!\n        const expression: VSlotScopeExpression = {\n            type: \"VSlotScopeExpression\",\n            range: [firstParam.range[0], lastParam.range[1]],\n            loc: { start: firstParam.loc.start, end: lastParam.loc.end },\n            parent: DUMMY_PARENT,\n            params: functionDecl.params,\n        }\n\n        // Modify parent.\n        for (const param of params) {\n            param.parent = expression\n        }\n\n        // Remove `void` `function` `(` `)` `{` `}`.\n        tokens.shift()\n        tokens.shift()\n        tokens.shift()\n        tokens.pop()\n        tokens.pop()\n        tokens.pop()\n\n        return { expression, tokens, comments, references, variables }\n    } catch (err) {\n        return throwErrorAsAdjustingOutsideOfCode(err, code, locationCalculator)\n    }\n}\n", "import sortedIndexBy from \"lodash/sortedIndexBy\"\nimport sortedLastIndexBy from \"lodash/sortedLastIndexBy\"\nimport type { LocationRange, Token, VDocumentFragment } from \"../ast\"\nimport type { LinesAndColumns } from \"./lines-and-columns\"\n\ninterface HasRange {\n    range: [number, number]\n}\n/**\n * Replace the tokens in the given range.\n * @param document The document that the node is belonging to.\n * @param node The node to specify the range of replacement.\n * @param newTokens The new tokens.\n */\nexport function replaceTokens(\n    document: VDocumentFragment | null,\n    node: HasRange,\n    newTokens: Token[],\n): void {\n    if (document == null) {\n        return\n    }\n\n    const index = sortedIndexBy(document.tokens, node, byRange0)\n    const count = sortedLastIndexBy(document.tokens, node, byRange1) - index\n    document.tokens.splice(index, count, ...newTokens)\n}\n\n/**\n * Replace and split the tokens in the given range.\n * @param document The document that the node is belonging to.\n * @param node The node to specify the range of replacement.\n * @param newTokens The new tokens.\n */\nexport function replaceAndSplitTokens(\n    document: VDocumentFragment | null,\n    node: HasRange & {\n        loc: LocationRange\n    },\n    newTokens: Token[],\n): void {\n    if (document == null) {\n        return\n    }\n\n    const index = sortedIndexBy(document.tokens, node, byRange0)\n    if (\n        document.tokens.length === index ||\n        node.range[0] < document.tokens[index].range[0]\n    ) {\n        // split\n        const beforeToken = document.tokens[index - 1]\n        const value = beforeToken.value\n        const splitOffset = node.range[0] - beforeToken.range[0]\n        const afterToken: Token = {\n            type: beforeToken.type,\n            range: [node.range[0], beforeToken.range[1]],\n            loc: {\n                start: { ...node.loc.start },\n                end: { ...beforeToken.loc.end },\n            },\n            value: value.slice(splitOffset),\n        }\n        beforeToken.range[1] = node.range[0]\n        beforeToken.loc.end = { ...node.loc.start }\n        beforeToken.value = value.slice(0, splitOffset)\n        document.tokens.splice(index, 0, afterToken)\n    }\n    let lastIndex = sortedLastIndexBy(document.tokens, node, byRange1)\n    if (\n        lastIndex === 0 ||\n        node.range[1] < document.tokens[lastIndex].range[1]\n    ) {\n        // split\n        const beforeToken = document.tokens[lastIndex]\n        const value = beforeToken.value\n        const splitOffset =\n            beforeToken.range[1] -\n            beforeToken.range[0] -\n            (beforeToken.range[1] - node.range[1])\n        const afterToken: Token = {\n            type: beforeToken.type,\n            range: [node.range[1], beforeToken.range[1]],\n            loc: {\n                start: { ...node.loc.end },\n                end: { ...beforeToken.loc.end },\n            },\n            value: value.slice(splitOffset),\n        }\n        beforeToken.range[1] = node.range[1]\n        beforeToken.loc.end = { ...node.loc.end }\n        beforeToken.value = value.slice(0, splitOffset)\n        document.tokens.splice(lastIndex + 1, 0, afterToken)\n        lastIndex++\n    }\n    const count = lastIndex - index\n    document.tokens.splice(index, count, ...newTokens)\n}\n\n/**\n * Insert the given comment tokens.\n * @param document The document that the node is belonging to.\n * @param newComments The comments to insert.\n */\nexport function insertComments(\n    document: VDocumentFragment | null,\n    newComments: Token[],\n): void {\n    if (document == null || newComments.length === 0) {\n        return\n    }\n\n    const index = sortedIndexBy(document.comments, newComments[0], byRange0)\n    document.comments.splice(index, 0, ...newComments)\n}\n\n/**\n * Create a simple token.\n * @param type The type of new token.\n * @param start The offset of the start position of new token.\n * @param end The offset of the end position of new token.\n * @param value The value of new token.\n * @returns The new token.\n */\nexport function createSimpleToken(\n    type: string,\n    start: number,\n    end: number,\n    value: string,\n    linesAndColumns: LinesAndColumns,\n): Token {\n    return {\n        type,\n        range: [start, end],\n        loc: {\n            start: linesAndColumns.getLocFromIndex(start),\n            end: linesAndColumns.getLocFromIndex(end),\n        },\n        value,\n    }\n}\n\n/**\n * Get `x.range[0]`.\n * @param x The object to get.\n * @returns `x.range[0]`.\n */\nfunction byRange0(x: HasRange): number {\n    return x.range[0]\n}\n\n/**\n * Get `x.range[1]`.\n * @param x The object to get.\n * @returns `x.range[1]`.\n */\nfunction byRange1(x: HasRange): number {\n    return x.range[1]\n}\n", "import type { ParseError, VDocumentFragment } from \"../ast\"\nimport sortedIndexBy from \"lodash/sortedIndexBy\"\n/**\n * Insert the given error.\n * @param document The document that the node is belonging to.\n * @param error The error to insert.\n */\nexport function insertError(\n    document: VDocumentFragment | null,\n    error: ParseError,\n): void {\n    if (document == null) {\n        return\n    }\n\n    const index = sortedIndexBy(document.errors, error, byIndex)\n    document.errors.splice(index, 0, error)\n}\n\n/**\n * Get `x.pos`.\n * @param x The object to get.\n * @returns `x.pos`.\n */\nfunction byIndex(x: ParseError): number {\n    return x.index\n}\n", "/**\n * @author Toru Nagashima <https://github.com/mysticatea>\n * @copyright 2017 Toru Nagashima. All rights reserved.\n * See LICENSE file in root directory for full license.\n */\nimport type { ParserOptions } from \"../common/parser-options\"\nimport { isSFCFile } from \"../common/parser-options\"\nimport type {\n    ESLintExpression,\n    Reference,\n    Token,\n    VAttribute,\n    VDirective,\n    VDirectiveKey,\n    VDocumentFragment,\n    VElement,\n    VExpressionContainer,\n    VFilterSequenceExpression,\n    VForExpression,\n    VIdentifier,\n    VLiteral,\n    VNode,\n    VOnExpression,\n    VSlotScopeExpression,\n} from \"../ast\"\nimport { ParseError } from \"../ast\"\nimport { debug } from \"../common/debug\"\nimport type { LocationCalculatorForHtml } from \"../common/location-calculator\"\nimport type { ExpressionParseResult } from \"../script\"\nimport {\n    parseExpression,\n    parseVForExpression,\n    parseVOnExpression,\n    parseSlotScopeExpression,\n} from \"../script\"\nimport {\n    createSimpleToken,\n    insertComments,\n    replaceTokens,\n} from \"../common/token-utils\"\nimport { getOwnerDocument } from \"../common/ast-utils\"\nimport { insertError } from \"../common/error-utils\"\n\nconst shorthandSign = /^[.:@#]/u\nconst shorthandNameMap = { \":\": \"bind\", \".\": \"bind\", \"@\": \"on\", \"#\": \"slot\" }\nconst invalidDynamicArgumentNextChar = /^[\\s\\r\\n=/>]$/u\n\n/**\n * Gets the tag name from the given node or token.\n * For SFC, it returns the value of `rawName` to be case sensitive.\n */\nfunction getTagName(\n    startTagOrElement: { name: string; rawName: string },\n    isSFC: boolean,\n) {\n    return isSFC ? startTagOrElement.rawName : startTagOrElement.name\n}\n\n/**\n * Parse the given attribute name as a directive key.\n * @param node The identifier node to parse.\n * @param document The document to add parsing errors.\n * @returns The directive key node.\n */\nfunction parseDirectiveKeyStatically(\n    node: VIdentifier,\n    document: VDocumentFragment | null,\n): VDirectiveKey {\n    const {\n        name: text,\n        rawName: rawText,\n        range: [offset],\n        loc: {\n            start: { column, line },\n        },\n    } = node\n    const directiveKey: VDirectiveKey = {\n        type: \"VDirectiveKey\",\n        range: node.range,\n        loc: node.loc,\n        parent: node.parent as any,\n        name: null as any,\n        argument: null as VIdentifier | null,\n        modifiers: [] as VIdentifier[],\n    }\n    let i = 0\n\n    function createIdentifier(\n        start: number,\n        end: number,\n        name?: string,\n    ): VIdentifier {\n        return {\n            type: \"VIdentifier\",\n            parent: directiveKey,\n            range: [offset + start, offset + end],\n            loc: {\n                start: { column: column + start, line },\n                end: { column: column + end, line },\n            },\n            name: name || text.slice(start, end),\n            rawName: rawText.slice(start, end),\n        }\n    }\n\n    // Parse.\n    if (shorthandSign.test(text)) {\n        const sign = text[0] as \":\" | \".\" | \"@\" | \"#\"\n        directiveKey.name = createIdentifier(0, 1, shorthandNameMap[sign])\n        i = 1\n    } else {\n        const colon = text.indexOf(\":\")\n        if (colon !== -1) {\n            directiveKey.name = createIdentifier(0, colon)\n            i = colon + 1\n        }\n    }\n\n    if (directiveKey.name != null && text[i] === \"[\") {\n        // Dynamic argument.\n        const len = text.slice(i).lastIndexOf(\"]\")\n        if (len !== -1) {\n            directiveKey.argument = createIdentifier(i, i + len + 1)\n            i = i + len + 1 + (text[i + len + 1] === \".\" ? 1 : 0)\n        }\n    }\n\n    const modifiers = text\n        .slice(i)\n        .split(\".\")\n        .map((modifierName) => {\n            const modifier = createIdentifier(i, i + modifierName.length)\n            if (modifierName === \"\" && i < text.length) {\n                insertError(\n                    document,\n                    new ParseError(\n                        `Unexpected token '${text[i]}'`,\n                        undefined,\n                        offset + i,\n                        line,\n                        column + i,\n                    ),\n                )\n            }\n            i += modifierName.length + 1\n            return modifier\n        })\n\n    if (directiveKey.name == null) {\n        directiveKey.name = modifiers.shift()!\n    } else if (directiveKey.argument == null && modifiers[0].name !== \"\") {\n        directiveKey.argument = modifiers.shift() || null\n    }\n    directiveKey.modifiers = modifiers.filter(isNotEmptyModifier)\n\n    if (directiveKey.name.name === \"v-\") {\n        insertError(\n            document,\n            new ParseError(\n                `Unexpected token '${\n                    text[directiveKey.name.range[1] - offset]\n                }'`,\n                undefined,\n                directiveKey.name.range[1],\n                directiveKey.name.loc.end.line,\n                directiveKey.name.loc.end.column,\n            ),\n        )\n    }\n\n    // v-bind.prop shorthand\n    if (\n        directiveKey.name.rawName === \".\" &&\n        !directiveKey.modifiers.some(isPropModifier)\n    ) {\n        const pos =\n            (directiveKey.argument || directiveKey.name).range[1] - offset\n        const propModifier = createIdentifier(pos, pos, \"prop\")\n        directiveKey.modifiers.unshift(propModifier)\n    }\n\n    return directiveKey\n}\n\n/**\n * Check whether a given identifier node is `prop` or not.\n * @param node The identifier node to check.\n */\nfunction isPropModifier(node: VIdentifier): boolean {\n    return node.name === \"prop\"\n}\n\n/**\n * Check whether a given identifier node is empty or not.\n * @param node The identifier node to check.\n */\nfunction isNotEmptyModifier(node: VIdentifier): boolean {\n    return node.name !== \"\"\n}\n\n/**\n * Parse the tokens of a given key node.\n * @param node The key node to parse.\n */\nfunction parseDirectiveKeyTokens(node: VDirectiveKey): Token[] {\n    const { name, argument, modifiers } = node\n    const shorthand = name.range[1] - name.range[0] === 1\n    const tokens: Token[] = []\n\n    if (shorthand) {\n        tokens.push({\n            type: \"Punctuator\",\n            range: name.range,\n            loc: name.loc,\n            value: name.rawName,\n        })\n    } else {\n        tokens.push({\n            type: \"HTMLIdentifier\",\n            range: name.range,\n            loc: name.loc,\n            value: name.rawName,\n        })\n\n        if (argument) {\n            tokens.push({\n                type: \"Punctuator\",\n                range: [name.range[1], argument.range[0]],\n                loc: { start: name.loc.end, end: argument.loc.start },\n                value: \":\",\n            })\n        }\n    }\n\n    if (argument) {\n        tokens.push({\n            type: \"HTMLIdentifier\",\n            range: argument.range,\n            loc: argument.loc,\n            value: (argument as VIdentifier).rawName,\n        })\n    }\n\n    let lastNode = (argument as VIdentifier | null) || name\n    for (const modifier of modifiers) {\n        if (modifier.rawName === \"\") {\n            continue\n        }\n\n        tokens.push(\n            {\n                type: \"Punctuator\",\n                range: [lastNode.range[1], modifier.range[0]],\n                loc: { start: lastNode.loc.end, end: modifier.loc.start },\n                value: \".\",\n            },\n            {\n                type: \"HTMLIdentifier\",\n                range: modifier.range,\n                loc: modifier.loc,\n                value: modifier.rawName,\n            },\n        )\n        lastNode = modifier\n    }\n\n    return tokens\n}\n\n/**\n * Convert `node.argument` property to a `VExpressionContainer` node if it's a dynamic argument.\n * @param text The source code text of the directive key node.\n * @param node The directive key node to convert.\n * @param document The belonging document node.\n * @param parserOptions The parser options to parse.\n * @param locationCalculator The location calculator to parse.\n */\nfunction convertDynamicArgument(\n    node: VDirectiveKey,\n    document: VDocumentFragment | null,\n    parserOptions: ParserOptions,\n    locationCalculator: LocationCalculatorForHtml,\n): void {\n    const { argument } = node\n    if (\n        !(\n            argument != null &&\n            argument.type === \"VIdentifier\" &&\n            argument.name.startsWith(\"[\") &&\n            argument.name.endsWith(\"]\")\n        )\n    ) {\n        return\n    }\n\n    const { rawName, range, loc } = argument\n    try {\n        const { comments, expression, references, tokens } = parseExpression(\n            rawName.slice(1, -1),\n            locationCalculator.getSubCalculatorAfter(range[0] + 1),\n            parserOptions,\n        )\n\n        node.argument = {\n            type: \"VExpressionContainer\",\n            range,\n            loc,\n            parent: node,\n            expression,\n            references,\n        }\n\n        if (expression != null) {\n            expression.parent = node.argument\n        }\n\n        // Add tokens of `[` and `]`.\n        tokens.unshift(\n            createSimpleToken(\n                \"Punctuator\",\n                range[0],\n                range[0] + 1,\n                \"[\",\n                locationCalculator,\n            ),\n        )\n        tokens.push(\n            createSimpleToken(\n                \"Punctuator\",\n                range[1] - 1,\n                range[1],\n                \"]\",\n                locationCalculator,\n            ),\n        )\n\n        replaceTokens(document, node.argument, tokens)\n        insertComments(document, comments)\n    } catch (error) {\n        debug(\"[template] Parse error: %s\", error)\n\n        if (ParseError.isParseError(error)) {\n            node.argument = {\n                type: \"VExpressionContainer\",\n                range,\n                loc,\n                parent: node,\n                expression: null,\n                references: [],\n            }\n            insertError(document, error)\n        } else {\n            throw error\n        }\n    }\n}\n\n/**\n * Parse the given attribute name as a directive key.\n * @param node The identifier node to parse.\n * @returns The directive key node.\n */\nfunction createDirectiveKey(\n    node: VIdentifier,\n    document: VDocumentFragment | null,\n    parserOptions: ParserOptions,\n    locationCalculator: LocationCalculatorForHtml,\n): VDirectiveKey {\n    // Parse node and tokens.\n    const directiveKey = parseDirectiveKeyStatically(node, document)\n    const tokens = parseDirectiveKeyTokens(directiveKey)\n    replaceTokens(document, directiveKey, tokens)\n\n    // Drop `v-` prefix.\n    if (directiveKey.name.name.startsWith(\"v-\")) {\n        directiveKey.name.name = directiveKey.name.name.slice(2)\n    }\n    if (directiveKey.name.rawName.startsWith(\"v-\")) {\n        directiveKey.name.rawName = directiveKey.name.rawName.slice(2)\n    }\n\n    // Parse dynamic argument.\n    convertDynamicArgument(\n        directiveKey,\n        document,\n        parserOptions,\n        locationCalculator,\n    )\n\n    return directiveKey\n}\n\n/**\n * Parse the given attribute value as an expression.\n * @param code Whole source code text.\n * @param parserOptions The parser options to parse expressions.\n * @param globalLocationCalculator The location calculator to adjust the locations of nodes.\n * @param node The attribute node to replace. This function modifies this node directly.\n * @param tagName The name of this tag.\n * @param directiveKey The key of this directive.\n */\nfunction parseAttributeValue(\n    code: string,\n    parserOptions: ParserOptions,\n    globalLocationCalculator: LocationCalculatorForHtml,\n    node: VLiteral,\n    tagName: string,\n    directiveKey: VDirectiveKey,\n): ExpressionParseResult<\n    | ESLintExpression\n    | VFilterSequenceExpression\n    | VForExpression\n    | VOnExpression\n    | VSlotScopeExpression\n> {\n    const firstChar = code[node.range[0]]\n    const quoted = firstChar === '\"' || firstChar === \"'\"\n    const locationCalculator = globalLocationCalculator.getSubCalculatorAfter(\n        node.range[0] + (quoted ? 1 : 0),\n    )\n    const directiveName = directiveKey.name.name\n\n    let result: ExpressionParseResult<\n        | ESLintExpression\n        | VFilterSequenceExpression\n        | VForExpression\n        | VOnExpression\n        | VSlotScopeExpression\n    >\n    if (quoted && node.value === \"\") {\n        result = {\n            expression: null,\n            tokens: [],\n            comments: [],\n            variables: [],\n            references: [],\n        }\n    } else if (directiveName === \"for\") {\n        result = parseVForExpression(\n            node.value,\n            locationCalculator,\n            parserOptions,\n        )\n    } else if (directiveName === \"on\" && directiveKey.argument != null) {\n        result = parseVOnExpression(\n            node.value,\n            locationCalculator,\n            parserOptions,\n        )\n    } else if (\n        directiveName === \"slot\" ||\n        directiveName === \"slot-scope\" ||\n        (tagName === \"template\" && directiveName === \"scope\")\n    ) {\n        result = parseSlotScopeExpression(\n            node.value,\n            locationCalculator,\n            parserOptions,\n        )\n    } else if (directiveName === \"bind\") {\n        result = parseExpression(\n            node.value,\n            locationCalculator,\n            parserOptions,\n            { allowFilters: true },\n        )\n    } else {\n        result = parseExpression(node.value, locationCalculator, parserOptions)\n    }\n\n    // Add the tokens of quotes.\n    if (quoted) {\n        result.tokens.unshift(\n            createSimpleToken(\n                \"Punctuator\",\n                node.range[0],\n                node.range[0] + 1,\n                firstChar,\n                globalLocationCalculator,\n            ),\n        )\n        result.tokens.push(\n            createSimpleToken(\n                \"Punctuator\",\n                node.range[1] - 1,\n                node.range[1],\n                firstChar,\n                globalLocationCalculator,\n            ),\n        )\n    }\n\n    return result\n}\n\n/**\n * Resolve the variable of the given reference.\n * @param referene The reference to resolve.\n * @param element The belonging element of the reference.\n */\nfunction resolveReference(referene: Reference, element: VElement): void {\n    let node: VNode | null = element\n\n    // Find the variable of this reference.\n    while (node != null && node.type === \"VElement\") {\n        for (const variable of node.variables) {\n            if (variable.id.name === referene.id.name) {\n                referene.variable = variable\n                variable.references.push(referene)\n                return\n            }\n        }\n\n        node = node.parent\n    }\n}\n\n/**\n * Information of a mustache.\n */\nexport interface Mustache {\n    value: string\n    startToken: Token\n    endToken: Token\n}\n\n/**\n * Replace the given attribute by a directive.\n * @param code Whole source code text.\n * @param parserOptions The parser options to parse expressions.\n * @param locationCalculator The location calculator to adjust the locations of nodes.\n * @param node The attribute node to replace. This function modifies this node directly.\n */\nexport function convertToDirective(\n    code: string,\n    parserOptions: ParserOptions,\n    locationCalculator: LocationCalculatorForHtml,\n    node: VAttribute,\n): void {\n    debug(\n        '[template] convert to directive: %s=\"%s\" %j',\n        node.key.name,\n        node.value && node.value.value,\n        node.range,\n    )\n\n    const document = getOwnerDocument(node)\n    const directive: VDirective = node as any\n    directive.directive = true\n    directive.key = createDirectiveKey(\n        node.key,\n        document,\n        parserOptions,\n        locationCalculator,\n    )\n\n    const { argument } = directive.key\n    if (\n        argument &&\n        argument.type === \"VIdentifier\" &&\n        argument.name.startsWith(\"[\")\n    ) {\n        const nextChar = code[argument.range[1]]\n        if (nextChar == null || invalidDynamicArgumentNextChar.test(nextChar)) {\n            const char =\n                nextChar == null ? \"EOF\" : JSON.stringify(nextChar).slice(1, -1)\n            insertError(\n                document,\n                new ParseError(\n                    `Dynamic argument cannot contain the '${char}' character.`,\n                    undefined,\n                    argument.range[1],\n                    argument.loc.end.line,\n                    argument.loc.end.column,\n                ),\n            )\n        }\n    }\n\n    if (node.value == null) {\n        return\n    }\n\n    try {\n        const ret = parseAttributeValue(\n            code,\n            parserOptions,\n            locationCalculator,\n            node.value,\n            getTagName(node.parent.parent, isSFCFile(parserOptions)),\n            directive.key,\n        )\n\n        directive.value = {\n            type: \"VExpressionContainer\",\n            range: node.value.range,\n            loc: node.value.loc,\n            parent: directive,\n            expression: ret.expression,\n            references: ret.references,\n        }\n        if (ret.expression != null) {\n            ret.expression.parent = directive.value\n        }\n\n        for (const variable of ret.variables) {\n            node.parent.parent.variables.push(variable)\n        }\n\n        replaceTokens(document, node.value, ret.tokens)\n        insertComments(document, ret.comments)\n    } catch (err) {\n        debug(\"[template] Parse error: %s\", err)\n\n        if (ParseError.isParseError(err)) {\n            directive.value = {\n                type: \"VExpressionContainer\",\n                range: node.value.range,\n                loc: node.value.loc,\n                parent: directive,\n                expression: null,\n                references: [],\n            }\n            insertError(document, err)\n        } else {\n            throw err\n        }\n    }\n}\n\n/**\n * Parse the content of the given mustache.\n * @param parserOptions The parser options to parse expressions.\n * @param globalLocationCalculator The location calculator to adjust the locations of nodes.\n * @param node The expression container node. This function modifies the `expression` and `references` properties of this node.\n * @param mustache The information of mustache to parse.\n */\nexport function processMustache(\n    parserOptions: ParserOptions,\n    globalLocationCalculator: LocationCalculatorForHtml,\n    node: VExpressionContainer,\n    mustache: Mustache,\n): void {\n    const range: [number, number] = [\n        mustache.startToken.range[1],\n        mustache.endToken.range[0],\n    ]\n    debug(\"[template] convert mustache {{%s}} %j\", mustache.value, range)\n\n    const document = getOwnerDocument(node)\n    try {\n        const locationCalculator =\n            globalLocationCalculator.getSubCalculatorAfter(range[0])\n        const ret = parseExpression(\n            mustache.value,\n            locationCalculator,\n            parserOptions,\n            { allowEmpty: true, allowFilters: true },\n        )\n\n        node.expression = ret.expression || null\n        node.references = ret.references\n        if (ret.expression != null) {\n            ret.expression.parent = node\n        }\n\n        replaceTokens(document, { range }, ret.tokens)\n        insertComments(document, ret.comments)\n    } catch (err) {\n        debug(\"[template] Parse error: %s\", err)\n\n        if (ParseError.isParseError(err)) {\n            insertError(document, err)\n        } else {\n            throw err\n        }\n    }\n}\n\n/**\n * Resolve all references of the given expression container.\n * @param container The expression container to resolve references.\n */\nexport function resolveReferences(container: VExpressionContainer): void {\n    let element: VNode | null = container.parent\n\n    // Get the belonging element.\n    while (element != null && element.type !== \"VElement\") {\n        element = element.parent\n    }\n\n    // Resolve.\n    if (element != null) {\n        for (const reference of container.references) {\n            resolveReference(reference, element)\n        }\n    }\n}\n", "/**\n * @author Toru Nagashima <https://github.com/mysticatea>\n * @copyright 2017 Toru Nagashima. All rights reserved.\n * See LICENSE file in root directory for full license.\n */\nexport const SVG_ATTRIBUTE_NAME_MAP = new Map([\n    [\"attributename\", \"attributeName\"],\n    [\"attributetype\", \"attributeType\"],\n    [\"basefrequency\", \"baseFrequency\"],\n    [\"baseprofile\", \"baseProfile\"],\n    [\"calcmode\", \"calcMode\"],\n    [\"clippathunits\", \"clipPathUnits\"],\n    [\"diffuseconstant\", \"diffuseConstant\"],\n    [\"edgemode\", \"edgeMode\"],\n    [\"filterunits\", \"filterUnits\"],\n    [\"glyphref\", \"glyphRef\"],\n    [\"gradienttransform\", \"gradientTransform\"],\n    [\"gradientunits\", \"gradientUnits\"],\n    [\"kernelmatrix\", \"kernelMatrix\"],\n    [\"kernelunitlength\", \"kernelUnitLength\"],\n    [\"keypoints\", \"keyPoints\"],\n    [\"keysplines\", \"keySplines\"],\n    [\"keytimes\", \"keyTimes\"],\n    [\"lengthadjust\", \"lengthAdjust\"],\n    [\"limitingconeangle\", \"limitingConeAngle\"],\n    [\"markerheight\", \"markerHeight\"],\n    [\"markerunits\", \"markerUnits\"],\n    [\"markerwidth\", \"markerWidth\"],\n    [\"maskcontentunits\", \"maskContentUnits\"],\n    [\"maskunits\", \"maskUnits\"],\n    [\"numoctaves\", \"numOctaves\"],\n    [\"pathlength\", \"pathLength\"],\n    [\"patterncontentunits\", \"patternContentUnits\"],\n    [\"patterntransform\", \"patternTransform\"],\n    [\"patternunits\", \"patternUnits\"],\n    [\"pointsatx\", \"pointsAtX\"],\n    [\"pointsaty\", \"pointsAtY\"],\n    [\"pointsatz\", \"pointsAtZ\"],\n    [\"preservealpha\", \"preserveAlpha\"],\n    [\"preserveaspectratio\", \"preserveAspectRatio\"],\n    [\"primitiveunits\", \"primitiveUnits\"],\n    [\"refx\", \"refX\"],\n    [\"refy\", \"refY\"],\n    [\"repeatcount\", \"repeatCount\"],\n    [\"repeatdur\", \"repeatDur\"],\n    [\"requiredextensions\", \"requiredExtensions\"],\n    [\"requiredfeatures\", \"requiredFeatures\"],\n    [\"specularconstant\", \"specularConstant\"],\n    [\"specularexponent\", \"specularExponent\"],\n    [\"spreadmethod\", \"spreadMethod\"],\n    [\"startoffset\", \"startOffset\"],\n    [\"stddeviation\", \"stdDeviation\"],\n    [\"stitchtiles\", \"stitchTiles\"],\n    [\"surfacescale\", \"surfaceScale\"],\n    [\"systemlanguage\", \"systemLanguage\"],\n    [\"tablevalues\", \"tableValues\"],\n    [\"targetx\", \"targetX\"],\n    [\"targety\", \"targetY\"],\n    [\"textlength\", \"textLength\"],\n    [\"viewbox\", \"viewBox\"],\n    [\"viewtarget\", \"viewTarget\"],\n    [\"xchannelselector\", \"xChannelSelector\"],\n    [\"ychannelselector\", \"yChannelSelector\"],\n    [\"zoomandpan\", \"zoomAndPan\"],\n])\n\nexport const MATHML_ATTRIBUTE_NAME_MAP = new Map([\n    [\"definitionurl\", \"definitionUrl\"]\n])\n", "/**\n * @author Toru Nagashima <https://github.com/mysticatea>\n * @copyright 2017 Toru Nagashima. All rights reserved.\n * See LICENSE file in root directory for full license.\n */\n\n/**\n * HTML tag names.\n */\nexport const HTML_TAGS = new Set([\n    \"a\", \"abbr\", \"address\", \"area\", \"article\",\"aside\", \"audio\", \"b\", \"base\",\n    \"bdi\", \"bdo\", \"blockquote\", \"body\", \"br\", \"button\", \"canvas\", \"caption\",\n    \"cite\", \"code\", \"col\", \"colgroup\", \"data\", \"datalist\", \"dd\", \"del\",\n    \"details\", \"dfn\", \"dialog\", \"div\", \"dl\", \"document\", \"dt\", \"em\", \"embed\",\n    \"fieldset\", \"figcaption\", \"figure\", \"footer\", \"form\", \"h1\", \"h2\", \"h3\",\n    \"h4\", \"h5\", \"h6\", \"head\", \"header\", \"hgroup\", \"hr\", \"html\", \"i\", \"iframe\",\n    \"img\", \"input\", \"ins\", \"kbd\", \"label\", \"legend\", \"li\", \"link\", \"main\",\n    \"map\", \"mark\", \"marquee\", \"menu\", \"meta\", \"meter\", \"nav\", \"noscript\",\n    \"object\", \"ol\", \"optgroup\", \"option\", \"output\", \"p\", \"param\", \"picture\",\n    \"pre\", \"progress\", \"q\", \"rp\", \"rt\", \"ruby\", \"s\", \"samp\", \"script\",\n    \"section\", \"select\", \"slot\", \"small\", \"source\", \"span\", \"strong\", \"style\",\n    \"sub\", \"summary\", \"sup\", \"table\", \"tbody\", \"td\", \"template\", \"textarea\",\n    \"tfoot\", \"th\", \"thead\", \"time\", \"title\", \"tr\", \"track\", \"u\", \"ul\", \"var\",\n    \"video\", \"wbr\"\n])\n\n/**\n * HTML tag names of void elements.\n */\nexport const HTML_VOID_ELEMENT_TAGS = new Set([\n    \"area\", \"base\", \"br\", \"col\", \"embed\", \"hr\", \"img\", \"input\", \"link\", \"meta\",\n    \"param\", \"source\", \"track\", \"wbr\",\n])\n\n/**\n * https://github.com/vuejs/vue/blob/e4da249ab8ef32a0b8156c840c9d2b9773090f8a/src/platforms/web/compiler/util.js#L12\n */\nexport const HTML_CAN_BE_LEFT_OPEN_TAGS = new Set([\n    \"colgroup\", \"li\", \"options\", \"p\", \"td\", \"tfoot\", \"th\", \"thead\", \n    \"tr\", \"source\",\n])\n\n/**\n * https://github.com/vuejs/vue/blob/e4da249ab8ef32a0b8156c840c9d2b9773090f8a/src/platforms/web/compiler/util.js#L18\n */\nexport const HTML_NON_FHRASING_TAGS = new Set([\n    \"address\", \"article\", \"aside\", \"base\", \"blockquote\", \"body\", \"caption\", \n    \"col\", \"colgroup\", \"dd\", \"details\", \"dialog\", \"div\", \"dl\", \"dt\", \"fieldset\", \n    \"figcaption\", \"figure\", \"footer\", \"form\", \"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \n    \"h6\", \"head\", \"header\", \"hgroup\", \"hr\", \"html\", \"legend\", \"li\", \"menuitem\", \n    \"meta\", \"optgroup\", \"option\", \"param\", \"rp\", \"rt\", \"source\", \"style\", \n    \"summary\", \"tbody\", \"td\", \"tfoot\", \"th\", \"thead\", \"title\", \"tr\", \"track\",\n])\n\n/**\n * HTML tag names of RCDATA.\n */\nexport const HTML_RCDATA_TAGS = new Set([\n    \"title\", \"textarea\",\n])\n\n/**\n * HTML tag names of RAWTEXT.\n */\nexport const HTML_RAWTEXT_TAGS = new Set([\n    \"style\", \"xmp\", \"iframe\", \"noembed\", \"noframes\", \"noscript\", \"script\",\n])\n\n/**\n * SVG tag names.\n */\nexport const SVG_TAGS = new Set([\n    \"a\", \"altGlyph\", \"altGlyphDef\", \"altGlyphItem\", \"animate\", \"animateColor\", \n    \"animateMotion\", \"animateTransform\", \"animation\", \"audio\", \"canvas\", \n    \"circle\", \"clipPath\", \"color-profile\", \"cursor\", \"defs\", \"desc\", \"discard\", \n    \"ellipse\", \"feBlend\", \"feColorMatrix\", \"feComponentTransfer\", \"feComposite\", \n    \"feConvolveMatrix\", \"feDiffuseLighting\", \"feDisplacementMap\", \n    \"feDistantLight\", \"feDropShadow\", \"feFlood\", \"feFuncA\", \"feFuncB\", \n    \"feFuncG\", \"feFuncR\", \"feGaussianBlur\", \"feImage\", \"feMerge\", \"feMergeNode\", \n    \"feMorphology\", \"feOffset\", \"fePointLight\", \"feSpecularLighting\", \n    \"feSpotLight\", \"feTile\", \"feTurbulence\", \"filter\", \"font\", \"font-face\", \n    \"font-face-format\", \"font-face-name\", \"font-face-src\", \"font-face-uri\", \n    \"foreignObject\", \"g\", \"glyph\", \"glyphRef\", \"handler\", \"hatch\", \"hatchpath\", \n    \"hkern\", \"iframe\", \"image\", \"line\", \"linearGradient\", \"listener\", \"marker\", \n    \"mask\", \"mesh\", \"meshgradient\", \"meshpatch\", \"meshrow\", \"metadata\", \n    \"missing-glyph\", \"mpath\", \"path\", \"pattern\", \"polygon\", \"polyline\", \n    \"prefetch\", \"radialGradient\", \"rect\", \"script\", \"set\", \"solidColor\", \n    \"solidcolor\", \"stop\", \"style\", \"svg\", \"switch\", \"symbol\", \"tbreak\", \"text\", \n    \"textArea\", \"textPath\", \"title\", \"tref\", \"tspan\", \"unknown\", \"use\", \"video\", \n    \"view\", \"vkern\",\n])\n\n/**\n * The map from lowercase names to actual names in SVG.\n */\nexport const SVG_ELEMENT_NAME_MAP = new Map<string, string>()\nfor (const name of SVG_TAGS) {\n    if (/[A-Z]/.test(name)) {\n        SVG_ELEMENT_NAME_MAP.set(name.toLowerCase(), name)\n    }\n}\n\n/**\n * MathML tag names.\n */\nexport const MATHML_TAGS = new Set([\n    \"abs\", \"and\", \"annotation\", \"annotation-xml\", \"apply\", \"approx\", \"arccos\", \n    \"arccosh\", \"arccot\", \"arccoth\", \"arccsc\", \"arccsch\", \"arcsec\", \"arcsech\", \n    \"arcsin\", \"arcsinh\", \"arctan\", \"arctanh\", \"arg\", \"bind\", \"bvar\", \"card\", \n    \"cartesianproduct\", \"cbytes\", \"ceiling\", \"cerror\", \"ci\", \"cn\", \"codomain\", \n    \"complexes\", \"compose\", \"condition\", \"conjugate\", \"cos\", \"cosh\", \"cot\", \n    \"coth\", \"cs\", \"csc\", \"csch\", \"csymbol\", \"curl\", \"declare\", \"degree\", \n    \"determinant\", \"diff\", \"divergence\", \"divide\", \"domain\", \n    \"domainofapplication\", \"emptyset\", \"encoding\", \"eq\", \"equivalent\", \n    \"eulergamma\", \"exists\", \"exp\", \"exponentiale\", \"factorial\", \"factorof\", \n    \"false\", \"floor\", \"fn\", \"forall\", \"function\", \"gcd\", \"geq\", \"grad\", \"gt\", \n    \"ident\", \"image\", \"imaginary\", \"imaginaryi\", \"implies\", \"in\", \"infinity\", \n    \"int\", \"integers\", \"intersect\", \"interval\", \"inverse\", \"lambda\", \n    \"laplacian\", \"lcm\", \"leq\", \"limit\", \"list\", \"ln\", \"log\", \"logbase\", \n    \"lowlimit\", \"lt\", \"m:apply\", \"m:mrow\", \"maction\", \"malign\", \"maligngroup\", \n    \"malignmark\", \"malignscope\", \"math\", \"matrix\", \"matrixrow\", \"max\", \"mean\", \n    \"median\", \"menclose\", \"merror\", \"mfenced\", \"mfrac\", \"mfraction\", \"mglyph\", \n    \"mi\", \"mi\\\"\", \"min\", \"minus\", \"mlabeledtr\", \"mlongdiv\", \"mmultiscripts\", \n    \"mn\", \"mo\", \"mode\", \"moment\", \"momentabout\", \"mover\", \"mpadded\", \"mphantom\", \n    \"mprescripts\", \"mroot\", \"mrow\", \"ms\", \"mscarries\", \"mscarry\", \"msgroup\", \n    \"msline\", \"mspace\", \"msqrt\", \"msrow\", \"mstack\", \"mstyle\", \"msub\", \"msubsup\", \n    \"msup\", \"mtable\", \"mtd\", \"mtext\", \"mtr\", \"munder\", \"munderover\", \n    \"naturalnumbers\", \"neq\", \"none\", \"not\", \"notanumber\", \"notin\", \n    \"notprsubset\", \"notsubset\", \"or\", \"otherwise\", \"outerproduct\", \n    \"partialdiff\", \"pi\", \"piece\", \"piecewice\", \"piecewise\", \"plus\", \"power\", \n    \"primes\", \"product\", \"prsubset\", \"quotient\", \"rationals\", \"real\", \"reals\", \n    \"reln\", \"rem\", \"root\", \"scalarproduct\", \"sdev\", \"sec\", \"sech\", \"select\", \n    \"selector\", \"semantics\", \"sep\", \"set\", \"setdiff\", \"share\", \"sin\", \"sinh\", \n    \"span\", \"subset\", \"sum\", \"tan\", \"tanh\", \"tendsto\", \"times\", \"transpose\", \n    \"true\", \"union\", \"uplimit\", \"var\", \"variance\", \"vector\", \"vectorproduct\", \n    \"xor\",\n])\n", "/**\n * @author Toru Nagashima <https://github.com/mysticatea>\n * @copyright 2017 Toru Nagashima. All rights reserved.\n * See LICENSE file in root directory for full license.\n */\nimport assert from \"assert\"\nimport last from \"lodash/last\"\nimport type {\n    ErrorCode,\n    HasLocation,\n    Namespace,\n    Token,\n    VAttribute,\n} from \"../ast\"\nimport { ParseError } from \"../ast\"\nimport { debug } from \"../common/debug\"\nimport type { Tokenizer, TokenizerState, TokenType } from \"./tokenizer\"\n\nconst DUMMY_PARENT: any = Object.freeze({})\n\n/**\n * Concatenate token values.\n * @param text Concatenated text.\n * @param token The token to concatenate.\n */\nfunction concat(text: string, token: Token): string {\n    return text + token.value\n}\n\n/**\n * The type of intermediate tokens.\n */\nexport type IntermediateToken = StartTag | EndTag | Text | Mustache\n\n/**\n * The type of start tags.\n */\nexport interface StartTag extends HasLocation {\n    type: \"StartTag\"\n    name: string\n    rawName: string\n    selfClosing: boolean\n    attributes: VAttribute[]\n}\n\n/**\n * The type of end tags.\n */\nexport interface EndTag extends HasLocation {\n    type: \"EndTag\"\n    name: string\n}\n\n/**\n * The type of text chunks.\n */\nexport interface Text extends HasLocation {\n    type: \"Text\"\n    value: string\n}\n\n/**\n * The type of text chunks of an expression container.\n */\nexport interface Mustache extends HasLocation {\n    type: \"Mustache\"\n    value: string\n    startToken: Token\n    endToken: Token\n}\n\n/**\n * The class to create HTML tokens from ESTree-like tokens which are created by a Tokenizer.\n */\nexport class IntermediateTokenizer {\n    private tokenizer: Tokenizer\n    private currentToken: IntermediateToken | null\n    private attribute: VAttribute | null\n    private attributeNames: Set<string>\n    private expressionStartToken: Token | null\n    private expressionTokens: Token[]\n\n    public readonly tokens: Token[]\n    public readonly comments: Token[]\n\n    /**\n     * The source code text.\n     */\n    public get text(): string {\n        return this.tokenizer.text\n    }\n\n    /**\n     * The parse errors.\n     */\n    public get errors(): ParseError[] {\n        return this.tokenizer.errors\n    }\n\n    /**\n     * The current state.\n     */\n    public get state(): TokenizerState {\n        return this.tokenizer.state\n    }\n    public set state(value: TokenizerState) {\n        this.tokenizer.state = value\n    }\n\n    /**\n     * The current namespace.\n     */\n    public get namespace(): Namespace {\n        return this.tokenizer.namespace\n    }\n    public set namespace(value: Namespace) {\n        this.tokenizer.namespace = value\n    }\n\n    /**\n     * The current flag of expression enabled.\n     */\n    public get expressionEnabled(): boolean {\n        return this.tokenizer.expressionEnabled\n    }\n    public set expressionEnabled(value: boolean) {\n        this.tokenizer.expressionEnabled = value\n    }\n\n    /**\n     * Initialize this intermediate tokenizer.\n     * @param tokenizer The tokenizer.\n     */\n    public constructor(tokenizer: Tokenizer) {\n        this.tokenizer = tokenizer\n        this.currentToken = null\n        this.attribute = null\n        this.attributeNames = new Set<string>()\n        this.expressionStartToken = null\n        this.expressionTokens = []\n        this.tokens = []\n        this.comments = []\n    }\n\n    /**\n     * Get the next intermediate token.\n     * @returns The intermediate token or null.\n     */\n    public nextToken(): IntermediateToken | null {\n        let token: Token | null = null\n        let result: IntermediateToken | null = null\n\n        while (result == null && (token = this.tokenizer.nextToken()) != null) {\n            result = this[token.type as TokenType](token)\n        }\n\n        if (result == null && token == null && this.currentToken != null) {\n            result = this.commit()\n        }\n\n        return result\n    }\n\n    /**\n     * Commit the current token.\n     */\n    private commit(): IntermediateToken {\n        assert(this.currentToken != null || this.expressionStartToken != null)\n\n        let token = this.currentToken\n        this.currentToken = null\n        this.attribute = null\n\n        if (this.expressionStartToken != null) {\n            // VExpressionEnd was not found.\n            // Concatenate the deferred tokens to the committed token.\n            const start = this.expressionStartToken\n            const end = last(this.expressionTokens) || start\n            const value = this.expressionTokens.reduce(concat, start.value)\n            this.expressionStartToken = null\n            this.expressionTokens = []\n\n            if (token == null) {\n                token = {\n                    type: \"Text\",\n                    range: [start.range[0], end.range[1]],\n                    loc: { start: start.loc.start, end: end.loc.end },\n                    value,\n                }\n            } else if (token.type === \"Text\") {\n                token.range[1] = end.range[1]\n                token.loc.end = end.loc.end\n                token.value += value\n            } else {\n                throw new Error(\"unreachable\")\n            }\n        }\n\n        return token as IntermediateToken\n    }\n\n    /**\n     * Report an invalid character error.\n     * @param code The error code.\n     */\n    private reportParseError(token: HasLocation, code: ErrorCode): void {\n        const error = ParseError.fromCode(\n            code,\n            token.range[0],\n            token.loc.start.line,\n            token.loc.start.column,\n        )\n        this.errors.push(error)\n\n        debug(\"[html] syntax error:\", error.message)\n    }\n\n    /**\n     * Process the given comment token.\n     * @param token The comment token to process.\n     */\n    private processComment(token: Token): IntermediateToken | null {\n        this.comments.push(token)\n\n        if (this.currentToken != null && this.currentToken.type === \"Text\") {\n            return this.commit()\n        }\n        return null\n    }\n\n    /**\n     * Process the given text token.\n     * @param token The text token to process.\n     */\n    private processText(token: Token): IntermediateToken | null {\n        this.tokens.push(token)\n\n        let result: IntermediateToken | null = null\n\n        if (this.expressionStartToken != null) {\n            // Defer this token until a VExpressionEnd token or a non-text token appear.\n            const lastToken =\n                last(this.expressionTokens) || this.expressionStartToken\n            if (lastToken.range[1] === token.range[0]) {\n                this.expressionTokens.push(token)\n                return null\n            }\n\n            result = this.commit()\n        } else if (this.currentToken != null) {\n            // Concatenate this token to the current text token.\n            if (\n                this.currentToken.type === \"Text\" &&\n                this.currentToken.range[1] === token.range[0]\n            ) {\n                this.currentToken.value += token.value\n                this.currentToken.range[1] = token.range[1]\n                this.currentToken.loc.end = token.loc.end\n                return null\n            }\n\n            result = this.commit()\n        }\n        assert(this.currentToken == null)\n\n        this.currentToken = {\n            type: \"Text\",\n            range: [token.range[0], token.range[1]],\n            loc: { start: token.loc.start, end: token.loc.end },\n            value: token.value,\n        }\n\n        return result\n    }\n\n    /**\n     * Process a HTMLAssociation token.\n     * @param token The token to process.\n     */\n    protected HTMLAssociation(token: Token): IntermediateToken | null {\n        this.tokens.push(token)\n\n        if (this.attribute != null) {\n            this.attribute.range[1] = token.range[1]\n            this.attribute.loc.end = token.loc.end\n\n            if (\n                this.currentToken == null ||\n                this.currentToken.type !== \"StartTag\"\n            ) {\n                throw new Error(\"unreachable\")\n            }\n            this.currentToken.range[1] = token.range[1]\n            this.currentToken.loc.end = token.loc.end\n        }\n\n        return null\n    }\n\n    /**\n     * Process a HTMLBogusComment token.\n     * @param token The token to process.\n     */\n    protected HTMLBogusComment(token: Token): IntermediateToken | null {\n        return this.processComment(token)\n    }\n\n    /**\n     * Process a HTMLCDataText token.\n     * @param token The token to process.\n     */\n    protected HTMLCDataText(token: Token): IntermediateToken | null {\n        return this.processText(token)\n    }\n\n    /**\n     * Process a HTMLComment token.\n     * @param token The token to process.\n     */\n    protected HTMLComment(token: Token): IntermediateToken | null {\n        return this.processComment(token)\n    }\n\n    /**\n     * Process a HTMLEndTagOpen token.\n     * @param token The token to process.\n     */\n    protected HTMLEndTagOpen(token: Token): IntermediateToken | null {\n        this.tokens.push(token)\n\n        let result: IntermediateToken | null = null\n\n        if (this.currentToken != null || this.expressionStartToken != null) {\n            result = this.commit()\n        }\n\n        this.currentToken = {\n            type: \"EndTag\",\n            range: [token.range[0], token.range[1]],\n            loc: { start: token.loc.start, end: token.loc.end },\n            name: token.value,\n        }\n\n        return result\n    }\n\n    /**\n     * Process a HTMLIdentifier token.\n     * @param token The token to process.\n     */\n    protected HTMLIdentifier(token: Token): IntermediateToken | null {\n        this.tokens.push(token)\n\n        if (\n            this.currentToken == null ||\n            this.currentToken.type === \"Text\" ||\n            this.currentToken.type === \"Mustache\"\n        ) {\n            throw new Error(\"unreachable\")\n        }\n        if (this.currentToken.type === \"EndTag\") {\n            this.reportParseError(token, \"end-tag-with-attributes\")\n            return null\n        }\n        if (this.attributeNames.has(token.value)) {\n            this.reportParseError(token, \"duplicate-attribute\")\n        }\n        this.attributeNames.add(token.value)\n\n        this.attribute = {\n            type: \"VAttribute\",\n            range: [token.range[0], token.range[1]],\n            loc: { start: token.loc.start, end: token.loc.end },\n            parent: DUMMY_PARENT,\n            directive: false,\n            key: {\n                type: \"VIdentifier\",\n                range: [token.range[0], token.range[1]],\n                loc: { start: token.loc.start, end: token.loc.end },\n                parent: DUMMY_PARENT,\n                name: token.value,\n                rawName: this.text.slice(token.range[0], token.range[1]),\n            },\n            value: null,\n        }\n        this.attribute.key.parent = this.attribute\n\n        this.currentToken.range[1] = token.range[1]\n        this.currentToken.loc.end = token.loc.end\n        this.currentToken.attributes.push(this.attribute)\n\n        return null\n    }\n\n    /**\n     * Process a HTMLLiteral token.\n     * @param token The token to process.\n     */\n    protected HTMLLiteral(token: Token): IntermediateToken | null {\n        this.tokens.push(token)\n\n        if (this.attribute != null) {\n            this.attribute.range[1] = token.range[1]\n            this.attribute.loc.end = token.loc.end\n            this.attribute.value = {\n                type: \"VLiteral\",\n                range: [token.range[0], token.range[1]],\n                loc: { start: token.loc.start, end: token.loc.end },\n                parent: this.attribute,\n                value: token.value,\n            }\n\n            if (\n                this.currentToken == null ||\n                this.currentToken.type !== \"StartTag\"\n            ) {\n                throw new Error(\"unreachable\")\n            }\n            this.currentToken.range[1] = token.range[1]\n            this.currentToken.loc.end = token.loc.end\n        }\n\n        return null\n    }\n\n    /**\n     * Process a HTMLRCDataText token.\n     * @param token The token to process.\n     */\n    protected HTMLRCDataText(token: Token): IntermediateToken | null {\n        return this.processText(token)\n    }\n\n    /**\n     * Process a HTMLRawText token.\n     * @param token The token to process.\n     */\n    protected HTMLRawText(token: Token): IntermediateToken | null {\n        return this.processText(token)\n    }\n\n    /**\n     * Process a HTMLSelfClosingTagClose token.\n     * @param token The token to process.\n     */\n    protected HTMLSelfClosingTagClose(token: Token): IntermediateToken | null {\n        this.tokens.push(token)\n\n        if (this.currentToken == null || this.currentToken.type === \"Text\") {\n            throw new Error(\"unreachable\")\n        }\n\n        if (this.currentToken.type === \"StartTag\") {\n            this.currentToken.selfClosing = true\n        } else {\n            this.reportParseError(token, \"end-tag-with-trailing-solidus\")\n        }\n\n        this.currentToken.range[1] = token.range[1]\n        this.currentToken.loc.end = token.loc.end\n\n        return this.commit()\n    }\n\n    /**\n     * Process a HTMLTagClose token.\n     * @param token The token to process.\n     */\n    protected HTMLTagClose(token: Token): IntermediateToken | null {\n        this.tokens.push(token)\n\n        if (this.currentToken == null || this.currentToken.type === \"Text\") {\n            throw new Error(\"unreachable\")\n        }\n\n        this.currentToken.range[1] = token.range[1]\n        this.currentToken.loc.end = token.loc.end\n\n        return this.commit()\n    }\n\n    /**\n     * Process a HTMLTagOpen token.\n     * @param token The token to process.\n     */\n    protected HTMLTagOpen(token: Token): IntermediateToken | null {\n        this.tokens.push(token)\n\n        let result: IntermediateToken | null = null\n\n        if (this.currentToken != null || this.expressionStartToken != null) {\n            result = this.commit()\n        }\n\n        this.currentToken = {\n            type: \"StartTag\",\n            range: [token.range[0], token.range[1]],\n            loc: { start: token.loc.start, end: token.loc.end },\n            name: token.value,\n            rawName: this.text.slice(token.range[0] + 1, token.range[1]),\n            selfClosing: false,\n            attributes: [],\n        }\n        this.attribute = null\n        this.attributeNames.clear()\n\n        return result\n    }\n\n    /**\n     * Process a HTMLText token.\n     * @param token The token to process.\n     */\n    protected HTMLText(token: Token): IntermediateToken | null {\n        return this.processText(token)\n    }\n\n    /**\n     * Process a HTMLWhitespace token.\n     * @param token The token to process.\n     */\n    protected HTMLWhitespace(token: Token): IntermediateToken | null {\n        return this.processText(token)\n    }\n\n    /**\n     * Process a VExpressionStart token.\n     * @param token The token to process.\n     */\n    protected VExpressionStart(token: Token): IntermediateToken | null {\n        if (this.expressionStartToken != null) {\n            return this.processText(token)\n        }\n        const separated =\n            this.currentToken != null &&\n            this.currentToken.range[1] !== token.range[0]\n        const result = separated ? this.commit() : null\n\n        this.tokens.push(token)\n        this.expressionStartToken = token\n\n        return result\n    }\n\n    /**\n     * Process a VExpressionEnd token.\n     * @param token The token to process.\n     */\n    protected VExpressionEnd(token: Token): IntermediateToken | null {\n        if (this.expressionStartToken == null) {\n            return this.processText(token)\n        }\n\n        const start = this.expressionStartToken\n        const end = last(this.expressionTokens) || start\n\n        // If it's '{{}}', it's handled as a text.\n        if (token.range[0] === start.range[1]) {\n            this.tokens.pop()\n            this.expressionStartToken = null\n            const result = this.processText(start)\n            this.processText(token)\n            return result\n        }\n\n        // If invalid notation `</>` exists directly before this token, separate it.\n        if (end.range[1] !== token.range[0]) {\n            const result = this.commit()\n            this.processText(token)\n            return result\n        }\n\n        // Clear state.\n        const value = this.expressionTokens.reduce(concat, \"\")\n        this.tokens.push(token)\n        this.expressionStartToken = null\n        this.expressionTokens = []\n\n        // Create token.\n        const result = this.currentToken != null ? this.commit() : null\n        this.currentToken = {\n            type: \"Mustache\",\n            range: [start.range[0], token.range[1]],\n            loc: { start: start.loc.start, end: token.loc.end },\n            value,\n            startToken: start,\n            endToken: token,\n        }\n\n        return result || this.commit()\n    }\n}\n", "/**\n * @author Toru Nagashima <https://github.com/mysticatea>\n * @copyright 2017 Toru Nagashima. All rights reserved.\n * See LICENSE file in root directory for full license.\n */\nimport assert from \"assert\"\nimport last from \"lodash/last\"\nimport findLastIndex from \"lodash/findLastIndex\"\nimport type {\n    ErrorCode,\n    HasLocation,\n    Namespace,\n    Token,\n    VAttribute,\n    VDocumentFragment,\n    VElement,\n    VExpressionContainer,\n} from \"../ast\"\nimport { NS, ParseError } from \"../ast\"\nimport { debug } from \"../common/debug\"\nimport { LocationCalculatorForHtml } from \"../common/location-calculator\"\nimport {\n    convertToDirective,\n    processMustache,\n    resolveReferences,\n} from \"../template\"\nimport {\n    MATHML_ATTRIBUTE_NAME_MAP,\n    SVG_ATTRIBUTE_NAME_MAP,\n} from \"./util/attribute-names\"\nimport {\n    HTML_CAN_BE_LEFT_OPEN_TAGS,\n    HTML_NON_FHRASING_TAGS,\n    HTML_RAWTEXT_TAGS,\n    HTML_RCDATA_TAGS,\n    HTML_VOID_ELEMENT_TAGS,\n    SVG_ELEMENT_NAME_MAP,\n} from \"./util/tag-names\"\nimport type {\n    IntermediateToken,\n    EndTag,\n    Mustache,\n    StartTag,\n    Text,\n} from \"./intermediate-tokenizer\"\nimport { IntermediateTokenizer } from \"./intermediate-tokenizer\"\nimport type { Tokenizer } from \"./tokenizer\"\nimport type { ParserOptions } from \"../common/parser-options\"\nimport { isSFCFile, getScriptParser } from \"../common/parser-options\"\n\nconst DIRECTIVE_NAME = /^(?:v-|[.:@#]).*[^.:@#]$/u\nconst DT_DD = /^d[dt]$/u\nconst DUMMY_PARENT: any = Object.freeze({})\n\n/**\n * Gets the tag name from the given node or token.\n * For SFC, it returns the value of `rawName` to be case sensitive.\n */\nfunction getTagName(\n    startTagOrElement: { name: string; rawName: string },\n    isSFC: boolean,\n) {\n    return isSFC ? startTagOrElement.rawName : startTagOrElement.name\n}\n\n/**\n * Check whether the element is a MathML text integration point or not.\n * @see https://html.spec.whatwg.org/multipage/parsing.html#tree-construction-dispatcher\n * @param element The current element.\n * @param isSFC For SFC, give `true`.\n * @returns `true` if the element is a MathML text integration point.\n */\nfunction isMathMLIntegrationPoint(element: VElement, isSFC: boolean): boolean {\n    if (element.namespace === NS.MathML) {\n        const name = getTagName(element, isSFC)\n        return (\n            name === \"mi\" ||\n            name === \"mo\" ||\n            name === \"mn\" ||\n            name === \"ms\" ||\n            name === \"mtext\"\n        )\n    }\n    return false\n}\n\n/**\n * Check whether the element is a HTML integration point or not.\n * @see https://html.spec.whatwg.org/multipage/parsing.html#tree-construction-dispatcher\n * @param element The current element.\n * @param isSFC For SFC, give `true`.\n * @returns `true` if the element is a HTML integration point.\n */\nfunction isHTMLIntegrationPoint(element: VElement, isSFC: boolean): boolean {\n    if (element.namespace === NS.MathML) {\n        return (\n            getTagName(element, isSFC) === \"annotation-xml\" &&\n            element.startTag.attributes.some(\n                (a) =>\n                    a.directive === false &&\n                    a.key.name === \"encoding\" &&\n                    a.value != null &&\n                    (a.value.value === \"text/html\" ||\n                        a.value.value === \"application/xhtml+xml\"),\n            )\n        )\n    }\n    if (element.namespace === NS.SVG) {\n        const name = getTagName(element, isSFC)\n        return name === \"foreignObject\" || name === \"desc\" || name === \"title\"\n    }\n\n    return false\n}\n\n/**\n * Adjust element names by the current namespace.\n * @param name The lowercase element name to adjust.\n * @param namespace The current namespace.\n * @returns The adjusted element name.\n */\nfunction adjustElementName(name: string, namespace: Namespace): string {\n    if (namespace === NS.SVG) {\n        return SVG_ELEMENT_NAME_MAP.get(name) || name\n    }\n    return name\n}\n\n/**\n * Adjust attribute names by the current namespace.\n * @param name The lowercase attribute name to adjust.\n * @param namespace The current namespace.\n * @returns The adjusted attribute name.\n */\nfunction adjustAttributeName(name: string, namespace: Namespace): string {\n    if (namespace === NS.SVG) {\n        return SVG_ATTRIBUTE_NAME_MAP.get(name) || name\n    }\n    if (namespace === NS.MathML) {\n        return MATHML_ATTRIBUTE_NAME_MAP.get(name) || name\n    }\n    return name\n}\n\n/**\n * Set the location of the last child node to the end location of the given node.\n * @param node The node to commit the end location.\n */\nfunction propagateEndLocation(node: VDocumentFragment | VElement): void {\n    const lastChild =\n        (node.type === \"VElement\" ? node.endTag : null) || last(node.children)\n    if (lastChild != null) {\n        node.range[1] = lastChild.range[1]\n        node.loc.end = lastChild.loc.end\n    }\n}\n\n/**\n * The parser of HTML.\n * This is not following to the HTML spec completely because Vue.js template spec is pretty different to HTML.\n */\nexport class Parser {\n    private tokenizer: IntermediateTokenizer\n    private locationCalculator: LocationCalculatorForHtml\n    private baseParserOptions: ParserOptions\n    private isSFC: boolean\n    private document: VDocumentFragment\n    private elementStack: VElement[]\n    private vPreElement: VElement | null\n    private postProcessesForScript: ((parserOptions: ParserOptions) => void)[] =\n        []\n\n    /**\n     * The source code text.\n     */\n    private get text(): string {\n        return this.tokenizer.text\n    }\n\n    /**\n     * The tokens.\n     */\n    private get tokens(): Token[] {\n        return this.tokenizer.tokens\n    }\n\n    /**\n     * The comments.\n     */\n    private get comments(): Token[] {\n        return this.tokenizer.comments\n    }\n\n    /**\n     * The syntax errors which are found in this parsing.\n     */\n    private get errors(): ParseError[] {\n        return this.tokenizer.errors\n    }\n\n    /**\n     * The current namespace.\n     */\n    private get namespace(): Namespace {\n        return this.tokenizer.namespace\n    }\n    private set namespace(value: Namespace) {\n        this.tokenizer.namespace = value\n    }\n\n    /**\n     * The current flag of expression enabled.\n     */\n    // eslint-disable-next-line @mysticatea/ts/ban-ts-ignore\n    // @ts-ignore\n    private get expressionEnabled(): boolean {\n        return this.tokenizer.expressionEnabled\n    }\n    private set expressionEnabled(value: boolean) {\n        this.tokenizer.expressionEnabled = value\n    }\n\n    /**\n     * Get the current node.\n     */\n    private get currentNode(): VDocumentFragment | VElement {\n        return last(this.elementStack) || this.document\n    }\n\n    /**\n     * Check if the current location is in a v-pre element.\n     */\n    private get isInVPreElement(): boolean {\n        return this.vPreElement != null\n    }\n\n    /**\n     * Initialize this parser.\n     * @param tokenizer The tokenizer to parse.\n     * @param parserOptions The parser options to parse inline expressions.\n     */\n    public constructor(tokenizer: Tokenizer, parserOptions: ParserOptions) {\n        this.tokenizer = new IntermediateTokenizer(tokenizer)\n        this.locationCalculator = new LocationCalculatorForHtml(\n            tokenizer.gaps,\n            tokenizer.lineTerminators,\n        )\n        this.baseParserOptions = parserOptions\n        this.isSFC = isSFCFile(parserOptions)\n        this.document = {\n            type: \"VDocumentFragment\",\n            range: [0, 0],\n            loc: {\n                start: { line: 1, column: 0 },\n                end: { line: 1, column: 0 },\n            },\n            parent: null,\n            children: [],\n            tokens: this.tokens,\n            comments: this.comments,\n            errors: this.errors,\n        }\n        this.elementStack = []\n        this.vPreElement = null\n\n        this.postProcessesForScript = []\n    }\n\n    /**\n     * Parse the HTML which was given in this constructor.\n     * @returns The result of parsing.\n     */\n    public parse(): VDocumentFragment {\n        let token: IntermediateToken | null = null\n        while ((token = this.tokenizer.nextToken()) != null) {\n            ;(this as any)[token.type](token)\n        }\n\n        this.popElementStackUntil(0)\n        propagateEndLocation(this.document)\n\n        const parserOptions = {\n            ...this.baseParserOptions,\n            parser: getScriptParser(\n                this.baseParserOptions.parser,\n                this.document,\n                \"template\",\n            ),\n        }\n        for (const proc of this.postProcessesForScript) {\n            proc(parserOptions)\n        }\n        this.postProcessesForScript = []\n\n        return this.document\n    }\n\n    /**\n     * Report an invalid character error.\n     * @param code The error code.\n     */\n    private reportParseError(token: HasLocation, code: ErrorCode): void {\n        const error = ParseError.fromCode(\n            code,\n            token.range[0],\n            token.loc.start.line,\n            token.loc.start.column,\n        )\n        this.errors.push(error)\n\n        debug(\"[html] syntax error:\", error.message)\n    }\n\n    /**\n     * Pop an element from the current element stack.\n     */\n    private popElementStack(): void {\n        assert(this.elementStack.length >= 1)\n\n        const element = this.elementStack.pop()!\n        propagateEndLocation(element)\n\n        // Update the current namespace.\n        const current = this.currentNode\n        this.namespace =\n            current.type === \"VElement\" ? current.namespace : NS.HTML\n\n        // Update v-pre state.\n        if (this.vPreElement === element) {\n            this.vPreElement = null\n            this.expressionEnabled = true\n        }\n\n        // Update expression flag.\n        if (this.elementStack.length === 0) {\n            this.expressionEnabled = false\n        }\n    }\n\n    /**\n     * Pop elements from the current element stack.\n     * @param index The index of the element you want to pop.\n     */\n    private popElementStackUntil(index: number): void {\n        while (this.elementStack.length > index) {\n            this.popElementStack()\n        }\n    }\n\n    /**\n     * Gets the tag name from the given node or token.\n     * For SFC, it returns the value of `rawName` to be case sensitive.\n     */\n    private getTagName(startTagOrElement: { name: string; rawName: string }) {\n        return getTagName(startTagOrElement, this.isSFC)\n    }\n\n    /**\n     * Detect the namespace of the new element.\n     * @param token The StartTag token to detect.\n     * @returns The namespace of the new element.\n     */\n    //eslint-disable-next-line complexity\n    private detectNamespace(token: StartTag): Namespace {\n        const name = this.getTagName(token)\n        let ns = this.namespace\n\n        if (ns === NS.MathML || ns === NS.SVG) {\n            const element = this.currentNode\n            if (element.type === \"VElement\") {\n                if (\n                    element.namespace === NS.MathML &&\n                    this.getTagName(element) === \"annotation-xml\" &&\n                    name === \"svg\"\n                ) {\n                    return NS.SVG\n                }\n                if (\n                    isHTMLIntegrationPoint(element, this.isSFC) ||\n                    (isMathMLIntegrationPoint(element, this.isSFC) &&\n                        name !== \"mglyph\" &&\n                        name !== \"malignmark\")\n                ) {\n                    ns = NS.HTML\n                }\n            }\n        }\n\n        if (ns === NS.HTML) {\n            if (name === \"svg\") {\n                return NS.SVG\n            }\n            if (name === \"math\") {\n                return NS.MathML\n            }\n        }\n\n        if (name === \"template\") {\n            const xmlns = token.attributes.find((a) => a.key.name === \"xmlns\")\n            const value = xmlns && xmlns.value && xmlns.value.value\n\n            if (value === NS.HTML || value === NS.MathML || value === NS.SVG) {\n                return value\n            }\n        }\n\n        return ns\n    }\n\n    /**\n     * Close the current element if necessary.\n     * @param token The start tag to check.\n     */\n    private closeCurrentElementIfNecessary(token: StartTag): void {\n        const element = this.currentNode\n        if (element.type !== \"VElement\") {\n            return\n        }\n        const name = this.getTagName(token)\n        const elementName = this.getTagName(element)\n\n        if (elementName === \"p\" && HTML_NON_FHRASING_TAGS.has(name)) {\n            this.popElementStack()\n        }\n        if (elementName === name && HTML_CAN_BE_LEFT_OPEN_TAGS.has(name)) {\n            this.popElementStack()\n        }\n        if (DT_DD.test(elementName) && DT_DD.test(name)) {\n            this.popElementStack()\n        }\n    }\n\n    /**\n     * Adjust and validate the given attribute node.\n     * @param node The attribute node to handle.\n     * @param namespace The current namespace.\n     */\n    private processAttribute(node: VAttribute, namespace: Namespace): void {\n        const tagName = this.getTagName(node.parent.parent)\n        const attrName = this.getTagName(node.key)\n\n        if (\n            (this.expressionEnabled ||\n                (attrName === \"v-pre\" && !this.isInVPreElement)) &&\n            (DIRECTIVE_NAME.test(attrName) ||\n                attrName === \"slot-scope\" ||\n                (tagName === \"template\" && attrName === \"scope\"))\n        ) {\n            this.postProcessesForScript.push((parserOptions) => {\n                convertToDirective(\n                    this.text,\n                    parserOptions,\n                    this.locationCalculator,\n                    node,\n                )\n            })\n            return\n        }\n\n        node.key.name = adjustAttributeName(node.key.name, namespace)\n        const key = this.getTagName(node.key)\n        const value = node.value && node.value.value\n\n        if (key === \"xmlns\" && value !== namespace) {\n            this.reportParseError(node, \"x-invalid-namespace\")\n        } else if (key === \"xmlns:xlink\" && value !== NS.XLink) {\n            this.reportParseError(node, \"x-invalid-namespace\")\n        }\n    }\n\n    /**\n     * Handle the start tag token.\n     * @param token The token to handle.\n     */\n    //eslint-disable-next-line complexity\n    protected StartTag(token: StartTag): void {\n        debug(\"[html] StartTag %j\", token)\n\n        this.closeCurrentElementIfNecessary(token)\n\n        const parent = this.currentNode\n        const namespace = this.detectNamespace(token)\n        const element: VElement = {\n            type: \"VElement\",\n            range: [token.range[0], token.range[1]],\n            loc: { start: token.loc.start, end: token.loc.end },\n            parent,\n            name: adjustElementName(token.name, namespace),\n            rawName: token.rawName,\n            namespace,\n            startTag: {\n                type: \"VStartTag\",\n                range: token.range,\n                loc: token.loc,\n                parent: DUMMY_PARENT,\n                selfClosing: token.selfClosing,\n                attributes: token.attributes,\n            },\n            children: [],\n            endTag: null,\n            variables: [],\n        }\n        const hasVPre =\n            !this.isInVPreElement &&\n            token.attributes.some((a) => this.getTagName(a.key) === \"v-pre\")\n\n        // Disable expression if v-pre\n        if (hasVPre) {\n            this.expressionEnabled = false\n        }\n\n        // Setup relations.\n        parent.children.push(element)\n        element.startTag.parent = element\n        for (const attribute of token.attributes) {\n            attribute.parent = element.startTag\n            this.processAttribute(attribute, namespace)\n        }\n\n        // Resolve references.\n        this.postProcessesForScript.push(() => {\n            for (const attribute of element.startTag.attributes) {\n                if (attribute.directive) {\n                    if (\n                        attribute.key.argument != null &&\n                        attribute.key.argument.type === \"VExpressionContainer\"\n                    ) {\n                        resolveReferences(attribute.key.argument)\n                    }\n                    if (attribute.value != null) {\n                        resolveReferences(attribute.value)\n                    }\n                }\n            }\n        })\n\n        // Check whether the self-closing is valid.\n        const isVoid =\n            namespace === NS.HTML &&\n            HTML_VOID_ELEMENT_TAGS.has(this.getTagName(element))\n        if (token.selfClosing && !isVoid && namespace === NS.HTML) {\n            this.reportParseError(\n                token,\n                \"non-void-html-element-start-tag-with-trailing-solidus\",\n            )\n        }\n\n        // Vue.js supports self-closing elements even if it's not one of void elements.\n        if (token.selfClosing || isVoid) {\n            this.expressionEnabled = !this.isInVPreElement\n            return\n        }\n\n        // Push to stack.\n        this.elementStack.push(element)\n        if (hasVPre) {\n            assert(this.vPreElement === null)\n            this.vPreElement = element\n        }\n        this.namespace = namespace\n\n        // Update the content type of this element.\n        if (namespace === NS.HTML) {\n            const elementName = this.getTagName(element)\n            if (element.parent.type === \"VDocumentFragment\") {\n                const langAttr = element.startTag.attributes.find(\n                    (a) => !a.directive && a.key.name === \"lang\",\n                ) as VAttribute | undefined\n                const lang = langAttr?.value?.value\n\n                if (elementName === \"template\") {\n                    if (lang && lang !== \"html\") {\n                        // It is not an HTML template.\n                        this.tokenizer.state = \"RAWTEXT\"\n                    }\n                    this.expressionEnabled = true\n                } else if (this.isSFC) {\n                    // Element is Custom Block. e.g. <i18n>\n                    // Referred to the Vue parser. See https://github.com/vuejs/vue-next/blob/cbaa3805064cb581fc2007cf63774c91d39844fe/packages/compiler-sfc/src/parse.ts#L127\n                    if (!lang || lang !== \"html\") {\n                        // Custom Block is not HTML.\n                        this.tokenizer.state = \"RAWTEXT\"\n                    }\n                } else {\n                    if (HTML_RCDATA_TAGS.has(elementName)) {\n                        this.tokenizer.state = \"RCDATA\"\n                    }\n                    if (HTML_RAWTEXT_TAGS.has(elementName)) {\n                        this.tokenizer.state = \"RAWTEXT\"\n                    }\n                }\n            } else {\n                if (HTML_RCDATA_TAGS.has(elementName)) {\n                    this.tokenizer.state = \"RCDATA\"\n                }\n                if (HTML_RAWTEXT_TAGS.has(elementName)) {\n                    this.tokenizer.state = \"RAWTEXT\"\n                }\n            }\n        }\n    }\n\n    /**\n     * Handle the end tag token.\n     * @param token The token to handle.\n     */\n    protected EndTag(token: EndTag): void {\n        debug(\"[html] EndTag %j\", token)\n\n        const i = findLastIndex(\n            this.elementStack,\n            (el) => el.name.toLowerCase() === token.name,\n        )\n        if (i === -1) {\n            this.reportParseError(token, \"x-invalid-end-tag\")\n            return\n        }\n\n        const element = this.elementStack[i]\n        element.endTag = {\n            type: \"VEndTag\",\n            range: token.range,\n            loc: token.loc,\n            parent: element,\n        }\n\n        this.popElementStackUntil(i)\n    }\n\n    /**\n     * Handle the text token.\n     * @param token The token to handle.\n     */\n    protected Text(token: Text): void {\n        debug(\"[html] Text %j\", token)\n\n        const parent = this.currentNode\n        parent.children.push({\n            type: \"VText\",\n            range: token.range,\n            loc: token.loc,\n            parent,\n            value: token.value,\n        })\n    }\n\n    /**\n     * Handle the text token.\n     * @param token The token to handle.\n     */\n    protected Mustache(token: Mustache): void {\n        debug(\"[html] Mustache %j\", token)\n\n        const parent = this.currentNode\n        const container: VExpressionContainer = {\n            type: \"VExpressionContainer\",\n            range: token.range,\n            loc: token.loc,\n            parent,\n            expression: null,\n            references: [],\n        }\n        // Set relationship.\n        parent.children.push(container)\n\n        this.postProcessesForScript.push((parserOptions) => {\n            processMustache(\n                parserOptions,\n                this.locationCalculator,\n                container,\n                token,\n            )\n            // Resolve references.\n            resolveReferences(container)\n        })\n    }\n}\n", "/**\n * @author Toru Nagashima <https://github.com/mysticatea>\n * @copyright 2017 Toru Nagashima. All rights reserved.\n * See LICENSE file in root directory for full license.\n */\n\n/**\n * Code mapping of HTML numeric entities.\n */\nexport const alternativeCR = new Map(\n    [[128, 8364], [130, 8218], [131, 402], [132, 8222], [133, 8230], [134, 8224], [135, 8225], [136, 710], [137, 8240], [138, 352], [139, 8249], [140, 338], [142, 381], [145, 8216], [146, 8217], [147, 8220], [148, 8221], [149, 8226], [150, 8211], [151, 8212], [152, 732], [153, 8482], [154, 353], [155, 8250], [156, 339], [158, 382], [159, 376]]\n)\n", "/**\n * @author Toru Nagashima <https://github.com/mysticatea>\n * @copyright 2017 Toru Nagashima. All rights reserved.\n * See LICENSE file in root directory for full license.\n */\n\n/**\n * HTML entities which are separated by their length.\n */\nexport const entitySets: {\n    length: number,\n    entities: {\n        [name: string]: number[] | undefined\n    }\n}[] = [{\"length\":32,\"entities\":{\"CounterClockwiseContourIntegral;\":[8755]}},{\"length\":25,\"entities\":{\"ClockwiseContourIntegral;\":[8754],\"DoubleLongLeftRightArrow;\":[10234]}},{\"length\":24,\"entities\":{\"NotNestedGreaterGreater;\":[10914,824]}},{\"length\":23,\"entities\":{\"DiacriticalDoubleAcute;\":[733],\"NotSquareSupersetEqual;\":[8931]}},{\"length\":22,\"entities\":{\"CloseCurlyDoubleQuote;\":[8221],\"DoubleContourIntegral;\":[8751],\"FilledVerySmallSquare;\":[9642],\"NegativeVeryThinSpace;\":[8203],\"NotPrecedesSlantEqual;\":[8928],\"NotRightTriangleEqual;\":[8941],\"NotSucceedsSlantEqual;\":[8929]}},{\"length\":21,\"entities\":{\"CapitalDifferentialD;\":[8517],\"DoubleLeftRightArrow;\":[8660],\"DoubleLongRightArrow;\":[10233],\"EmptyVerySmallSquare;\":[9643],\"NestedGreaterGreater;\":[8811],\"NotDoubleVerticalBar;\":[8742],\"NotGreaterSlantEqual;\":[10878,824],\"NotLeftTriangleEqual;\":[8940],\"NotSquareSubsetEqual;\":[8930],\"OpenCurlyDoubleQuote;\":[8220],\"ReverseUpEquilibrium;\":[10607]}},{\"length\":20,\"entities\":{\"DoubleLongLeftArrow;\":[10232],\"DownLeftRightVector;\":[10576],\"LeftArrowRightArrow;\":[8646],\"NegativeMediumSpace;\":[8203],\"NotGreaterFullEqual;\":[8807,824],\"NotRightTriangleBar;\":[10704,824],\"RightArrowLeftArrow;\":[8644],\"SquareSupersetEqual;\":[8850],\"leftrightsquigarrow;\":[8621]}},{\"length\":19,\"entities\":{\"DownRightTeeVector;\":[10591],\"DownRightVectorBar;\":[10583],\"LongLeftRightArrow;\":[10231],\"Longleftrightarrow;\":[10234],\"NegativeThickSpace;\":[8203],\"NotLeftTriangleBar;\":[10703,824],\"PrecedesSlantEqual;\":[8828],\"ReverseEquilibrium;\":[8651],\"RightDoubleBracket;\":[10215],\"RightDownTeeVector;\":[10589],\"RightDownVectorBar;\":[10581],\"RightTriangleEqual;\":[8885],\"SquareIntersection;\":[8851],\"SucceedsSlantEqual;\":[8829],\"blacktriangleright;\":[9656],\"longleftrightarrow;\":[10231]}},{\"length\":18,\"entities\":{\"DoubleUpDownArrow;\":[8661],\"DoubleVerticalBar;\":[8741],\"DownLeftTeeVector;\":[10590],\"DownLeftVectorBar;\":[10582],\"FilledSmallSquare;\":[9724],\"GreaterSlantEqual;\":[10878],\"LeftDoubleBracket;\":[10214],\"LeftDownTeeVector;\":[10593],\"LeftDownVectorBar;\":[10585],\"LeftTriangleEqual;\":[8884],\"NegativeThinSpace;\":[8203],\"NotGreaterGreater;\":[8811,824],\"NotLessSlantEqual;\":[10877,824],\"NotNestedLessLess;\":[10913,824],\"NotReverseElement;\":[8716],\"NotSquareSuperset;\":[8848,824],\"NotTildeFullEqual;\":[8775],\"RightAngleBracket;\":[10217],\"RightUpDownVector;\":[10575],\"SquareSubsetEqual;\":[8849],\"VerticalSeparator;\":[10072],\"blacktriangledown;\":[9662],\"blacktriangleleft;\":[9666],\"leftrightharpoons;\":[8651],\"rightleftharpoons;\":[8652],\"twoheadrightarrow;\":[8608]}},{\"length\":17,\"entities\":{\"DiacriticalAcute;\":[180],\"DiacriticalGrave;\":[96],\"DiacriticalTilde;\":[732],\"DoubleRightArrow;\":[8658],\"DownArrowUpArrow;\":[8693],\"EmptySmallSquare;\":[9723],\"GreaterEqualLess;\":[8923],\"GreaterFullEqual;\":[8807],\"LeftAngleBracket;\":[10216],\"LeftUpDownVector;\":[10577],\"LessEqualGreater;\":[8922],\"NonBreakingSpace;\":[160],\"NotPrecedesEqual;\":[10927,824],\"NotRightTriangle;\":[8939],\"NotSucceedsEqual;\":[10928,824],\"NotSucceedsTilde;\":[8831,824],\"NotSupersetEqual;\":[8841],\"RightTriangleBar;\":[10704],\"RightUpTeeVector;\":[10588],\"RightUpVectorBar;\":[10580],\"UnderParenthesis;\":[9181],\"UpArrowDownArrow;\":[8645],\"circlearrowright;\":[8635],\"downharpoonright;\":[8642],\"ntrianglerighteq;\":[8941],\"rightharpoondown;\":[8641],\"rightrightarrows;\":[8649],\"twoheadleftarrow;\":[8606],\"vartriangleright;\":[8883]}},{\"length\":16,\"entities\":{\"CloseCurlyQuote;\":[8217],\"ContourIntegral;\":[8750],\"DoubleDownArrow;\":[8659],\"DoubleLeftArrow;\":[8656],\"DownRightVector;\":[8641],\"LeftRightVector;\":[10574],\"LeftTriangleBar;\":[10703],\"LeftUpTeeVector;\":[10592],\"LeftUpVectorBar;\":[10584],\"LowerRightArrow;\":[8600],\"NotGreaterEqual;\":[8817],\"NotGreaterTilde;\":[8821],\"NotHumpDownHump;\":[8782,824],\"NotLeftTriangle;\":[8938],\"NotSquareSubset;\":[8847,824],\"OverParenthesis;\":[9180],\"RightDownVector;\":[8642],\"ShortRightArrow;\":[8594],\"UpperRightArrow;\":[8599],\"bigtriangledown;\":[9661],\"circlearrowleft;\":[8634],\"curvearrowright;\":[8631],\"downharpoonleft;\":[8643],\"leftharpoondown;\":[8637],\"leftrightarrows;\":[8646],\"nLeftrightarrow;\":[8654],\"nleftrightarrow;\":[8622],\"ntrianglelefteq;\":[8940],\"rightleftarrows;\":[8644],\"rightsquigarrow;\":[8605],\"rightthreetimes;\":[8908],\"straightepsilon;\":[1013],\"trianglerighteq;\":[8885],\"vartriangleleft;\":[8882]}},{\"length\":15,\"entities\":{\"DiacriticalDot;\":[729],\"DoubleRightTee;\":[8872],\"DownLeftVector;\":[8637],\"GreaterGreater;\":[10914],\"HorizontalLine;\":[9472],\"InvisibleComma;\":[8291],\"InvisibleTimes;\":[8290],\"LeftDownVector;\":[8643],\"LeftRightArrow;\":[8596],\"Leftrightarrow;\":[8660],\"LessSlantEqual;\":[10877],\"LongRightArrow;\":[10230],\"Longrightarrow;\":[10233],\"LowerLeftArrow;\":[8601],\"NestedLessLess;\":[8810],\"NotGreaterLess;\":[8825],\"NotLessGreater;\":[8824],\"NotSubsetEqual;\":[8840],\"NotVerticalBar;\":[8740],\"OpenCurlyQuote;\":[8216],\"ReverseElement;\":[8715],\"RightTeeVector;\":[10587],\"RightVectorBar;\":[10579],\"ShortDownArrow;\":[8595],\"ShortLeftArrow;\":[8592],\"SquareSuperset;\":[8848],\"TildeFullEqual;\":[8773],\"UpperLeftArrow;\":[8598],\"ZeroWidthSpace;\":[8203],\"curvearrowleft;\":[8630],\"doublebarwedge;\":[8966],\"downdownarrows;\":[8650],\"hookrightarrow;\":[8618],\"leftleftarrows;\":[8647],\"leftrightarrow;\":[8596],\"leftthreetimes;\":[8907],\"longrightarrow;\":[10230],\"looparrowright;\":[8620],\"nshortparallel;\":[8742],\"ntriangleright;\":[8939],\"rightarrowtail;\":[8611],\"rightharpoonup;\":[8640],\"trianglelefteq;\":[8884],\"upharpoonright;\":[8638]}},{\"length\":14,\"entities\":{\"ApplyFunction;\":[8289],\"DifferentialD;\":[8518],\"DoubleLeftTee;\":[10980],\"DoubleUpArrow;\":[8657],\"LeftTeeVector;\":[10586],\"LeftVectorBar;\":[10578],\"LessFullEqual;\":[8806],\"LongLeftArrow;\":[10229],\"Longleftarrow;\":[10232],\"NotEqualTilde;\":[8770,824],\"NotTildeEqual;\":[8772],\"NotTildeTilde;\":[8777],\"Poincareplane;\":[8460],\"PrecedesEqual;\":[10927],\"PrecedesTilde;\":[8830],\"RightArrowBar;\":[8677],\"RightTeeArrow;\":[8614],\"RightTriangle;\":[8883],\"RightUpVector;\":[8638],\"SucceedsEqual;\":[10928],\"SucceedsTilde;\":[8831],\"SupersetEqual;\":[8839],\"UpEquilibrium;\":[10606],\"VerticalTilde;\":[8768],\"VeryThinSpace;\":[8202],\"bigtriangleup;\":[9651],\"blacktriangle;\":[9652],\"divideontimes;\":[8903],\"fallingdotseq;\":[8786],\"hookleftarrow;\":[8617],\"leftarrowtail;\":[8610],\"leftharpoonup;\":[8636],\"longleftarrow;\":[10229],\"looparrowleft;\":[8619],\"measuredangle;\":[8737],\"ntriangleleft;\":[8938],\"shortparallel;\":[8741],\"smallsetminus;\":[8726],\"triangleright;\":[9657],\"upharpoonleft;\":[8639],\"varsubsetneqq;\":[10955,65024],\"varsupsetneqq;\":[10956,65024]}},{\"length\":13,\"entities\":{\"DownArrowBar;\":[10515],\"DownTeeArrow;\":[8615],\"ExponentialE;\":[8519],\"GreaterEqual;\":[8805],\"GreaterTilde;\":[8819],\"HilbertSpace;\":[8459],\"HumpDownHump;\":[8782],\"Intersection;\":[8898],\"LeftArrowBar;\":[8676],\"LeftTeeArrow;\":[8612],\"LeftTriangle;\":[8882],\"LeftUpVector;\":[8639],\"NotCongruent;\":[8802],\"NotHumpEqual;\":[8783,824],\"NotLessEqual;\":[8816],\"NotLessTilde;\":[8820],\"Proportional;\":[8733],\"RightCeiling;\":[8969],\"RoundImplies;\":[10608],\"ShortUpArrow;\":[8593],\"SquareSubset;\":[8847],\"UnderBracket;\":[9141],\"VerticalLine;\":[124],\"blacklozenge;\":[10731],\"exponentiale;\":[8519],\"risingdotseq;\":[8787],\"triangledown;\":[9663],\"triangleleft;\":[9667],\"varsubsetneq;\":[8842,65024],\"varsupsetneq;\":[8843,65024]}},{\"length\":12,\"entities\":{\"CircleMinus;\":[8854],\"CircleTimes;\":[8855],\"Equilibrium;\":[8652],\"GreaterLess;\":[8823],\"LeftCeiling;\":[8968],\"LessGreater;\":[8822],\"MediumSpace;\":[8287],\"NotLessLess;\":[8810,824],\"NotPrecedes;\":[8832],\"NotSucceeds;\":[8833],\"NotSuperset;\":[8835,8402],\"OverBracket;\":[9140],\"RightVector;\":[8640],\"Rrightarrow;\":[8667],\"RuleDelayed;\":[10740],\"SmallCircle;\":[8728],\"SquareUnion;\":[8852],\"SubsetEqual;\":[8838],\"UpDownArrow;\":[8597],\"Updownarrow;\":[8661],\"VerticalBar;\":[8739],\"backepsilon;\":[1014],\"blacksquare;\":[9642],\"circledcirc;\":[8858],\"circleddash;\":[8861],\"curlyeqprec;\":[8926],\"curlyeqsucc;\":[8927],\"diamondsuit;\":[9830],\"eqslantless;\":[10901],\"expectation;\":[8496],\"nRightarrow;\":[8655],\"nrightarrow;\":[8603],\"preccurlyeq;\":[8828],\"precnapprox;\":[10937],\"quaternions;\":[8461],\"straightphi;\":[981],\"succcurlyeq;\":[8829],\"succnapprox;\":[10938],\"thickapprox;\":[8776],\"updownarrow;\":[8597]}},{\"length\":11,\"entities\":{\"Bernoullis;\":[8492],\"CirclePlus;\":[8853],\"EqualTilde;\":[8770],\"Fouriertrf;\":[8497],\"ImaginaryI;\":[8520],\"Laplacetrf;\":[8466],\"LeftVector;\":[8636],\"Lleftarrow;\":[8666],\"NotElement;\":[8713],\"NotGreater;\":[8815],\"Proportion;\":[8759],\"RightArrow;\":[8594],\"RightFloor;\":[8971],\"Rightarrow;\":[8658],\"ThickSpace;\":[8287,8202],\"TildeEqual;\":[8771],\"TildeTilde;\":[8776],\"UnderBrace;\":[9183],\"UpArrowBar;\":[10514],\"UpTeeArrow;\":[8613],\"circledast;\":[8859],\"complement;\":[8705],\"curlywedge;\":[8911],\"eqslantgtr;\":[10902],\"gtreqqless;\":[10892],\"lessapprox;\":[10885],\"lesseqqgtr;\":[10891],\"lmoustache;\":[9136],\"longmapsto;\":[10236],\"mapstodown;\":[8615],\"mapstoleft;\":[8612],\"nLeftarrow;\":[8653],\"nleftarrow;\":[8602],\"nsubseteqq;\":[10949,824],\"nsupseteqq;\":[10950,824],\"precapprox;\":[10935],\"rightarrow;\":[8594],\"rmoustache;\":[9137],\"sqsubseteq;\":[8849],\"sqsupseteq;\":[8850],\"subsetneqq;\":[10955],\"succapprox;\":[10936],\"supsetneqq;\":[10956],\"upuparrows;\":[8648],\"varepsilon;\":[1013],\"varnothing;\":[8709]}},{\"length\":10,\"entities\":{\"Backslash;\":[8726],\"CenterDot;\":[183],\"CircleDot;\":[8857],\"Congruent;\":[8801],\"Coproduct;\":[8720],\"DoubleDot;\":[168],\"DownArrow;\":[8595],\"DownBreve;\":[785],\"Downarrow;\":[8659],\"HumpEqual;\":[8783],\"LeftArrow;\":[8592],\"LeftFloor;\":[8970],\"Leftarrow;\":[8656],\"LessTilde;\":[8818],\"Mellintrf;\":[8499],\"MinusPlus;\":[8723],\"NotCupCap;\":[8813],\"NotExists;\":[8708],\"NotSubset;\":[8834,8402],\"OverBrace;\":[9182],\"PlusMinus;\":[177],\"Therefore;\":[8756],\"ThinSpace;\":[8201],\"TripleDot;\":[8411],\"UnionPlus;\":[8846],\"backprime;\":[8245],\"backsimeq;\":[8909],\"bigotimes;\":[10754],\"centerdot;\":[183],\"checkmark;\":[10003],\"complexes;\":[8450],\"dotsquare;\":[8865],\"downarrow;\":[8595],\"gtrapprox;\":[10886],\"gtreqless;\":[8923],\"gvertneqq;\":[8809,65024],\"heartsuit;\":[9829],\"leftarrow;\":[8592],\"lesseqgtr;\":[8922],\"lvertneqq;\":[8808,65024],\"ngeqslant;\":[10878,824],\"nleqslant;\":[10877,824],\"nparallel;\":[8742],\"nshortmid;\":[8740],\"nsubseteq;\":[8840],\"nsupseteq;\":[8841],\"pitchfork;\":[8916],\"rationals;\":[8474],\"spadesuit;\":[9824],\"subseteqq;\":[10949],\"subsetneq;\":[8842],\"supseteqq;\":[10950],\"supsetneq;\":[8843],\"therefore;\":[8756],\"triangleq;\":[8796],\"varpropto;\":[8733]}},{\"length\":9,\"entities\":{\"DDotrahd;\":[10513],\"DotEqual;\":[8784],\"Integral;\":[8747],\"LessLess;\":[10913],\"NotEqual;\":[8800],\"NotTilde;\":[8769],\"PartialD;\":[8706],\"Precedes;\":[8826],\"RightTee;\":[8866],\"Succeeds;\":[8827],\"SuchThat;\":[8715],\"Superset;\":[8835],\"Uarrocir;\":[10569],\"UnderBar;\":[95],\"andslope;\":[10840],\"angmsdaa;\":[10664],\"angmsdab;\":[10665],\"angmsdac;\":[10666],\"angmsdad;\":[10667],\"angmsdae;\":[10668],\"angmsdaf;\":[10669],\"angmsdag;\":[10670],\"angmsdah;\":[10671],\"angrtvbd;\":[10653],\"approxeq;\":[8778],\"awconint;\":[8755],\"backcong;\":[8780],\"barwedge;\":[8965],\"bbrktbrk;\":[9142],\"bigoplus;\":[10753],\"bigsqcup;\":[10758],\"biguplus;\":[10756],\"bigwedge;\":[8896],\"boxminus;\":[8863],\"boxtimes;\":[8864],\"bsolhsub;\":[10184],\"capbrcup;\":[10825],\"circledR;\":[174],\"circledS;\":[9416],\"cirfnint;\":[10768],\"clubsuit;\":[9827],\"cupbrcap;\":[10824],\"curlyvee;\":[8910],\"cwconint;\":[8754],\"doteqdot;\":[8785],\"dotminus;\":[8760],\"drbkarow;\":[10512],\"dzigrarr;\":[10239],\"elinters;\":[9191],\"emptyset;\":[8709],\"eqvparsl;\":[10725],\"fpartint;\":[10765],\"geqslant;\":[10878],\"gesdotol;\":[10884],\"gnapprox;\":[10890],\"hksearow;\":[10533],\"hkswarow;\":[10534],\"imagline;\":[8464],\"imagpart;\":[8465],\"infintie;\":[10717],\"integers;\":[8484],\"intercal;\":[8890],\"intlarhk;\":[10775],\"laemptyv;\":[10676],\"ldrushar;\":[10571],\"leqslant;\":[10877],\"lesdotor;\":[10883],\"llcorner;\":[8990],\"lnapprox;\":[10889],\"lrcorner;\":[8991],\"lurdshar;\":[10570],\"mapstoup;\":[8613],\"multimap;\":[8888],\"naturals;\":[8469],\"ncongdot;\":[10861,824],\"notindot;\":[8949,824],\"otimesas;\":[10806],\"parallel;\":[8741],\"plusacir;\":[10787],\"pointint;\":[10773],\"precneqq;\":[10933],\"precnsim;\":[8936],\"profalar;\":[9006],\"profline;\":[8978],\"profsurf;\":[8979],\"raemptyv;\":[10675],\"realpart;\":[8476],\"rppolint;\":[10770],\"rtriltri;\":[10702],\"scpolint;\":[10771],\"setminus;\":[8726],\"shortmid;\":[8739],\"smeparsl;\":[10724],\"sqsubset;\":[8847],\"sqsupset;\":[8848],\"subseteq;\":[8838],\"succneqq;\":[10934],\"succnsim;\":[8937],\"supseteq;\":[8839],\"thetasym;\":[977],\"thicksim;\":[8764],\"timesbar;\":[10801],\"triangle;\":[9653],\"triminus;\":[10810],\"trpezium;\":[9186],\"ulcorner;\":[8988],\"urcorner;\":[8989],\"varkappa;\":[1008],\"varsigma;\":[962],\"vartheta;\":[977]}},{\"length\":8,\"entities\":{\"Because;\":[8757],\"Cayleys;\":[8493],\"Cconint;\":[8752],\"Cedilla;\":[184],\"Diamond;\":[8900],\"DownTee;\":[8868],\"Element;\":[8712],\"Epsilon;\":[917],\"Implies;\":[8658],\"LeftTee;\":[8867],\"NewLine;\":[10],\"NoBreak;\":[8288],\"NotLess;\":[8814],\"Omicron;\":[927],\"OverBar;\":[8254],\"Product;\":[8719],\"UpArrow;\":[8593],\"Uparrow;\":[8657],\"Upsilon;\":[933],\"alefsym;\":[8501],\"angrtvb;\":[8894],\"angzarr;\":[9084],\"asympeq;\":[8781],\"backsim;\":[8765],\"because;\":[8757],\"bemptyv;\":[10672],\"between;\":[8812],\"bigcirc;\":[9711],\"bigodot;\":[10752],\"bigstar;\":[9733],\"bnequiv;\":[8801,8421],\"boxplus;\":[8862],\"ccupssm;\":[10832],\"cemptyv;\":[10674],\"cirscir;\":[10690],\"coloneq;\":[8788],\"congdot;\":[10861],\"cudarrl;\":[10552],\"cudarrr;\":[10549],\"cularrp;\":[10557],\"curarrm;\":[10556],\"dbkarow;\":[10511],\"ddagger;\":[8225],\"ddotseq;\":[10871],\"demptyv;\":[10673],\"diamond;\":[8900],\"digamma;\":[989],\"dotplus;\":[8724],\"dwangle;\":[10662],\"epsilon;\":[949],\"eqcolon;\":[8789],\"equivDD;\":[10872],\"gesdoto;\":[10882],\"gtquest;\":[10876],\"gtrless;\":[8823],\"harrcir;\":[10568],\"intprod;\":[10812],\"isindot;\":[8949],\"larrbfs;\":[10527],\"larrsim;\":[10611],\"lbrksld;\":[10639],\"lbrkslu;\":[10637],\"ldrdhar;\":[10599],\"lesdoto;\":[10881],\"lessdot;\":[8918],\"lessgtr;\":[8822],\"lesssim;\":[8818],\"lotimes;\":[10804],\"lozenge;\":[9674],\"ltquest;\":[10875],\"luruhar;\":[10598],\"maltese;\":[10016],\"minusdu;\":[10794],\"napprox;\":[8777],\"natural;\":[9838],\"nearrow;\":[8599],\"nexists;\":[8708],\"notinva;\":[8713],\"notinvb;\":[8951],\"notinvc;\":[8950],\"notniva;\":[8716],\"notnivb;\":[8958],\"notnivc;\":[8957],\"npolint;\":[10772],\"npreceq;\":[10927,824],\"nsqsube;\":[8930],\"nsqsupe;\":[8931],\"nsubset;\":[8834,8402],\"nsucceq;\":[10928,824],\"nsupset;\":[8835,8402],\"nvinfin;\":[10718],\"nvltrie;\":[8884,8402],\"nvrtrie;\":[8885,8402],\"nwarrow;\":[8598],\"olcross;\":[10683],\"omicron;\":[959],\"orderof;\":[8500],\"orslope;\":[10839],\"pertenk;\":[8241],\"planckh;\":[8462],\"pluscir;\":[10786],\"plussim;\":[10790],\"plustwo;\":[10791],\"precsim;\":[8830],\"quatint;\":[10774],\"questeq;\":[8799],\"rarrbfs;\":[10528],\"rarrsim;\":[10612],\"rbrksld;\":[10638],\"rbrkslu;\":[10640],\"rdldhar;\":[10601],\"realine;\":[8475],\"rotimes;\":[10805],\"ruluhar;\":[10600],\"searrow;\":[8600],\"simplus;\":[10788],\"simrarr;\":[10610],\"subedot;\":[10947],\"submult;\":[10945],\"subplus;\":[10943],\"subrarr;\":[10617],\"succsim;\":[8831],\"supdsub;\":[10968],\"supedot;\":[10948],\"suphsol;\":[10185],\"suphsub;\":[10967],\"suplarr;\":[10619],\"supmult;\":[10946],\"supplus;\":[10944],\"swarrow;\":[8601],\"topfork;\":[10970],\"triplus;\":[10809],\"tritime;\":[10811],\"uparrow;\":[8593],\"upsilon;\":[965],\"uwangle;\":[10663],\"vzigzag;\":[10650],\"zigrarr;\":[8669]}},{\"length\":7,\"entities\":{\"Aacute;\":[193],\"Abreve;\":[258],\"Agrave;\":[192],\"Assign;\":[8788],\"Atilde;\":[195],\"Barwed;\":[8966],\"Bumpeq;\":[8782],\"Cacute;\":[262],\"Ccaron;\":[268],\"Ccedil;\":[199],\"Colone;\":[10868],\"Conint;\":[8751],\"CupCap;\":[8781],\"Dagger;\":[8225],\"Dcaron;\":[270],\"DotDot;\":[8412],\"Dstrok;\":[272],\"Eacute;\":[201],\"Ecaron;\":[282],\"Egrave;\":[200],\"Exists;\":[8707],\"ForAll;\":[8704],\"Gammad;\":[988],\"Gbreve;\":[286],\"Gcedil;\":[290],\"HARDcy;\":[1066],\"Hstrok;\":[294],\"Iacute;\":[205],\"Igrave;\":[204],\"Itilde;\":[296],\"Jsercy;\":[1032],\"Kcedil;\":[310],\"Lacute;\":[313],\"Lambda;\":[923],\"Lcaron;\":[317],\"Lcedil;\":[315],\"Lmidot;\":[319],\"Lstrok;\":[321],\"Nacute;\":[323],\"Ncaron;\":[327],\"Ncedil;\":[325],\"Ntilde;\":[209],\"Oacute;\":[211],\"Odblac;\":[336],\"Ograve;\":[210],\"Oslash;\":[216],\"Otilde;\":[213],\"Otimes;\":[10807],\"Racute;\":[340],\"Rarrtl;\":[10518],\"Rcaron;\":[344],\"Rcedil;\":[342],\"SHCHcy;\":[1065],\"SOFTcy;\":[1068],\"Sacute;\":[346],\"Scaron;\":[352],\"Scedil;\":[350],\"Square;\":[9633],\"Subset;\":[8912],\"Supset;\":[8913],\"Tcaron;\":[356],\"Tcedil;\":[354],\"Tstrok;\":[358],\"Uacute;\":[218],\"Ubreve;\":[364],\"Udblac;\":[368],\"Ugrave;\":[217],\"Utilde;\":[360],\"Vdashl;\":[10982],\"Verbar;\":[8214],\"Vvdash;\":[8874],\"Yacute;\":[221],\"Zacute;\":[377],\"Zcaron;\":[381],\"aacute;\":[225],\"abreve;\":[259],\"agrave;\":[224],\"andand;\":[10837],\"angmsd;\":[8737],\"angsph;\":[8738],\"apacir;\":[10863],\"approx;\":[8776],\"atilde;\":[227],\"barvee;\":[8893],\"barwed;\":[8965],\"becaus;\":[8757],\"bernou;\":[8492],\"bigcap;\":[8898],\"bigcup;\":[8899],\"bigvee;\":[8897],\"bkarow;\":[10509],\"bottom;\":[8869],\"bowtie;\":[8904],\"boxbox;\":[10697],\"bprime;\":[8245],\"brvbar;\":[166],\"bullet;\":[8226],\"bumpeq;\":[8783],\"cacute;\":[263],\"capand;\":[10820],\"capcap;\":[10827],\"capcup;\":[10823],\"capdot;\":[10816],\"ccaron;\":[269],\"ccedil;\":[231],\"circeq;\":[8791],\"cirmid;\":[10991],\"colone;\":[8788],\"commat;\":[64],\"compfn;\":[8728],\"conint;\":[8750],\"coprod;\":[8720],\"copysr;\":[8471],\"cularr;\":[8630],\"cupcap;\":[10822],\"cupcup;\":[10826],\"cupdot;\":[8845],\"curarr;\":[8631],\"curren;\":[164],\"cylcty;\":[9005],\"dagger;\":[8224],\"daleth;\":[8504],\"dcaron;\":[271],\"dfisht;\":[10623],\"divide;\":[247],\"divonx;\":[8903],\"dlcorn;\":[8990],\"dlcrop;\":[8973],\"dollar;\":[36],\"drcorn;\":[8991],\"drcrop;\":[8972],\"dstrok;\":[273],\"eacute;\":[233],\"easter;\":[10862],\"ecaron;\":[283],\"ecolon;\":[8789],\"egrave;\":[232],\"egsdot;\":[10904],\"elsdot;\":[10903],\"emptyv;\":[8709],\"emsp13;\":[8196],\"emsp14;\":[8197],\"eparsl;\":[10723],\"eqcirc;\":[8790],\"equals;\":[61],\"equest;\":[8799],\"female;\":[9792],\"ffilig;\":[64259],\"ffllig;\":[64260],\"forall;\":[8704],\"frac12;\":[189],\"frac13;\":[8531],\"frac14;\":[188],\"frac15;\":[8533],\"frac16;\":[8537],\"frac18;\":[8539],\"frac23;\":[8532],\"frac25;\":[8534],\"frac34;\":[190],\"frac35;\":[8535],\"frac38;\":[8540],\"frac45;\":[8536],\"frac56;\":[8538],\"frac58;\":[8541],\"frac78;\":[8542],\"gacute;\":[501],\"gammad;\":[989],\"gbreve;\":[287],\"gesdot;\":[10880],\"gesles;\":[10900],\"gtlPar;\":[10645],\"gtrarr;\":[10616],\"gtrdot;\":[8919],\"gtrsim;\":[8819],\"hairsp;\":[8202],\"hamilt;\":[8459],\"hardcy;\":[1098],\"hearts;\":[9829],\"hellip;\":[8230],\"hercon;\":[8889],\"homtht;\":[8763],\"horbar;\":[8213],\"hslash;\":[8463],\"hstrok;\":[295],\"hybull;\":[8259],\"hyphen;\":[8208],\"iacute;\":[237],\"igrave;\":[236],\"iiiint;\":[10764],\"iinfin;\":[10716],\"incare;\":[8453],\"inodot;\":[305],\"intcal;\":[8890],\"iquest;\":[191],\"isinsv;\":[8947],\"itilde;\":[297],\"jsercy;\":[1112],\"kappav;\":[1008],\"kcedil;\":[311],\"kgreen;\":[312],\"lAtail;\":[10523],\"lacute;\":[314],\"lagran;\":[8466],\"lambda;\":[955],\"langle;\":[10216],\"larrfs;\":[10525],\"larrhk;\":[8617],\"larrlp;\":[8619],\"larrpl;\":[10553],\"larrtl;\":[8610],\"latail;\":[10521],\"lbrace;\":[123],\"lbrack;\":[91],\"lcaron;\":[318],\"lcedil;\":[316],\"ldquor;\":[8222],\"lesdot;\":[10879],\"lesges;\":[10899],\"lfisht;\":[10620],\"lfloor;\":[8970],\"lharul;\":[10602],\"llhard;\":[10603],\"lmidot;\":[320],\"lmoust;\":[9136],\"loplus;\":[10797],\"lowast;\":[8727],\"lowbar;\":[95],\"lparlt;\":[10643],\"lrhard;\":[10605],\"lsaquo;\":[8249],\"lsquor;\":[8218],\"lstrok;\":[322],\"lthree;\":[8907],\"ltimes;\":[8905],\"ltlarr;\":[10614],\"ltrPar;\":[10646],\"mapsto;\":[8614],\"marker;\":[9646],\"mcomma;\":[10793],\"midast;\":[42],\"midcir;\":[10992],\"middot;\":[183],\"minusb;\":[8863],\"minusd;\":[8760],\"mnplus;\":[8723],\"models;\":[8871],\"mstpos;\":[8766],\"nVDash;\":[8879],\"nVdash;\":[8878],\"nacute;\":[324],\"nbumpe;\":[8783,824],\"ncaron;\":[328],\"ncedil;\":[326],\"nearhk;\":[10532],\"nequiv;\":[8802],\"nesear;\":[10536],\"nexist;\":[8708],\"nltrie;\":[8940],\"notinE;\":[8953,824],\"nparsl;\":[11005,8421],\"nprcue;\":[8928],\"nrarrc;\":[10547,824],\"nrarrw;\":[8605,824],\"nrtrie;\":[8941],\"nsccue;\":[8929],\"nsimeq;\":[8772],\"ntilde;\":[241],\"numero;\":[8470],\"nvDash;\":[8877],\"nvHarr;\":[10500],\"nvdash;\":[8876],\"nvlArr;\":[10498],\"nvrArr;\":[10499],\"nwarhk;\":[10531],\"nwnear;\":[10535],\"oacute;\":[243],\"odblac;\":[337],\"odsold;\":[10684],\"ograve;\":[242],\"ominus;\":[8854],\"origof;\":[8886],\"oslash;\":[248],\"otilde;\":[245],\"otimes;\":[8855],\"parsim;\":[10995],\"percnt;\":[37],\"period;\":[46],\"permil;\":[8240],\"phmmat;\":[8499],\"planck;\":[8463],\"plankv;\":[8463],\"plusdo;\":[8724],\"plusdu;\":[10789],\"plusmn;\":[177],\"preceq;\":[10927],\"primes;\":[8473],\"prnsim;\":[8936],\"propto;\":[8733],\"prurel;\":[8880],\"puncsp;\":[8200],\"qprime;\":[8279],\"rAtail;\":[10524],\"racute;\":[341],\"rangle;\":[10217],\"rarrap;\":[10613],\"rarrfs;\":[10526],\"rarrhk;\":[8618],\"rarrlp;\":[8620],\"rarrpl;\":[10565],\"rarrtl;\":[8611],\"ratail;\":[10522],\"rbrace;\":[125],\"rbrack;\":[93],\"rcaron;\":[345],\"rcedil;\":[343],\"rdquor;\":[8221],\"rfisht;\":[10621],\"rfloor;\":[8971],\"rharul;\":[10604],\"rmoust;\":[9137],\"roplus;\":[10798],\"rpargt;\":[10644],\"rsaquo;\":[8250],\"rsquor;\":[8217],\"rthree;\":[8908],\"rtimes;\":[8906],\"sacute;\":[347],\"scaron;\":[353],\"scedil;\":[351],\"scnsim;\":[8937],\"searhk;\":[10533],\"seswar;\":[10537],\"sfrown;\":[8994],\"shchcy;\":[1097],\"sigmaf;\":[962],\"sigmav;\":[962],\"simdot;\":[10858],\"smashp;\":[10803],\"softcy;\":[1100],\"solbar;\":[9023],\"spades;\":[9824],\"sqcaps;\":[8851,65024],\"sqcups;\":[8852,65024],\"sqsube;\":[8849],\"sqsupe;\":[8850],\"square;\":[9633],\"squarf;\":[9642],\"ssetmn;\":[8726],\"ssmile;\":[8995],\"sstarf;\":[8902],\"subdot;\":[10941],\"subset;\":[8834],\"subsim;\":[10951],\"subsub;\":[10965],\"subsup;\":[10963],\"succeq;\":[10928],\"supdot;\":[10942],\"supset;\":[8835],\"supsim;\":[10952],\"supsub;\":[10964],\"supsup;\":[10966],\"swarhk;\":[10534],\"swnwar;\":[10538],\"target;\":[8982],\"tcaron;\":[357],\"tcedil;\":[355],\"telrec;\":[8981],\"there4;\":[8756],\"thetav;\":[977],\"thinsp;\":[8201],\"thksim;\":[8764],\"timesb;\":[8864],\"timesd;\":[10800],\"topbot;\":[9014],\"topcir;\":[10993],\"tprime;\":[8244],\"tridot;\":[9708],\"tstrok;\":[359],\"uacute;\":[250],\"ubreve;\":[365],\"udblac;\":[369],\"ufisht;\":[10622],\"ugrave;\":[249],\"ulcorn;\":[8988],\"ulcrop;\":[8975],\"urcorn;\":[8989],\"urcrop;\":[8974],\"utilde;\":[361],\"vangrt;\":[10652],\"varphi;\":[981],\"varrho;\":[1009],\"veebar;\":[8891],\"vellip;\":[8942],\"verbar;\":[124],\"vsubnE;\":[10955,65024],\"vsubne;\":[8842,65024],\"vsupnE;\":[10956,65024],\"vsupne;\":[8843,65024],\"wedbar;\":[10847],\"wedgeq;\":[8793],\"weierp;\":[8472],\"wreath;\":[8768],\"xoplus;\":[10753],\"xotime;\":[10754],\"xsqcup;\":[10758],\"xuplus;\":[10756],\"xwedge;\":[8896],\"yacute;\":[253],\"zacute;\":[378],\"zcaron;\":[382],\"zeetrf;\":[8488]}},{\"length\":6,\"entities\":{\"AElig;\":[198],\"Aacute\":[193],\"Acirc;\":[194],\"Agrave\":[192],\"Alpha;\":[913],\"Amacr;\":[256],\"Aogon;\":[260],\"Aring;\":[197],\"Atilde\":[195],\"Breve;\":[728],\"Ccedil\":[199],\"Ccirc;\":[264],\"Colon;\":[8759],\"Cross;\":[10799],\"Dashv;\":[10980],\"Delta;\":[916],\"Eacute\":[201],\"Ecirc;\":[202],\"Egrave\":[200],\"Emacr;\":[274],\"Eogon;\":[280],\"Equal;\":[10869],\"Gamma;\":[915],\"Gcirc;\":[284],\"Hacek;\":[711],\"Hcirc;\":[292],\"IJlig;\":[306],\"Iacute\":[205],\"Icirc;\":[206],\"Igrave\":[204],\"Imacr;\":[298],\"Iogon;\":[302],\"Iukcy;\":[1030],\"Jcirc;\":[308],\"Jukcy;\":[1028],\"Kappa;\":[922],\"Ntilde\":[209],\"OElig;\":[338],\"Oacute\":[211],\"Ocirc;\":[212],\"Ograve\":[210],\"Omacr;\":[332],\"Omega;\":[937],\"Oslash\":[216],\"Otilde\":[213],\"Prime;\":[8243],\"RBarr;\":[10512],\"Scirc;\":[348],\"Sigma;\":[931],\"THORN;\":[222],\"TRADE;\":[8482],\"TSHcy;\":[1035],\"Theta;\":[920],\"Tilde;\":[8764],\"Uacute\":[218],\"Ubrcy;\":[1038],\"Ucirc;\":[219],\"Ugrave\":[217],\"Umacr;\":[362],\"Union;\":[8899],\"Uogon;\":[370],\"UpTee;\":[8869],\"Uring;\":[366],\"VDash;\":[8875],\"Vdash;\":[8873],\"Wcirc;\":[372],\"Wedge;\":[8896],\"Yacute\":[221],\"Ycirc;\":[374],\"aacute\":[225],\"acirc;\":[226],\"acute;\":[180],\"aelig;\":[230],\"agrave\":[224],\"aleph;\":[8501],\"alpha;\":[945],\"amacr;\":[257],\"amalg;\":[10815],\"angle;\":[8736],\"angrt;\":[8735],\"angst;\":[197],\"aogon;\":[261],\"aring;\":[229],\"asymp;\":[8776],\"atilde\":[227],\"awint;\":[10769],\"bcong;\":[8780],\"bdquo;\":[8222],\"bepsi;\":[1014],\"blank;\":[9251],\"blk12;\":[9618],\"blk14;\":[9617],\"blk34;\":[9619],\"block;\":[9608],\"boxDL;\":[9559],\"boxDR;\":[9556],\"boxDl;\":[9558],\"boxDr;\":[9555],\"boxHD;\":[9574],\"boxHU;\":[9577],\"boxHd;\":[9572],\"boxHu;\":[9575],\"boxUL;\":[9565],\"boxUR;\":[9562],\"boxUl;\":[9564],\"boxUr;\":[9561],\"boxVH;\":[9580],\"boxVL;\":[9571],\"boxVR;\":[9568],\"boxVh;\":[9579],\"boxVl;\":[9570],\"boxVr;\":[9567],\"boxdL;\":[9557],\"boxdR;\":[9554],\"boxdl;\":[9488],\"boxdr;\":[9484],\"boxhD;\":[9573],\"boxhU;\":[9576],\"boxhd;\":[9516],\"boxhu;\":[9524],\"boxuL;\":[9563],\"boxuR;\":[9560],\"boxul;\":[9496],\"boxur;\":[9492],\"boxvH;\":[9578],\"boxvL;\":[9569],\"boxvR;\":[9566],\"boxvh;\":[9532],\"boxvl;\":[9508],\"boxvr;\":[9500],\"breve;\":[728],\"brvbar\":[166],\"bsemi;\":[8271],\"bsime;\":[8909],\"bsolb;\":[10693],\"bumpE;\":[10926],\"bumpe;\":[8783],\"caret;\":[8257],\"caron;\":[711],\"ccaps;\":[10829],\"ccedil\":[231],\"ccirc;\":[265],\"ccups;\":[10828],\"cedil;\":[184],\"check;\":[10003],\"clubs;\":[9827],\"colon;\":[58],\"comma;\":[44],\"crarr;\":[8629],\"cross;\":[10007],\"csube;\":[10961],\"csupe;\":[10962],\"ctdot;\":[8943],\"cuepr;\":[8926],\"cuesc;\":[8927],\"cupor;\":[10821],\"curren\":[164],\"cuvee;\":[8910],\"cuwed;\":[8911],\"cwint;\":[8753],\"dashv;\":[8867],\"dblac;\":[733],\"ddarr;\":[8650],\"delta;\":[948],\"dharl;\":[8643],\"dharr;\":[8642],\"diams;\":[9830],\"disin;\":[8946],\"divide\":[247],\"doteq;\":[8784],\"dtdot;\":[8945],\"dtrif;\":[9662],\"duarr;\":[8693],\"duhar;\":[10607],\"eDDot;\":[10871],\"eacute\":[233],\"ecirc;\":[234],\"efDot;\":[8786],\"egrave\":[232],\"emacr;\":[275],\"empty;\":[8709],\"eogon;\":[281],\"eplus;\":[10865],\"epsiv;\":[1013],\"eqsim;\":[8770],\"equiv;\":[8801],\"erDot;\":[8787],\"erarr;\":[10609],\"esdot;\":[8784],\"exist;\":[8707],\"fflig;\":[64256],\"filig;\":[64257],\"fjlig;\":[102,106],\"fllig;\":[64258],\"fltns;\":[9649],\"forkv;\":[10969],\"frac12\":[189],\"frac14\":[188],\"frac34\":[190],\"frasl;\":[8260],\"frown;\":[8994],\"gamma;\":[947],\"gcirc;\":[285],\"gescc;\":[10921],\"gimel;\":[8503],\"gneqq;\":[8809],\"gnsim;\":[8935],\"grave;\":[96],\"gsime;\":[10894],\"gsiml;\":[10896],\"gtcir;\":[10874],\"gtdot;\":[8919],\"harrw;\":[8621],\"hcirc;\":[293],\"hoarr;\":[8703],\"iacute\":[237],\"icirc;\":[238],\"iexcl;\":[161],\"igrave\":[236],\"iiint;\":[8749],\"iiota;\":[8489],\"ijlig;\":[307],\"imacr;\":[299],\"image;\":[8465],\"imath;\":[305],\"imped;\":[437],\"infin;\":[8734],\"iogon;\":[303],\"iprod;\":[10812],\"iquest\":[191],\"isinE;\":[8953],\"isins;\":[8948],\"isinv;\":[8712],\"iukcy;\":[1110],\"jcirc;\":[309],\"jmath;\":[567],\"jukcy;\":[1108],\"kappa;\":[954],\"lAarr;\":[8666],\"lBarr;\":[10510],\"langd;\":[10641],\"laquo;\":[171],\"larrb;\":[8676],\"lates;\":[10925,65024],\"lbarr;\":[10508],\"lbbrk;\":[10098],\"lbrke;\":[10635],\"lceil;\":[8968],\"ldquo;\":[8220],\"lescc;\":[10920],\"lhard;\":[8637],\"lharu;\":[8636],\"lhblk;\":[9604],\"llarr;\":[8647],\"lltri;\":[9722],\"lneqq;\":[8808],\"lnsim;\":[8934],\"loang;\":[10220],\"loarr;\":[8701],\"lobrk;\":[10214],\"lopar;\":[10629],\"lrarr;\":[8646],\"lrhar;\":[8651],\"lrtri;\":[8895],\"lsime;\":[10893],\"lsimg;\":[10895],\"lsquo;\":[8216],\"ltcir;\":[10873],\"ltdot;\":[8918],\"ltrie;\":[8884],\"ltrif;\":[9666],\"mDDot;\":[8762],\"mdash;\":[8212],\"micro;\":[181],\"middot\":[183],\"minus;\":[8722],\"mumap;\":[8888],\"nabla;\":[8711],\"napid;\":[8779,824],\"napos;\":[329],\"natur;\":[9838],\"nbump;\":[8782,824],\"ncong;\":[8775],\"ndash;\":[8211],\"neArr;\":[8663],\"nearr;\":[8599],\"nedot;\":[8784,824],\"nesim;\":[8770,824],\"ngeqq;\":[8807,824],\"ngsim;\":[8821],\"nhArr;\":[8654],\"nharr;\":[8622],\"nhpar;\":[10994],\"nlArr;\":[8653],\"nlarr;\":[8602],\"nleqq;\":[8806,824],\"nless;\":[8814],\"nlsim;\":[8820],\"nltri;\":[8938],\"notin;\":[8713],\"notni;\":[8716],\"npart;\":[8706,824],\"nprec;\":[8832],\"nrArr;\":[8655],\"nrarr;\":[8603],\"nrtri;\":[8939],\"nsime;\":[8772],\"nsmid;\":[8740],\"nspar;\":[8742],\"nsubE;\":[10949,824],\"nsube;\":[8840],\"nsucc;\":[8833],\"nsupE;\":[10950,824],\"nsupe;\":[8841],\"ntilde\":[241],\"numsp;\":[8199],\"nvsim;\":[8764,8402],\"nwArr;\":[8662],\"nwarr;\":[8598],\"oacute\":[243],\"ocirc;\":[244],\"odash;\":[8861],\"oelig;\":[339],\"ofcir;\":[10687],\"ograve\":[242],\"ohbar;\":[10677],\"olarr;\":[8634],\"olcir;\":[10686],\"oline;\":[8254],\"omacr;\":[333],\"omega;\":[969],\"operp;\":[10681],\"oplus;\":[8853],\"orarr;\":[8635],\"order;\":[8500],\"oslash\":[248],\"otilde\":[245],\"ovbar;\":[9021],\"parsl;\":[11005],\"phone;\":[9742],\"plusb;\":[8862],\"pluse;\":[10866],\"plusmn\":[177],\"pound;\":[163],\"prcue;\":[8828],\"prime;\":[8242],\"prnap;\":[10937],\"prsim;\":[8830],\"quest;\":[63],\"rAarr;\":[8667],\"rBarr;\":[10511],\"radic;\":[8730],\"rangd;\":[10642],\"range;\":[10661],\"raquo;\":[187],\"rarrb;\":[8677],\"rarrc;\":[10547],\"rarrw;\":[8605],\"ratio;\":[8758],\"rbarr;\":[10509],\"rbbrk;\":[10099],\"rbrke;\":[10636],\"rceil;\":[8969],\"rdquo;\":[8221],\"reals;\":[8477],\"rhard;\":[8641],\"rharu;\":[8640],\"rlarr;\":[8644],\"rlhar;\":[8652],\"rnmid;\":[10990],\"roang;\":[10221],\"roarr;\":[8702],\"robrk;\":[10215],\"ropar;\":[10630],\"rrarr;\":[8649],\"rsquo;\":[8217],\"rtrie;\":[8885],\"rtrif;\":[9656],\"sbquo;\":[8218],\"sccue;\":[8829],\"scirc;\":[349],\"scnap;\":[10938],\"scsim;\":[8831],\"sdotb;\":[8865],\"sdote;\":[10854],\"seArr;\":[8664],\"searr;\":[8600],\"setmn;\":[8726],\"sharp;\":[9839],\"sigma;\":[963],\"simeq;\":[8771],\"simgE;\":[10912],\"simlE;\":[10911],\"simne;\":[8774],\"slarr;\":[8592],\"smile;\":[8995],\"smtes;\":[10924,65024],\"sqcap;\":[8851],\"sqcup;\":[8852],\"sqsub;\":[8847],\"sqsup;\":[8848],\"srarr;\":[8594],\"starf;\":[9733],\"strns;\":[175],\"subnE;\":[10955],\"subne;\":[8842],\"supnE;\":[10956],\"supne;\":[8843],\"swArr;\":[8665],\"swarr;\":[8601],\"szlig;\":[223],\"theta;\":[952],\"thkap;\":[8776],\"thorn;\":[254],\"tilde;\":[732],\"times;\":[215],\"trade;\":[8482],\"trisb;\":[10701],\"tshcy;\":[1115],\"twixt;\":[8812],\"uacute\":[250],\"ubrcy;\":[1118],\"ucirc;\":[251],\"udarr;\":[8645],\"udhar;\":[10606],\"ugrave\":[249],\"uharl;\":[8639],\"uharr;\":[8638],\"uhblk;\":[9600],\"ultri;\":[9720],\"umacr;\":[363],\"uogon;\":[371],\"uplus;\":[8846],\"upsih;\":[978],\"uring;\":[367],\"urtri;\":[9721],\"utdot;\":[8944],\"utrif;\":[9652],\"uuarr;\":[8648],\"vBarv;\":[10985],\"vDash;\":[8872],\"varpi;\":[982],\"vdash;\":[8866],\"veeeq;\":[8794],\"vltri;\":[8882],\"vnsub;\":[8834,8402],\"vnsup;\":[8835,8402],\"vprop;\":[8733],\"vrtri;\":[8883],\"wcirc;\":[373],\"wedge;\":[8743],\"xcirc;\":[9711],\"xdtri;\":[9661],\"xhArr;\":[10234],\"xharr;\":[10231],\"xlArr;\":[10232],\"xlarr;\":[10229],\"xodot;\":[10752],\"xrArr;\":[10233],\"xrarr;\":[10230],\"xutri;\":[9651],\"yacute\":[253],\"ycirc;\":[375]}},{\"length\":5,\"entities\":{\"AElig\":[198],\"Acirc\":[194],\"Aopf;\":[120120],\"Aring\":[197],\"Ascr;\":[119964],\"Auml;\":[196],\"Barv;\":[10983],\"Beta;\":[914],\"Bopf;\":[120121],\"Bscr;\":[8492],\"CHcy;\":[1063],\"COPY;\":[169],\"Cdot;\":[266],\"Copf;\":[8450],\"Cscr;\":[119966],\"DJcy;\":[1026],\"DScy;\":[1029],\"DZcy;\":[1039],\"Darr;\":[8609],\"Dopf;\":[120123],\"Dscr;\":[119967],\"Ecirc\":[202],\"Edot;\":[278],\"Eopf;\":[120124],\"Escr;\":[8496],\"Esim;\":[10867],\"Euml;\":[203],\"Fopf;\":[120125],\"Fscr;\":[8497],\"GJcy;\":[1027],\"Gdot;\":[288],\"Gopf;\":[120126],\"Gscr;\":[119970],\"Hopf;\":[8461],\"Hscr;\":[8459],\"IEcy;\":[1045],\"IOcy;\":[1025],\"Icirc\":[206],\"Idot;\":[304],\"Iopf;\":[120128],\"Iota;\":[921],\"Iscr;\":[8464],\"Iuml;\":[207],\"Jopf;\":[120129],\"Jscr;\":[119973],\"KHcy;\":[1061],\"KJcy;\":[1036],\"Kopf;\":[120130],\"Kscr;\":[119974],\"LJcy;\":[1033],\"Lang;\":[10218],\"Larr;\":[8606],\"Lopf;\":[120131],\"Lscr;\":[8466],\"Mopf;\":[120132],\"Mscr;\":[8499],\"NJcy;\":[1034],\"Nopf;\":[8469],\"Nscr;\":[119977],\"Ocirc\":[212],\"Oopf;\":[120134],\"Oscr;\":[119978],\"Ouml;\":[214],\"Popf;\":[8473],\"Pscr;\":[119979],\"QUOT;\":[34],\"Qopf;\":[8474],\"Qscr;\":[119980],\"Rang;\":[10219],\"Rarr;\":[8608],\"Ropf;\":[8477],\"Rscr;\":[8475],\"SHcy;\":[1064],\"Sopf;\":[120138],\"Sqrt;\":[8730],\"Sscr;\":[119982],\"Star;\":[8902],\"THORN\":[222],\"TScy;\":[1062],\"Topf;\":[120139],\"Tscr;\":[119983],\"Uarr;\":[8607],\"Ucirc\":[219],\"Uopf;\":[120140],\"Upsi;\":[978],\"Uscr;\":[119984],\"Uuml;\":[220],\"Vbar;\":[10987],\"Vert;\":[8214],\"Vopf;\":[120141],\"Vscr;\":[119985],\"Wopf;\":[120142],\"Wscr;\":[119986],\"Xopf;\":[120143],\"Xscr;\":[119987],\"YAcy;\":[1071],\"YIcy;\":[1031],\"YUcy;\":[1070],\"Yopf;\":[120144],\"Yscr;\":[119988],\"Yuml;\":[376],\"ZHcy;\":[1046],\"Zdot;\":[379],\"Zeta;\":[918],\"Zopf;\":[8484],\"Zscr;\":[119989],\"acirc\":[226],\"acute\":[180],\"aelig\":[230],\"andd;\":[10844],\"andv;\":[10842],\"ange;\":[10660],\"aopf;\":[120146],\"apid;\":[8779],\"apos;\":[39],\"aring\":[229],\"ascr;\":[119990],\"auml;\":[228],\"bNot;\":[10989],\"bbrk;\":[9141],\"beta;\":[946],\"beth;\":[8502],\"bnot;\":[8976],\"bopf;\":[120147],\"boxH;\":[9552],\"boxV;\":[9553],\"boxh;\":[9472],\"boxv;\":[9474],\"bscr;\":[119991],\"bsim;\":[8765],\"bsol;\":[92],\"bull;\":[8226],\"bump;\":[8782],\"caps;\":[8745,65024],\"cdot;\":[267],\"cedil\":[184],\"cent;\":[162],\"chcy;\":[1095],\"cirE;\":[10691],\"circ;\":[710],\"cire;\":[8791],\"comp;\":[8705],\"cong;\":[8773],\"copf;\":[120148],\"copy;\":[169],\"cscr;\":[119992],\"csub;\":[10959],\"csup;\":[10960],\"cups;\":[8746,65024],\"dArr;\":[8659],\"dHar;\":[10597],\"darr;\":[8595],\"dash;\":[8208],\"diam;\":[8900],\"djcy;\":[1106],\"dopf;\":[120149],\"dscr;\":[119993],\"dscy;\":[1109],\"dsol;\":[10742],\"dtri;\":[9663],\"dzcy;\":[1119],\"eDot;\":[8785],\"ecir;\":[8790],\"ecirc\":[234],\"edot;\":[279],\"emsp;\":[8195],\"ensp;\":[8194],\"eopf;\":[120150],\"epar;\":[8917],\"epsi;\":[949],\"escr;\":[8495],\"esim;\":[8770],\"euml;\":[235],\"euro;\":[8364],\"excl;\":[33],\"flat;\":[9837],\"fnof;\":[402],\"fopf;\":[120151],\"fork;\":[8916],\"fscr;\":[119995],\"gdot;\":[289],\"geqq;\":[8807],\"gesl;\":[8923,65024],\"gjcy;\":[1107],\"gnap;\":[10890],\"gneq;\":[10888],\"gopf;\":[120152],\"gscr;\":[8458],\"gsim;\":[8819],\"gtcc;\":[10919],\"gvnE;\":[8809,65024],\"hArr;\":[8660],\"half;\":[189],\"harr;\":[8596],\"hbar;\":[8463],\"hopf;\":[120153],\"hscr;\":[119997],\"icirc\":[238],\"iecy;\":[1077],\"iexcl\":[161],\"imof;\":[8887],\"iocy;\":[1105],\"iopf;\":[120154],\"iota;\":[953],\"iscr;\":[119998],\"isin;\":[8712],\"iuml;\":[239],\"jopf;\":[120155],\"jscr;\":[119999],\"khcy;\":[1093],\"kjcy;\":[1116],\"kopf;\":[120156],\"kscr;\":[120000],\"lArr;\":[8656],\"lHar;\":[10594],\"lang;\":[10216],\"laquo\":[171],\"larr;\":[8592],\"late;\":[10925],\"lcub;\":[123],\"ldca;\":[10550],\"ldsh;\":[8626],\"leqq;\":[8806],\"lesg;\":[8922,65024],\"ljcy;\":[1113],\"lnap;\":[10889],\"lneq;\":[10887],\"lopf;\":[120157],\"lozf;\":[10731],\"lpar;\":[40],\"lscr;\":[120001],\"lsim;\":[8818],\"lsqb;\":[91],\"ltcc;\":[10918],\"ltri;\":[9667],\"lvnE;\":[8808,65024],\"macr;\":[175],\"male;\":[9794],\"malt;\":[10016],\"micro\":[181],\"mlcp;\":[10971],\"mldr;\":[8230],\"mopf;\":[120158],\"mscr;\":[120002],\"nGtv;\":[8811,824],\"nLtv;\":[8810,824],\"nang;\":[8736,8402],\"napE;\":[10864,824],\"nbsp;\":[160],\"ncap;\":[10819],\"ncup;\":[10818],\"ngeq;\":[8817],\"nges;\":[10878,824],\"ngtr;\":[8815],\"nisd;\":[8954],\"njcy;\":[1114],\"nldr;\":[8229],\"nleq;\":[8816],\"nles;\":[10877,824],\"nmid;\":[8740],\"nopf;\":[120159],\"npar;\":[8742],\"npre;\":[10927,824],\"nsce;\":[10928,824],\"nscr;\":[120003],\"nsim;\":[8769],\"nsub;\":[8836],\"nsup;\":[8837],\"ntgl;\":[8825],\"ntlg;\":[8824],\"nvap;\":[8781,8402],\"nvge;\":[8805,8402],\"nvgt;\":[62,8402],\"nvle;\":[8804,8402],\"nvlt;\":[60,8402],\"oast;\":[8859],\"ocir;\":[8858],\"ocirc\":[244],\"odiv;\":[10808],\"odot;\":[8857],\"ogon;\":[731],\"oint;\":[8750],\"omid;\":[10678],\"oopf;\":[120160],\"opar;\":[10679],\"ordf;\":[170],\"ordm;\":[186],\"oror;\":[10838],\"oscr;\":[8500],\"osol;\":[8856],\"ouml;\":[246],\"para;\":[182],\"part;\":[8706],\"perp;\":[8869],\"phiv;\":[981],\"plus;\":[43],\"popf;\":[120161],\"pound\":[163],\"prap;\":[10935],\"prec;\":[8826],\"prnE;\":[10933],\"prod;\":[8719],\"prop;\":[8733],\"pscr;\":[120005],\"qint;\":[10764],\"qopf;\":[120162],\"qscr;\":[120006],\"quot;\":[34],\"rArr;\":[8658],\"rHar;\":[10596],\"race;\":[8765,817],\"rang;\":[10217],\"raquo\":[187],\"rarr;\":[8594],\"rcub;\":[125],\"rdca;\":[10551],\"rdsh;\":[8627],\"real;\":[8476],\"rect;\":[9645],\"rhov;\":[1009],\"ring;\":[730],\"ropf;\":[120163],\"rpar;\":[41],\"rscr;\":[120007],\"rsqb;\":[93],\"rtri;\":[9657],\"scap;\":[10936],\"scnE;\":[10934],\"sdot;\":[8901],\"sect;\":[167],\"semi;\":[59],\"sext;\":[10038],\"shcy;\":[1096],\"sime;\":[8771],\"simg;\":[10910],\"siml;\":[10909],\"smid;\":[8739],\"smte;\":[10924],\"solb;\":[10692],\"sopf;\":[120164],\"spar;\":[8741],\"squf;\":[9642],\"sscr;\":[120008],\"star;\":[9734],\"subE;\":[10949],\"sube;\":[8838],\"succ;\":[8827],\"sung;\":[9834],\"sup1;\":[185],\"sup2;\":[178],\"sup3;\":[179],\"supE;\":[10950],\"supe;\":[8839],\"szlig\":[223],\"tbrk;\":[9140],\"tdot;\":[8411],\"thorn\":[254],\"times\":[215],\"tint;\":[8749],\"toea;\":[10536],\"topf;\":[120165],\"tosa;\":[10537],\"trie;\":[8796],\"tscr;\":[120009],\"tscy;\":[1094],\"uArr;\":[8657],\"uHar;\":[10595],\"uarr;\":[8593],\"ucirc\":[251],\"uopf;\":[120166],\"upsi;\":[965],\"uscr;\":[120010],\"utri;\":[9653],\"uuml;\":[252],\"vArr;\":[8661],\"vBar;\":[10984],\"varr;\":[8597],\"vert;\":[124],\"vopf;\":[120167],\"vscr;\":[120011],\"wopf;\":[120168],\"wscr;\":[120012],\"xcap;\":[8898],\"xcup;\":[8899],\"xmap;\":[10236],\"xnis;\":[8955],\"xopf;\":[120169],\"xscr;\":[120013],\"xvee;\":[8897],\"yacy;\":[1103],\"yicy;\":[1111],\"yopf;\":[120170],\"yscr;\":[120014],\"yucy;\":[1102],\"yuml;\":[255],\"zdot;\":[380],\"zeta;\":[950],\"zhcy;\":[1078],\"zopf;\":[120171],\"zscr;\":[120015],\"zwnj;\":[8204]}},{\"length\":4,\"entities\":{\"AMP;\":[38],\"Acy;\":[1040],\"Afr;\":[120068],\"And;\":[10835],\"Auml\":[196],\"Bcy;\":[1041],\"Bfr;\":[120069],\"COPY\":[169],\"Cap;\":[8914],\"Cfr;\":[8493],\"Chi;\":[935],\"Cup;\":[8915],\"Dcy;\":[1044],\"Del;\":[8711],\"Dfr;\":[120071],\"Dot;\":[168],\"ENG;\":[330],\"ETH;\":[208],\"Ecy;\":[1069],\"Efr;\":[120072],\"Eta;\":[919],\"Euml\":[203],\"Fcy;\":[1060],\"Ffr;\":[120073],\"Gcy;\":[1043],\"Gfr;\":[120074],\"Hat;\":[94],\"Hfr;\":[8460],\"Icy;\":[1048],\"Ifr;\":[8465],\"Int;\":[8748],\"Iuml\":[207],\"Jcy;\":[1049],\"Jfr;\":[120077],\"Kcy;\":[1050],\"Kfr;\":[120078],\"Lcy;\":[1051],\"Lfr;\":[120079],\"Lsh;\":[8624],\"Map;\":[10501],\"Mcy;\":[1052],\"Mfr;\":[120080],\"Ncy;\":[1053],\"Nfr;\":[120081],\"Not;\":[10988],\"Ocy;\":[1054],\"Ofr;\":[120082],\"Ouml\":[214],\"Pcy;\":[1055],\"Pfr;\":[120083],\"Phi;\":[934],\"Psi;\":[936],\"QUOT\":[34],\"Qfr;\":[120084],\"REG;\":[174],\"Rcy;\":[1056],\"Rfr;\":[8476],\"Rho;\":[929],\"Rsh;\":[8625],\"Scy;\":[1057],\"Sfr;\":[120086],\"Sub;\":[8912],\"Sum;\":[8721],\"Sup;\":[8913],\"Tab;\":[9],\"Tau;\":[932],\"Tcy;\":[1058],\"Tfr;\":[120087],\"Ucy;\":[1059],\"Ufr;\":[120088],\"Uuml\":[220],\"Vcy;\":[1042],\"Vee;\":[8897],\"Vfr;\":[120089],\"Wfr;\":[120090],\"Xfr;\":[120091],\"Ycy;\":[1067],\"Yfr;\":[120092],\"Zcy;\":[1047],\"Zfr;\":[8488],\"acE;\":[8766,819],\"acd;\":[8767],\"acy;\":[1072],\"afr;\":[120094],\"amp;\":[38],\"and;\":[8743],\"ang;\":[8736],\"apE;\":[10864],\"ape;\":[8778],\"ast;\":[42],\"auml\":[228],\"bcy;\":[1073],\"bfr;\":[120095],\"bne;\":[61,8421],\"bot;\":[8869],\"cap;\":[8745],\"cent\":[162],\"cfr;\":[120096],\"chi;\":[967],\"cir;\":[9675],\"copy\":[169],\"cup;\":[8746],\"dcy;\":[1076],\"deg;\":[176],\"dfr;\":[120097],\"die;\":[168],\"div;\":[247],\"dot;\":[729],\"ecy;\":[1101],\"efr;\":[120098],\"egs;\":[10902],\"ell;\":[8467],\"els;\":[10901],\"eng;\":[331],\"eta;\":[951],\"eth;\":[240],\"euml\":[235],\"fcy;\":[1092],\"ffr;\":[120099],\"gEl;\":[10892],\"gap;\":[10886],\"gcy;\":[1075],\"gel;\":[8923],\"geq;\":[8805],\"ges;\":[10878],\"gfr;\":[120100],\"ggg;\":[8921],\"glE;\":[10898],\"gla;\":[10917],\"glj;\":[10916],\"gnE;\":[8809],\"gne;\":[10888],\"hfr;\":[120101],\"icy;\":[1080],\"iff;\":[8660],\"ifr;\":[120102],\"int;\":[8747],\"iuml\":[239],\"jcy;\":[1081],\"jfr;\":[120103],\"kcy;\":[1082],\"kfr;\":[120104],\"lEg;\":[10891],\"lap;\":[10885],\"lat;\":[10923],\"lcy;\":[1083],\"leg;\":[8922],\"leq;\":[8804],\"les;\":[10877],\"lfr;\":[120105],\"lgE;\":[10897],\"lnE;\":[8808],\"lne;\":[10887],\"loz;\":[9674],\"lrm;\":[8206],\"lsh;\":[8624],\"macr\":[175],\"map;\":[8614],\"mcy;\":[1084],\"mfr;\":[120106],\"mho;\":[8487],\"mid;\":[8739],\"nGg;\":[8921,824],\"nGt;\":[8811,8402],\"nLl;\":[8920,824],\"nLt;\":[8810,8402],\"nap;\":[8777],\"nbsp\":[160],\"ncy;\":[1085],\"nfr;\":[120107],\"ngE;\":[8807,824],\"nge;\":[8817],\"ngt;\":[8815],\"nis;\":[8956],\"niv;\":[8715],\"nlE;\":[8806,824],\"nle;\":[8816],\"nlt;\":[8814],\"not;\":[172],\"npr;\":[8832],\"nsc;\":[8833],\"num;\":[35],\"ocy;\":[1086],\"ofr;\":[120108],\"ogt;\":[10689],\"ohm;\":[937],\"olt;\":[10688],\"ord;\":[10845],\"ordf\":[170],\"ordm\":[186],\"orv;\":[10843],\"ouml\":[246],\"par;\":[8741],\"para\":[182],\"pcy;\":[1087],\"pfr;\":[120109],\"phi;\":[966],\"piv;\":[982],\"prE;\":[10931],\"pre;\":[10927],\"psi;\":[968],\"qfr;\":[120110],\"quot\":[34],\"rcy;\":[1088],\"reg;\":[174],\"rfr;\":[120111],\"rho;\":[961],\"rlm;\":[8207],\"rsh;\":[8625],\"scE;\":[10932],\"sce;\":[10928],\"scy;\":[1089],\"sect\":[167],\"sfr;\":[120112],\"shy;\":[173],\"sim;\":[8764],\"smt;\":[10922],\"sol;\":[47],\"squ;\":[9633],\"sub;\":[8834],\"sum;\":[8721],\"sup1\":[185],\"sup2\":[178],\"sup3\":[179],\"sup;\":[8835],\"tau;\":[964],\"tcy;\":[1090],\"tfr;\":[120113],\"top;\":[8868],\"ucy;\":[1091],\"ufr;\":[120114],\"uml;\":[168],\"uuml\":[252],\"vcy;\":[1074],\"vee;\":[8744],\"vfr;\":[120115],\"wfr;\":[120116],\"xfr;\":[120117],\"ycy;\":[1099],\"yen;\":[165],\"yfr;\":[120118],\"yuml\":[255],\"zcy;\":[1079],\"zfr;\":[120119],\"zwj;\":[8205]}},{\"length\":3,\"entities\":{\"AMP\":[38],\"DD;\":[8517],\"ETH\":[208],\"GT;\":[62],\"Gg;\":[8921],\"Gt;\":[8811],\"Im;\":[8465],\"LT;\":[60],\"Ll;\":[8920],\"Lt;\":[8810],\"Mu;\":[924],\"Nu;\":[925],\"Or;\":[10836],\"Pi;\":[928],\"Pr;\":[10939],\"REG\":[174],\"Re;\":[8476],\"Sc;\":[10940],\"Xi;\":[926],\"ac;\":[8766],\"af;\":[8289],\"amp\":[38],\"ap;\":[8776],\"dd;\":[8518],\"deg\":[176],\"ee;\":[8519],\"eg;\":[10906],\"el;\":[10905],\"eth\":[240],\"gE;\":[8807],\"ge;\":[8805],\"gg;\":[8811],\"gl;\":[8823],\"gt;\":[62],\"ic;\":[8291],\"ii;\":[8520],\"in;\":[8712],\"it;\":[8290],\"lE;\":[8806],\"le;\":[8804],\"lg;\":[8822],\"ll;\":[8810],\"lt;\":[60],\"mp;\":[8723],\"mu;\":[956],\"ne;\":[8800],\"ni;\":[8715],\"not\":[172],\"nu;\":[957],\"oS;\":[9416],\"or;\":[8744],\"pi;\":[960],\"pm;\":[177],\"pr;\":[8826],\"reg\":[174],\"rx;\":[8478],\"sc;\":[8827],\"shy\":[173],\"uml\":[168],\"wp;\":[8472],\"wr;\":[8768],\"xi;\":[958],\"yen\":[165]}},{\"length\":2,\"entities\":{\"GT\":[62],\"LT\":[60],\"gt\":[62],\"lt\":[60]}}]\n", "/**\n * @author Toru Nagashima <https://github.com/mysticatea>\n * @copyright 2017 Toru Nagashima. All rights reserved.\n * See LICENSE file in root directory for full license.\n */\n\nexport const EOF = -1\nexport const NULL = 0x00\nexport const TABULATION = 0x09\nexport const CARRIAGE_RETURN = 0x0D\nexport const LINE_FEED = 0x0A\nexport const FORM_FEED = 0x0C\nexport const SPACE = 0x20\nexport const EXCLAMATION_MARK = 0x21\nexport const QUOTATION_MARK = 0x22\nexport const NUMBER_SIGN = 0x23\nexport const AMPERSAND = 0x26\nexport const APOSTROPHE = 0x27\nexport const HYPHEN_MINUS = 0x2D\nexport const SOLIDUS = 0x2F\nexport const DIGIT_0 = 0x30\nexport const DIGIT_9 = 0x39\nexport const SEMICOLON = 0x3B\nexport const LESS_THAN_SIGN = 0x3C\nexport const EQUALS_SIGN = 0x3D\nexport const GREATER_THAN_SIGN = 0x3E\nexport const QUESTION_MARK = 0x3F\nexport const LATIN_CAPITAL_A = 0x41\nexport const LATIN_CAPITAL_D = 0x44\nexport const LATIN_CAPITAL_F = 0x46\nexport const LATIN_CAPITAL_X = 0x58\nexport const LATIN_CAPITAL_Z = 0x5A\nexport const LEFT_SQUARE_BRACKET = 0x5B\nexport const RIGHT_SQUARE_BRACKET = 0x5D\nexport const GRAVE_ACCENT = 0x60\nexport const LATIN_SMALL_A = 0x61\nexport const LATIN_SMALL_F = 0x66\nexport const LATIN_SMALL_X = 0x78\nexport const LATIN_SMALL_Z = 0x7A\nexport const LEFT_CURLY_BRACKET = 0x7B\nexport const RIGHT_CURLY_BRACKET = 0x7D\nexport const NULL_REPLACEMENT = 0xFFFD\n\n/**\n * Check whether the code point is a whitespace.\n * @param cp The code point to check.\n * @returns `true` if the code point is a whitespace.\n */\nexport function isWhitespace(cp: number): boolean {\n    return cp === TABULATION || cp === LINE_FEED || cp === FORM_FEED || cp === CARRIAGE_RETURN || cp === SPACE\n}\n\n/**\n * Check whether the code point is an uppercase letter character.\n * @param cp The code point to check.\n * @returns `true` if the code point is an uppercase letter character.\n */\nexport function isUpperLetter(cp: number): boolean {\n    return cp >= LATIN_CAPITAL_A && cp <= LATIN_CAPITAL_Z\n}\n\n/**\n * Check whether the code point is a lowercase letter character.\n * @param cp The code point to check.\n * @returns `true` if the code point is a lowercase letter character.\n */\nexport function isLowerLetter(cp: number): boolean {\n    return cp >= LATIN_SMALL_A && cp <= LATIN_SMALL_Z\n}\n\n/**\n * Check whether the code point is a letter character.\n * @param cp The code point to check.\n * @returns `true` if the code point is a letter character.\n */\nexport function isLetter(cp: number): boolean {\n    return isLowerLetter(cp) || isUpperLetter(cp)\n}\n\n/**\n * Check whether the code point is a digit character.\n * @param cp The code point to check.\n * @returns `true` if the code point is a digit character.\n */\nexport function isDigit(cp: number): boolean {\n    return cp >= DIGIT_0 && cp <= DIGIT_9\n}\n\n/**\n * Check whether the code point is a digit character.\n * @param cp The code point to check.\n * @returns `true` if the code point is a digit character.\n */\nexport function isUpperHexDigit(cp: number): boolean {\n    return cp >= LATIN_CAPITAL_A && cp <= LATIN_CAPITAL_F\n}\n\n/**\n * Check whether the code point is a digit character.\n * @param cp The code point to check.\n * @returns `true` if the code point is a digit character.\n */\nexport function isLowerHexDigit(cp: number): boolean {\n    return cp >= LATIN_SMALL_A && cp <= LATIN_SMALL_F\n}\n\n/**\n * Check whether the code point is a digit character.\n * @param cp The code point to check.\n * @returns `true` if the code point is a digit character.\n */\nexport function isHexDigit(cp: number): boolean {\n    return isDigit(cp) || isUpperHexDigit(cp) || isLowerHexDigit(cp)\n}\n\n/**\n * Check whether the code point is a control character.\n * @param cp The code point to check.\n * @returns `true` if the code point is a control character.\n */\nexport function isControl(cp: number): boolean {\n    return (cp >= 0 && cp <= 0x1F) || (cp >= 0x7F && cp <= 0x9F)\n}\n\n/**\n * Check whether the code point is a surrogate character.\n * @param cp The code point to check.\n * @returns `true` if the code point is a surrogate character.\n */\nexport function isSurrogate(cp: number): boolean {\n    return cp >= 0xD800 && cp <= 0xDFFF\n}\n\n/**\n * Check whether the code point is a surrogate pair character.\n * @param cp The code point to check.\n * @returns `true` if the code point is a surrogate pair character.\n */\nexport function isSurrogatePair(cp: number): boolean {\n    return cp >= 0xDC00 && cp <= 0xDFFF\n}\n\n/**\n * Check whether the code point is a surrogate character.\n * @param cp The code point to check.\n * @returns `true` if the code point is a surrogate character.\n */\nexport function isNonCharacter(cp: number): boolean {\n    return (\n        (cp >= 0xFDD0 && cp <= 0xFDEF) ||\n        ((cp & 0xFFFE) === 0xFFFE && cp <= 0x10FFFF)\n    )\n}\n\n// export function isReservedCodePoint(cp: number): boolean {\n//     return (cp >= 0xD800 && cp <= 0xDFFF) || cp > 0x10FFFF\n// }\n\n/**\n * Convert the given character to lowercases.\n * @param cp The code point to convert.\n * @returns Converted code point.\n */\nexport function toLowerCodePoint(cp: number): number {\n    return cp + 0x0020\n}\n", "/**\n * @author Toru Nagashima <https://github.com/mysticatea>\n * @copyright 2017 Toru Nagashima. All rights reserved.\n * See LICENSE file in root directory for full license.\n */\n\n/*eslint-disable no-constant-condition, no-param-reassign */\n\nimport assert from \"assert\"\nimport { debug } from \"../common/debug\"\nimport type { ErrorCode, Namespace, Token } from \"../ast\"\nimport { NS, ParseError } from \"../ast\"\nimport { alternativeCR } from \"./util/alternative-cr\"\nimport { entitySets } from \"./util/entities\"\nimport {\n    AMPERSAND,\n    APOSTROPHE,\n    CARRIAGE_RETURN,\n    EOF,\n    EQUALS_SIGN,\n    EXCLAMATION_MARK,\n    GRAVE_ACCENT,\n    GREATER_THAN_SIGN,\n    HYPHEN_MINUS,\n    isControl,\n    isDigit,\n    isHexDigit,\n    isLetter,\n    isLowerHexDigit,\n    isNonCharacter,\n    isSurrogate,\n    isSurrogatePair,\n    isUpperHexDigit,\n    isUpperLetter,\n    isWhitespace,\n    LATIN_CAPITAL_D,\n    LATIN_CAPITAL_X,\n    LATIN_SMALL_X,\n    LEFT_CURLY_BRACKET,\n    LEFT_SQUARE_BRACKET,\n    LESS_THAN_SIGN,\n    LINE_FEED,\n    NULL,\n    NULL_REPLACEMENT,\n    NUMBER_SIGN,\n    QUESTION_MARK,\n    QUOTATION_MARK,\n    RIGHT_CURLY_BRACKET,\n    RIGHT_SQUARE_BRACKET,\n    SEMICOLON,\n    SOLIDUS,\n    toLowerCodePoint,\n} from \"./util/unicode\"\nimport type { ParserOptions } from \"../common/parser-options\"\n\n/**\n * Enumeration of token types.\n */\nexport type TokenType =\n    | \"HTMLAssociation\"\n    | \"HTMLBogusComment\"\n    | \"HTMLCDataText\"\n    | \"HTMLComment\"\n    | \"HTMLEndTagOpen\"\n    | \"HTMLIdentifier\"\n    | \"HTMLLiteral\"\n    | \"HTMLRCDataText\"\n    | \"HTMLRawText\"\n    | \"HTMLSelfClosingTagClose\"\n    | \"HTMLTagClose\"\n    | \"HTMLTagOpen\"\n    | \"HTMLText\"\n    | \"HTMLWhitespace\"\n    | \"VExpressionStart\"\n    | \"VExpressionEnd\"\n\n/**\n * Enumeration of tokenizer's state types.\n */\nexport type TokenizerState =\n    | \"DATA\"\n    | \"TAG_OPEN\"\n    | \"END_TAG_OPEN\"\n    | \"TAG_NAME\"\n    | \"RCDATA\"\n    | \"RCDATA_LESS_THAN_SIGN\"\n    | \"RCDATA_END_TAG_OPEN\"\n    | \"RCDATA_END_TAG_NAME\"\n    | \"RAWTEXT\"\n    | \"RAWTEXT_LESS_THAN_SIGN\"\n    | \"RAWTEXT_END_TAG_OPEN\"\n    | \"RAWTEXT_END_TAG_NAME\"\n    | \"BEFORE_ATTRIBUTE_NAME\"\n    | \"ATTRIBUTE_NAME\"\n    | \"AFTER_ATTRIBUTE_NAME\"\n    | \"BEFORE_ATTRIBUTE_VALUE\"\n    | \"ATTRIBUTE_VALUE_DOUBLE_QUOTED\"\n    | \"ATTRIBUTE_VALUE_SINGLE_QUOTED\"\n    | \"ATTRIBUTE_VALUE_UNQUOTED\"\n    | \"AFTER_ATTRIBUTE_VALUE_QUOTED\"\n    | \"SELF_CLOSING_START_TAG\"\n    | \"BOGUS_COMMENT\"\n    | \"MARKUP_DECLARATION_OPEN\"\n    | \"COMMENT_START\"\n    | \"COMMENT_START_DASH\"\n    | \"COMMENT\"\n    | \"COMMENT_LESS_THAN_SIGN\"\n    | \"COMMENT_LESS_THAN_SIGN_BANG\"\n    | \"COMMENT_LESS_THAN_SIGN_BANG_DASH\"\n    | \"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\"\n    | \"COMMENT_END_DASH\"\n    | \"COMMENT_END\"\n    | \"COMMENT_END_BANG\"\n    | \"CDATA_SECTION\"\n    | \"CDATA_SECTION_BRACKET\"\n    | \"CDATA_SECTION_END\"\n    | \"CHARACTER_REFERENCE\"\n    | \"NAMED_CHARACTER_REFERENCE\"\n    | \"AMBIGUOUS_AMPERSAND\"\n    | \"NUMERIC_CHARACTER_REFERENCE\"\n    | \"HEXADEMICAL_CHARACTER_REFERENCE_START\"\n    | \"DECIMAL_CHARACTER_REFERENCE_START\"\n    | \"HEXADEMICAL_CHARACTER_REFERENCE\"\n    | \"DECIMAL_CHARACTER_REFERENCE\"\n    | \"NUMERIC_CHARACTER_REFERENCE_END\"\n    | \"CHARACTER_REFERENCE_END\"\n    | \"V_EXPRESSION_START\"\n    | \"V_EXPRESSION_DATA\"\n    | \"V_EXPRESSION_END\"\n// ---- Use RAWTEXT state for <script> elements instead ----\n// \"SCRIPT_DATA\" |\n// \"SCRIPT_DATA_LESS_THAN_SIGN\" |\n// \"SCRIPT_DATA_END_TAG_OPEN\" |\n// \"SCRIPT_DATA_END_TAG_NAME\" |\n// \"SCRIPT_DATA_ESCAPE_START\" |\n// \"SCRIPT_DATA_ESCAPE_START_DASH\" |\n// \"SCRIPT_DATA_ESCAPED\" |\n// \"SCRIPT_DATA_ESCAPED_DASH\" |\n// \"SCRIPT_DATA_ESCAPED_DASH_DASH\" |\n// \"SCRIPT_DATA_ESCAPED_LESS_THAN_SIGN\" |\n// \"SCRIPT_DATA_ESCAPED_END_TAG_OPEN\" |\n// \"SCRIPT_DATA_ESCAPED_END_TAG_NAME\" |\n// \"SCRIPT_DATA_DOUBLE_ESCAPE_START\" |\n// \"SCRIPT_DATA_DOUBLE_ESCAPED\" |\n// \"SCRIPT_DATA_DOUBLE_ESCAPED_DASH\" |\n// \"SCRIPT_DATA_DOUBLE_ESCAPED_DASH_DASH\" |\n// \"SCRIPT_DATA_DOUBLE_ESCAPED_LESS_THAN_SIGN\" |\n// \"SCRIPT_DATA_DOUBLE_ESCAPE_END\" |\n// ---- Use BOGUS_COMMENT state for DOCTYPEs instead ----\n// \"DOCTYPE\" |\n// \"DOCTYPE_NAME\" |\n// \"AFTER_DOCTYPE_NAME\" |\n// \"BEFORE_DOCTYPE_PUBLIC_IDENTIFIER\" |\n// \"DOCTYPE_PUBLIC_IDENTIFIER_DOUBLE_QUOTED\" |\n// \"DOCTYPE_PUBLIC_IDENTIFIER_SINGLE_QUOTED\" |\n// \"BETWEEN_DOCTYPE_PUBLIC_AND_SYSTEM_IDENTIFIERS\" |\n// \"BEFORE_DOCTYPE_SYSTEM_IDENTIFIER\" |\n// \"DOCTYPE_SYSTEM_IDENTIFIER_DOUBLE_QUOTED\" |\n// \"DOCTYPE_SYSTEM_IDENTIFIER_SINGLE_QUOTED\" |\n// \"AFTER_DOCTYPE_SYSTEM_IDENTIFIER\" |\n// \"BOGUS_DOCTYPE\"\n\n/**\n * Tokenizer for HTML.\n */\nexport class Tokenizer {\n    // Reading\n    public readonly text: string\n    public readonly gaps: number[]\n    public readonly lineTerminators: number[]\n    private readonly parserOptions: ParserOptions\n    private lastCodePoint: number\n    private offset: number\n    private column: number\n    private line: number\n\n    // Tokenizing\n    private returnState: TokenizerState\n    private vExpressionScriptState: { state: TokenizerState } | null = null\n    private reconsuming: boolean\n    private buffer: number[]\n    private crStartOffset: number\n    private crCode: number\n    private committedToken: Token | null\n    private provisionalToken: Token | null // can be rollbacked.\n    private currentToken: Token | null\n    private lastTagOpenToken: Token | null\n    private tokenStartOffset: number\n    private tokenStartLine: number\n    private tokenStartColumn: number\n\n    /**\n     * The current state.\n     */\n    public state: TokenizerState\n\n    /**\n     * Syntax errors.\n     */\n    public errors: ParseError[]\n\n    /**\n     * The current namespace.\n     */\n    public namespace: Namespace\n\n    /**\n     * The flag which enables expression tokens.\n     * If this is true, this tokenizer will generate V_EXPRESSION_START and V_EXPRESSION_END tokens.\n     */\n    public expressionEnabled: boolean\n\n    /**\n     * Initialize this tokenizer.\n     * @param text The source code to tokenize.\n     * @param parserOptions The parser options.\n     */\n    public constructor(text: string, parserOptions?: ParserOptions) {\n        debug(\"[html] the source code length: %d\", text.length)\n        this.text = text\n        this.gaps = []\n        this.lineTerminators = []\n        this.parserOptions = parserOptions || {}\n        this.lastCodePoint = NULL\n        this.offset = -1\n        this.column = -1\n        this.line = 1\n        this.state = \"DATA\"\n        this.returnState = \"DATA\"\n        this.reconsuming = false\n        this.buffer = []\n        this.crStartOffset = -1\n        this.crCode = 0\n        this.errors = []\n        this.committedToken = null\n        this.provisionalToken = null\n        this.currentToken = null\n        this.lastTagOpenToken = null\n        this.tokenStartOffset = -1\n        this.tokenStartColumn = -1\n        this.tokenStartLine = 1\n        this.namespace = NS.HTML\n        this.expressionEnabled = false\n    }\n\n    /**\n     * Get the next token.\n     * @returns The next token or null.\n     */\n    public nextToken(): Token | null {\n        let cp = this.lastCodePoint\n        while (\n            this.committedToken == null &&\n            (cp !== EOF || this.reconsuming)\n        ) {\n            if (this.provisionalToken != null && !this.isProvisionalState()) {\n                this.commitProvisionalToken()\n                if (this.committedToken != null) {\n                    break\n                }\n            }\n\n            if (this.reconsuming) {\n                this.reconsuming = false\n                cp = this.lastCodePoint\n            } else {\n                cp = this.consumeNextCodePoint()\n            }\n\n            debug(\"[html] parse\", cp, this.state)\n            this.state = this[this.state](cp)\n        }\n\n        {\n            const token = this.consumeCommittedToken()\n            if (token != null) {\n                return token\n            }\n        }\n\n        assert(cp === EOF)\n\n        if (this.currentToken != null) {\n            this.endToken()\n\n            const token = this.consumeCommittedToken()\n            if (token != null) {\n                return token\n            }\n        }\n        return this.currentToken\n    }\n\n    /**\n     * Consume the last committed token.\n     * @returns The last committed token.\n     */\n    private consumeCommittedToken(): Token | null {\n        const token = this.committedToken\n        this.committedToken = null\n        return token\n    }\n\n    /**\n     * Consume the next code point.\n     * @returns The consumed code point.\n     */\n    private consumeNextCodePoint(): number {\n        if (this.offset >= this.text.length) {\n            this.lastCodePoint = EOF\n            return EOF\n        }\n\n        this.offset += this.lastCodePoint >= 0x10000 ? 2 : 1\n        if (this.offset >= this.text.length) {\n            this.advanceLocation()\n            this.lastCodePoint = EOF\n            return EOF\n        }\n\n        const cp = this.text.codePointAt(this.offset) as number\n\n        if (\n            isSurrogate(this.text.charCodeAt(this.offset)) &&\n            !isSurrogatePair(this.text.charCodeAt(this.offset + 1))\n        ) {\n            this.reportParseError(\"surrogate-in-input-stream\")\n        }\n        if (isNonCharacter(cp)) {\n            this.reportParseError(\"noncharacter-in-input-stream\")\n        }\n        if (isControl(cp) && !isWhitespace(cp) && cp !== NULL) {\n            this.reportParseError(\"control-character-in-input-stream\")\n        }\n\n        // Skip LF to convert CRLF \u2192 LF.\n        if (this.lastCodePoint === CARRIAGE_RETURN && cp === LINE_FEED) {\n            this.lastCodePoint = LINE_FEED\n            this.gaps.push(this.offset)\n            return this.consumeNextCodePoint()\n        }\n\n        // Update locations.\n        this.advanceLocation()\n        this.lastCodePoint = cp\n\n        // To convert CRLF \u2192 LF.\n        if (cp === CARRIAGE_RETURN) {\n            return LINE_FEED\n        }\n\n        return cp\n    }\n\n    /**\n     * Advance the current line and column.\n     */\n    private advanceLocation(): void {\n        if (this.lastCodePoint === LINE_FEED) {\n            this.lineTerminators.push(this.offset)\n            this.line += 1\n            this.column = 0\n        } else {\n            this.column += this.lastCodePoint >= 0x10000 ? 2 : 1\n        }\n    }\n\n    /**\n     * Directive reconsuming the current code point as the given state.\n     * @param state The next state.\n     * @returns The next state.\n     */\n    private reconsumeAs(state: TokenizerState): TokenizerState {\n        this.reconsuming = true\n        return state\n    }\n\n    /**\n     * Report an invalid character error.\n     * @param code The error code.\n     */\n    private reportParseError(code: ErrorCode): void {\n        const error = ParseError.fromCode(\n            code,\n            this.offset,\n            this.line,\n            this.column,\n        )\n        this.errors.push(error)\n\n        debug(\"[html] syntax error:\", error.message)\n    }\n\n    /**\n     * Mark the current location as a start of tokens.\n     */\n    private setStartTokenMark(): void {\n        this.tokenStartOffset = this.offset\n        this.tokenStartLine = this.line\n        this.tokenStartColumn = this.column\n    }\n\n    /**\n     * Mark the current location as a start of tokens.\n     */\n    private clearStartTokenMark(): void {\n        this.tokenStartOffset = -1\n    }\n\n    /**\n     * Start new token.\n     * @param type The type of new token.\n     * @returns The new token.\n     */\n    private startToken(type: TokenType): Token {\n        if (this.tokenStartOffset === -1) {\n            this.setStartTokenMark()\n        }\n        const offset = this.tokenStartOffset\n        const line = this.tokenStartLine\n        const column = this.tokenStartColumn\n\n        if (this.currentToken != null) {\n            this.endToken()\n        }\n        this.tokenStartOffset = -1\n\n        const token = (this.currentToken = {\n            type,\n            range: [offset, -1],\n            loc: {\n                start: { line, column },\n                end: { line: -1, column: -1 },\n            },\n            value: \"\",\n        })\n\n        debug(\"[html] start token: %d %s\", offset, token.type)\n        return this.currentToken\n    }\n\n    /**\n     * Commit the current token.\n     * @returns The ended token.\n     */\n    private endToken(): Token | null {\n        if (this.currentToken == null) {\n            throw new Error(\"Invalid state\")\n        }\n        if (this.tokenStartOffset === -1) {\n            this.setStartTokenMark()\n        }\n        const token = this.currentToken\n        const offset = this.tokenStartOffset\n        const line = this.tokenStartLine\n        const column = this.tokenStartColumn\n        const provisional = this.isProvisionalState()\n\n        this.currentToken = null\n        this.tokenStartOffset = -1\n\n        token.range[1] = offset\n        token.loc.end.line = line\n        token.loc.end.column = column\n\n        if (token.range[0] === offset && !provisional) {\n            debug(\n                \"[html] abandon token: %j %s %j\",\n                token.range,\n                token.type,\n                token.value,\n            )\n            return null\n        }\n\n        if (provisional) {\n            if (this.provisionalToken != null) {\n                this.commitProvisionalToken()\n            }\n            this.provisionalToken = token\n            debug(\n                \"[html] provisional-commit token: %j %s %j\",\n                token.range,\n                token.type,\n                token.value,\n            )\n        } else {\n            this.commitToken(token)\n        }\n\n        return token\n    }\n\n    /**\n     * Commit the given token.\n     * @param token The token to commit.\n     */\n    private commitToken(token: Token): void {\n        assert(\n            this.committedToken == null,\n            \"Invalid state: the commited token existed already.\",\n        )\n        debug(\n            \"[html] commit token: %j %j %s %j\",\n            token.range,\n            token.loc,\n            token.type,\n            token.value,\n        )\n\n        this.committedToken = token\n        if (token.type === \"HTMLTagOpen\") {\n            this.lastTagOpenToken = token\n        }\n    }\n\n    /**\n     * Check whether this is provisional state or not.\n     * @returns `true` if this is provisional state.\n     */\n    private isProvisionalState(): boolean {\n        return (\n            this.state.startsWith(\"RCDATA_\") ||\n            this.state.startsWith(\"RAWTEXT_\")\n        )\n    }\n\n    /**\n     * Commit the last provisional committed token.\n     */\n    private commitProvisionalToken(): void {\n        assert(\n            this.provisionalToken != null,\n            \"Invalid state: the provisional token was not found.\",\n        )\n\n        const token = this.provisionalToken\n        this.provisionalToken = null\n\n        if (token.range[0] < token.range[1]) {\n            this.commitToken(token)\n        }\n    }\n\n    /**\n     * Cancel the current token and set the last provisional committed token as the current token.\n     */\n    private rollbackProvisionalToken(): void {\n        assert(this.currentToken != null)\n        assert(this.provisionalToken != null)\n\n        const token = this.currentToken\n        debug(\"[html] rollback token: %d %s\", token.range[0], token.type)\n\n        this.currentToken = this.provisionalToken\n        this.provisionalToken = null\n    }\n\n    /**\n     * Append the given code point into the value of the current token.\n     * @param cp The code point to append.\n     * @param expected The expected type of the current token.\n     */\n    private appendTokenValue(cp: number, expected: TokenType | null): void {\n        const token = this.currentToken\n        if (token == null || (expected != null && token.type !== expected)) {\n            const msg1 = expected ? `\"${expected}\" type` : \"any token\"\n            const msg2 = token ? `\"${token.type}\" type` : \"no token\"\n\n            throw new Error(\n                `Tokenizer: Invalid state. Expected ${msg1}, but got ${msg2}.`,\n            )\n        }\n\n        token.value += String.fromCodePoint(cp)\n    }\n\n    /**\n     * Check whether the current token is appropriate `HTMLEndTagOpen` token.\n     * @returns {boolean} `true` if the current token is appropriate `HTMLEndTagOpen` token.\n     */\n    private isAppropriateEndTagOpen(): boolean {\n        return (\n            this.currentToken != null &&\n            this.lastTagOpenToken != null &&\n            this.currentToken.type === \"HTMLEndTagOpen\" &&\n            this.currentToken.value === this.lastTagOpenToken.value\n        )\n    }\n\n    /**\n     * https://html.spec.whatwg.org/multipage/syntax.html#data-state\n     * @param cp The current code point.\n     * @returns The next state.\n     */\n    protected DATA(cp: number): TokenizerState {\n        this.clearStartTokenMark()\n\n        while (true) {\n            const type = isWhitespace(cp) ? \"HTMLWhitespace\" : \"HTMLText\"\n            if (this.currentToken != null && this.currentToken.type !== type) {\n                this.endToken()\n                return this.reconsumeAs(this.state)\n            }\n            if (this.currentToken == null) {\n                this.startToken(type)\n            }\n\n            if (cp === AMPERSAND) {\n                this.returnState = \"DATA\"\n                return \"CHARACTER_REFERENCE\"\n            }\n            if (cp === LESS_THAN_SIGN) {\n                this.setStartTokenMark()\n                return \"TAG_OPEN\"\n            }\n            if (cp === LEFT_CURLY_BRACKET && this.expressionEnabled) {\n                this.setStartTokenMark()\n                this.returnState = \"DATA\"\n                return \"V_EXPRESSION_START\"\n            }\n            if (cp === RIGHT_CURLY_BRACKET && this.expressionEnabled) {\n                this.setStartTokenMark()\n                this.returnState = \"DATA\"\n                return \"V_EXPRESSION_END\"\n            }\n            if (cp === EOF) {\n                return \"DATA\"\n            }\n\n            if (cp === NULL) {\n                this.reportParseError(\"unexpected-null-character\")\n            }\n            this.appendTokenValue(cp, type)\n\n            cp = this.consumeNextCodePoint()\n        }\n    }\n\n    /**\n     * https://html.spec.whatwg.org/multipage/syntax.html#rcdata-state\n     * @param cp The current code point.\n     * @returns The next state.\n     */\n    protected RCDATA(cp: number): TokenizerState {\n        this.clearStartTokenMark()\n\n        while (true) {\n            const type = isWhitespace(cp) ? \"HTMLWhitespace\" : \"HTMLRCDataText\"\n            if (this.currentToken != null && this.currentToken.type !== type) {\n                this.endToken()\n                return this.reconsumeAs(this.state)\n            }\n            if (this.currentToken == null) {\n                this.startToken(type)\n            }\n\n            if (cp === AMPERSAND) {\n                this.returnState = \"RCDATA\"\n                return \"CHARACTER_REFERENCE\"\n            }\n            if (cp === LESS_THAN_SIGN) {\n                this.setStartTokenMark()\n                return \"RCDATA_LESS_THAN_SIGN\"\n            }\n            if (cp === LEFT_CURLY_BRACKET && this.expressionEnabled) {\n                this.setStartTokenMark()\n                this.returnState = \"RCDATA\"\n                return \"V_EXPRESSION_START\"\n            }\n            if (cp === RIGHT_CURLY_BRACKET && this.expressionEnabled) {\n                this.setStartTokenMark()\n                this.returnState = \"RCDATA\"\n                return \"V_EXPRESSION_END\"\n            }\n            if (cp === EOF) {\n                return \"DATA\"\n            }\n\n            if (cp === NULL) {\n                this.reportParseError(\"unexpected-null-character\")\n                cp = NULL_REPLACEMENT\n            }\n            this.appendTokenValue(cp, type)\n\n            cp = this.consumeNextCodePoint()\n        }\n    }\n\n    /**\n     * https://html.spec.whatwg.org/multipage/syntax.html#rawtext-state\n     * @param cp The current code point.\n     * @returns The next state.\n     */\n    protected RAWTEXT(cp: number): TokenizerState {\n        this.clearStartTokenMark()\n\n        while (true) {\n            const type = isWhitespace(cp) ? \"HTMLWhitespace\" : \"HTMLRawText\"\n            if (this.currentToken != null && this.currentToken.type !== type) {\n                this.endToken()\n                return this.reconsumeAs(this.state)\n            }\n            if (this.currentToken == null) {\n                this.startToken(type)\n            }\n\n            if (cp === LESS_THAN_SIGN) {\n                this.setStartTokenMark()\n                return \"RAWTEXT_LESS_THAN_SIGN\"\n            }\n            if (cp === LEFT_CURLY_BRACKET && this.expressionEnabled) {\n                this.setStartTokenMark()\n                this.returnState = \"RAWTEXT\"\n                return \"V_EXPRESSION_START\"\n            }\n            if (cp === RIGHT_CURLY_BRACKET && this.expressionEnabled) {\n                this.setStartTokenMark()\n                this.returnState = \"RAWTEXT\"\n                return \"V_EXPRESSION_END\"\n            }\n            if (cp === EOF) {\n                return \"DATA\"\n            }\n\n            if (cp === NULL) {\n                this.reportParseError(\"unexpected-null-character\")\n                cp = NULL_REPLACEMENT\n            }\n            this.appendTokenValue(cp, type)\n\n            cp = this.consumeNextCodePoint()\n        }\n    }\n\n    /**\n     * https://html.spec.whatwg.org/multipage/syntax.html#tag-open-state\n     * @param cp The current code point.\n     * @returns The next state.\n     */\n    protected TAG_OPEN(cp: number): TokenizerState {\n        if (cp === EXCLAMATION_MARK) {\n            return \"MARKUP_DECLARATION_OPEN\"\n        }\n        if (cp === SOLIDUS) {\n            return \"END_TAG_OPEN\"\n        }\n        if (isLetter(cp)) {\n            this.startToken(\"HTMLTagOpen\")\n            return this.reconsumeAs(\"TAG_NAME\")\n        }\n        if (cp === QUESTION_MARK) {\n            this.reportParseError(\n                \"unexpected-question-mark-instead-of-tag-name\",\n            )\n            this.startToken(\"HTMLBogusComment\")\n            return this.reconsumeAs(\"BOGUS_COMMENT\")\n        }\n        if (cp === EOF) {\n            this.clearStartTokenMark()\n            this.reportParseError(\"eof-before-tag-name\")\n            this.appendTokenValue(LESS_THAN_SIGN, \"HTMLText\")\n            return \"DATA\"\n        }\n\n        this.reportParseError(\"invalid-first-character-of-tag-name\")\n        this.appendTokenValue(LESS_THAN_SIGN, \"HTMLText\")\n        return this.reconsumeAs(\"DATA\")\n    }\n\n    /**\n     * https://html.spec.whatwg.org/multipage/syntax.html#end-tag-open-state\n     * @param cp The current code point.\n     * @returns The next state.\n     */\n    protected END_TAG_OPEN(cp: number): TokenizerState {\n        if (isLetter(cp)) {\n            this.startToken(\"HTMLEndTagOpen\")\n            return this.reconsumeAs(\"TAG_NAME\")\n        }\n        if (cp === GREATER_THAN_SIGN) {\n            this.endToken() // < Commit or abandon the current text token.\n            this.reportParseError(\"missing-end-tag-name\")\n            return \"DATA\"\n        }\n        if (cp === EOF) {\n            this.clearStartTokenMark()\n            this.reportParseError(\"eof-before-tag-name\")\n            this.appendTokenValue(LESS_THAN_SIGN, \"HTMLText\")\n            this.appendTokenValue(SOLIDUS, \"HTMLText\")\n            return \"DATA\"\n        }\n\n        this.reportParseError(\"invalid-first-character-of-tag-name\")\n        this.startToken(\"HTMLBogusComment\")\n        return this.reconsumeAs(\"BOGUS_COMMENT\")\n    }\n\n    /**\n     * https://html.spec.whatwg.org/multipage/syntax.html#tag-name-state\n     * @param cp The current code point.\n     * @returns The next state.\n     */\n    protected TAG_NAME(cp: number): TokenizerState {\n        while (true) {\n            if (isWhitespace(cp)) {\n                this.endToken()\n                return \"BEFORE_ATTRIBUTE_NAME\"\n            }\n            if (cp === SOLIDUS) {\n                this.endToken()\n                this.setStartTokenMark()\n                return \"SELF_CLOSING_START_TAG\"\n            }\n            if (cp === GREATER_THAN_SIGN) {\n                this.startToken(\"HTMLTagClose\")\n                return \"DATA\"\n            }\n            if (cp === EOF) {\n                this.reportParseError(\"eof-in-tag\")\n                return \"DATA\"\n            }\n            if (cp === NULL) {\n                this.reportParseError(\"unexpected-null-character\")\n                cp = NULL_REPLACEMENT\n            }\n\n            this.appendTokenValue(\n                isUpperLetter(cp) ? toLowerCodePoint(cp) : cp,\n                null,\n            )\n\n            cp = this.consumeNextCodePoint()\n        }\n    }\n\n    /**\n     * https://html.spec.whatwg.org/multipage/syntax.html#rcdata-less-than-sign-state\n     * @param cp The current code point.\n     * @returns The next state.\n     */\n    protected RCDATA_LESS_THAN_SIGN(cp: number): TokenizerState {\n        if (cp === SOLIDUS) {\n            this.buffer = []\n            return \"RCDATA_END_TAG_OPEN\"\n        }\n\n        this.appendTokenValue(LESS_THAN_SIGN, \"HTMLRCDataText\")\n        return this.reconsumeAs(\"RCDATA\")\n    }\n\n    /**\n     * https://html.spec.whatwg.org/multipage/syntax.html#rcdata-end-tag-open-state\n     * @param cp The current code point.\n     * @returns The next state.\n     */\n    protected RCDATA_END_TAG_OPEN(cp: number): TokenizerState {\n        if (isLetter(cp)) {\n            this.startToken(\"HTMLEndTagOpen\")\n            return this.reconsumeAs(\"RCDATA_END_TAG_NAME\")\n        }\n\n        this.appendTokenValue(LESS_THAN_SIGN, \"HTMLRCDataText\")\n        this.appendTokenValue(SOLIDUS, \"HTMLRCDataText\")\n        return this.reconsumeAs(\"RCDATA\")\n    }\n\n    /**\n     * https://html.spec.whatwg.org/multipage/syntax.html#rcdata-end-tag-name-state\n     * @param cp The current code point.\n     * @returns The next state.\n     */\n    protected RCDATA_END_TAG_NAME(cp: number): TokenizerState {\n        while (true) {\n            if (isWhitespace(cp) && this.isAppropriateEndTagOpen()) {\n                this.endToken()\n                return \"BEFORE_ATTRIBUTE_NAME\"\n            }\n            if (cp === SOLIDUS && this.isAppropriateEndTagOpen()) {\n                this.endToken()\n                this.setStartTokenMark()\n                return \"SELF_CLOSING_START_TAG\"\n            }\n            if (cp === GREATER_THAN_SIGN && this.isAppropriateEndTagOpen()) {\n                this.startToken(\"HTMLTagClose\")\n                return \"DATA\"\n            }\n            if (!isLetter(cp)) {\n                this.rollbackProvisionalToken()\n                this.appendTokenValue(LESS_THAN_SIGN, \"HTMLRCDataText\")\n                this.appendTokenValue(SOLIDUS, \"HTMLRCDataText\")\n                for (const cp1 of this.buffer) {\n                    this.appendTokenValue(cp1, \"HTMLRCDataText\")\n                }\n                return this.reconsumeAs(\"RCDATA\")\n            }\n\n            this.appendTokenValue(\n                isUpperLetter(cp) ? toLowerCodePoint(cp) : cp,\n                \"HTMLEndTagOpen\",\n            )\n            this.buffer.push(cp)\n\n            cp = this.consumeNextCodePoint()\n        }\n    }\n\n    /**\n     * https://html.spec.whatwg.org/multipage/syntax.html#rawtext-less-than-sign-state\n     * @param cp The current code point.\n     * @returns The next state.\n     */\n    protected RAWTEXT_LESS_THAN_SIGN(cp: number): TokenizerState {\n        if (cp === SOLIDUS) {\n            this.buffer = []\n            return \"RAWTEXT_END_TAG_OPEN\"\n        }\n\n        this.appendTokenValue(LESS_THAN_SIGN, \"HTMLRawText\")\n        return this.reconsumeAs(\"RAWTEXT\")\n    }\n\n    /**\n     * https://html.spec.whatwg.org/multipage/syntax.html#rawtext-end-tag-open-state\n     * @param cp The current code point.\n     * @returns The next state.\n     */\n    protected RAWTEXT_END_TAG_OPEN(cp: number): TokenizerState {\n        if (isLetter(cp)) {\n            this.startToken(\"HTMLEndTagOpen\")\n            return this.reconsumeAs(\"RAWTEXT_END_TAG_NAME\")\n        }\n\n        this.appendTokenValue(LESS_THAN_SIGN, \"HTMLRawText\")\n        this.appendTokenValue(SOLIDUS, \"HTMLRawText\")\n        return this.reconsumeAs(\"RAWTEXT\")\n    }\n\n    /**\n     * https://html.spec.whatwg.org/multipage/syntax.html#rawtext-end-tag-name-state\n     * @param cp The current code point.\n     * @returns The next state.\n     */\n    protected RAWTEXT_END_TAG_NAME(cp: number): TokenizerState {\n        while (true) {\n            if (cp === SOLIDUS && this.isAppropriateEndTagOpen()) {\n                this.endToken()\n                this.setStartTokenMark()\n                return \"SELF_CLOSING_START_TAG\"\n            }\n            if (cp === GREATER_THAN_SIGN && this.isAppropriateEndTagOpen()) {\n                this.startToken(\"HTMLTagClose\")\n                return \"DATA\"\n            }\n            if (isWhitespace(cp) && this.isAppropriateEndTagOpen()) {\n                this.endToken()\n                return \"BEFORE_ATTRIBUTE_NAME\"\n            }\n            if (!isLetter(cp) && !maybeValidCustomBlock.call(this, cp)) {\n                this.rollbackProvisionalToken()\n                this.appendTokenValue(LESS_THAN_SIGN, \"HTMLRawText\")\n                this.appendTokenValue(SOLIDUS, \"HTMLRawText\")\n                for (const cp1 of this.buffer) {\n                    this.appendTokenValue(cp1, \"HTMLRawText\")\n                }\n                return this.reconsumeAs(\"RAWTEXT\")\n            }\n\n            this.appendTokenValue(\n                isUpperLetter(cp) ? toLowerCodePoint(cp) : cp,\n                \"HTMLEndTagOpen\",\n            )\n            this.buffer.push(cp)\n\n            cp = this.consumeNextCodePoint()\n        }\n\n        function maybeValidCustomBlock(this: Tokenizer, nextCp: number) {\n            return (\n                this.currentToken &&\n                this.lastTagOpenToken &&\n                this.lastTagOpenToken.value.startsWith(\n                    this.currentToken.value + String.fromCodePoint(nextCp),\n                )\n            )\n        }\n    }\n\n    /**\n     * https://html.spec.whatwg.org/multipage/parsing.html#before-attribute-name-state\n     * @param cp The current code point.\n     * @returns The next state.\n     */\n    protected BEFORE_ATTRIBUTE_NAME(cp: number): TokenizerState {\n        while (isWhitespace(cp)) {\n            cp = this.consumeNextCodePoint()\n        }\n\n        if (cp === SOLIDUS || cp === GREATER_THAN_SIGN || cp === EOF) {\n            return this.reconsumeAs(\"AFTER_ATTRIBUTE_NAME\")\n        }\n\n        if (cp === EQUALS_SIGN) {\n            this.reportParseError(\n                \"unexpected-equals-sign-before-attribute-name\",\n            )\n            this.startToken(\"HTMLIdentifier\")\n            this.appendTokenValue(cp, \"HTMLIdentifier\")\n            return \"ATTRIBUTE_NAME\"\n        }\n\n        this.startToken(\"HTMLIdentifier\")\n        return this.reconsumeAs(\"ATTRIBUTE_NAME\")\n    }\n\n    /**\n     * https://html.spec.whatwg.org/multipage/parsing.html#attribute-name-state\n     * @param cp The current code point.\n     * @returns The next state.\n     */\n    protected ATTRIBUTE_NAME(cp: number): TokenizerState {\n        while (true) {\n            if (\n                isWhitespace(cp) ||\n                cp === SOLIDUS ||\n                cp === GREATER_THAN_SIGN ||\n                cp === EOF\n            ) {\n                this.endToken()\n                return this.reconsumeAs(\"AFTER_ATTRIBUTE_NAME\")\n            }\n            if (cp === EQUALS_SIGN) {\n                this.startToken(\"HTMLAssociation\")\n                return \"BEFORE_ATTRIBUTE_VALUE\"\n            }\n\n            if (cp === NULL) {\n                this.reportParseError(\"unexpected-null-character\")\n                cp = NULL_REPLACEMENT\n            }\n            if (\n                cp === QUOTATION_MARK ||\n                cp === APOSTROPHE ||\n                cp === LESS_THAN_SIGN\n            ) {\n                this.reportParseError(\"unexpected-character-in-attribute-name\")\n            }\n\n            this.appendTokenValue(\n                isUpperLetter(cp) ? toLowerCodePoint(cp) : cp,\n                \"HTMLIdentifier\",\n            )\n            cp = this.consumeNextCodePoint()\n        }\n    }\n\n    /**\n     * https://html.spec.whatwg.org/multipage/parsing.html#after-attribute-name-state\n     * @param cp The current code point.\n     * @returns The next state.\n     */\n    protected AFTER_ATTRIBUTE_NAME(cp: number): TokenizerState {\n        while (isWhitespace(cp)) {\n            cp = this.consumeNextCodePoint()\n        }\n\n        if (cp === SOLIDUS) {\n            this.setStartTokenMark()\n            return \"SELF_CLOSING_START_TAG\"\n        }\n        if (cp === EQUALS_SIGN) {\n            this.startToken(\"HTMLAssociation\")\n            return \"BEFORE_ATTRIBUTE_VALUE\"\n        }\n        if (cp === GREATER_THAN_SIGN) {\n            this.startToken(\"HTMLTagClose\")\n            return \"DATA\"\n        }\n\n        if (cp === EOF) {\n            this.reportParseError(\"eof-in-tag\")\n            return \"DATA\"\n        }\n\n        this.startToken(\"HTMLIdentifier\")\n        return this.reconsumeAs(\"ATTRIBUTE_NAME\")\n    }\n\n    /**\n     * https://html.spec.whatwg.org/multipage/parsing.html#before-attribute-value-state\n     * @param cp The current code point.\n     * @returns The next state.\n     */\n    protected BEFORE_ATTRIBUTE_VALUE(cp: number): TokenizerState {\n        this.endToken()\n\n        while (isWhitespace(cp)) {\n            cp = this.consumeNextCodePoint()\n        }\n\n        if (cp === GREATER_THAN_SIGN) {\n            this.reportParseError(\"missing-attribute-value\")\n            this.startToken(\"HTMLTagClose\")\n            return \"DATA\"\n        }\n\n        this.startToken(\"HTMLLiteral\")\n        if (cp === QUOTATION_MARK) {\n            return \"ATTRIBUTE_VALUE_DOUBLE_QUOTED\"\n        }\n        if (cp === APOSTROPHE) {\n            return \"ATTRIBUTE_VALUE_SINGLE_QUOTED\"\n        }\n        return this.reconsumeAs(\"ATTRIBUTE_VALUE_UNQUOTED\")\n    }\n\n    /**\n     * https://html.spec.whatwg.org/multipage/parsing.html#attribute-value-(double-quoted)-state\n     * @param cp The current code point.\n     * @returns The next state.\n     */\n    protected ATTRIBUTE_VALUE_DOUBLE_QUOTED(cp: number): TokenizerState {\n        while (true) {\n            if (cp === QUOTATION_MARK) {\n                return \"AFTER_ATTRIBUTE_VALUE_QUOTED\"\n            }\n            if (cp === AMPERSAND) {\n                this.returnState = \"ATTRIBUTE_VALUE_DOUBLE_QUOTED\"\n                return \"CHARACTER_REFERENCE\"\n            }\n\n            if (cp === NULL) {\n                this.reportParseError(\"unexpected-null-character\")\n                cp = NULL_REPLACEMENT\n            }\n            if (cp === EOF) {\n                this.reportParseError(\"eof-in-tag\")\n                return \"DATA\"\n            }\n\n            this.appendTokenValue(cp, \"HTMLLiteral\")\n            cp = this.consumeNextCodePoint()\n        }\n    }\n\n    /**\n     * https://html.spec.whatwg.org/multipage/parsing.html#attribute-value-(single-quoted)-state\n     * @param cp The current code point.\n     * @returns The next state.\n     */\n    protected ATTRIBUTE_VALUE_SINGLE_QUOTED(cp: number): TokenizerState {\n        while (true) {\n            if (cp === APOSTROPHE) {\n                return \"AFTER_ATTRIBUTE_VALUE_QUOTED\"\n            }\n            if (cp === AMPERSAND) {\n                this.returnState = \"ATTRIBUTE_VALUE_SINGLE_QUOTED\"\n                return \"CHARACTER_REFERENCE\"\n            }\n\n            if (cp === NULL) {\n                this.reportParseError(\"unexpected-null-character\")\n                cp = NULL_REPLACEMENT\n            }\n            if (cp === EOF) {\n                this.reportParseError(\"eof-in-tag\")\n                return \"DATA\"\n            }\n\n            this.appendTokenValue(cp, \"HTMLLiteral\")\n            cp = this.consumeNextCodePoint()\n        }\n    }\n\n    /**\n     * https://html.spec.whatwg.org/multipage/parsing.html#attribute-value-(unquoted)-state\n     * @param cp The current code point.\n     * @returns The next state.\n     */\n    protected ATTRIBUTE_VALUE_UNQUOTED(cp: number): TokenizerState {\n        while (true) {\n            if (isWhitespace(cp)) {\n                this.endToken()\n                return \"BEFORE_ATTRIBUTE_NAME\"\n            }\n            if (cp === AMPERSAND) {\n                this.returnState = \"ATTRIBUTE_VALUE_UNQUOTED\"\n                return \"CHARACTER_REFERENCE\"\n            }\n            if (cp === GREATER_THAN_SIGN) {\n                this.startToken(\"HTMLTagClose\")\n                return \"DATA\"\n            }\n\n            if (cp === NULL) {\n                this.reportParseError(\"unexpected-null-character\")\n                cp = NULL_REPLACEMENT\n            }\n            if (\n                cp === QUOTATION_MARK ||\n                cp === APOSTROPHE ||\n                cp === LESS_THAN_SIGN ||\n                cp === EQUALS_SIGN ||\n                cp === GRAVE_ACCENT\n            ) {\n                this.reportParseError(\n                    \"unexpected-character-in-unquoted-attribute-value\",\n                )\n            }\n            if (cp === EOF) {\n                this.reportParseError(\"eof-in-tag\")\n                return \"DATA\"\n            }\n\n            this.appendTokenValue(cp, \"HTMLLiteral\")\n            cp = this.consumeNextCodePoint()\n        }\n    }\n\n    /**\n     * https://html.spec.whatwg.org/multipage/parsing.html#after-attribute-value-(quoted)-state\n     * @param cp The current code point.\n     * @returns The next state.\n     */\n    protected AFTER_ATTRIBUTE_VALUE_QUOTED(cp: number): TokenizerState {\n        this.endToken()\n\n        if (isWhitespace(cp)) {\n            return \"BEFORE_ATTRIBUTE_NAME\"\n        }\n        if (cp === SOLIDUS) {\n            this.setStartTokenMark()\n            return \"SELF_CLOSING_START_TAG\"\n        }\n        if (cp === GREATER_THAN_SIGN) {\n            this.startToken(\"HTMLTagClose\")\n            return \"DATA\"\n        }\n\n        if (cp === EOF) {\n            this.reportParseError(\"eof-in-tag\")\n            return \"DATA\"\n        }\n\n        this.reportParseError(\"missing-whitespace-between-attributes\")\n        return this.reconsumeAs(\"BEFORE_ATTRIBUTE_NAME\")\n    }\n\n    /**\n     * https://html.spec.whatwg.org/multipage/parsing.html#self-closing-start-tag-state\n     * @param cp The current code point.\n     * @returns The next state.\n     */\n    protected SELF_CLOSING_START_TAG(cp: number): TokenizerState {\n        if (cp === GREATER_THAN_SIGN) {\n            this.startToken(\"HTMLSelfClosingTagClose\")\n\n            // Vue.js supports self-closing elements.\n            // So don't switch to RCDATA/RAWTEXT from any elements.\n            return \"DATA\"\n        }\n\n        if (cp === EOF) {\n            this.reportParseError(\"eof-in-tag\")\n            return \"DATA\"\n        }\n\n        this.reportParseError(\"unexpected-solidus-in-tag\")\n        this.clearStartTokenMark()\n        return this.reconsumeAs(\"BEFORE_ATTRIBUTE_NAME\")\n    }\n\n    /**\n     * https://html.spec.whatwg.org/multipage/parsing.html#bogus-comment-state\n     * @param cp The current code point.\n     * @returns The next state.\n     */\n    protected BOGUS_COMMENT(cp: number): TokenizerState {\n        while (true) {\n            if (cp === GREATER_THAN_SIGN) {\n                return \"DATA\"\n            }\n\n            if (cp === EOF) {\n                return \"DATA\"\n            }\n            if (cp === NULL) {\n                cp = NULL_REPLACEMENT\n            }\n            this.appendTokenValue(cp, null)\n\n            cp = this.consumeNextCodePoint()\n        }\n    }\n\n    /**\n     * https://html.spec.whatwg.org/multipage/parsing.html#markup-declaration-open-state\n     * @param cp The current code point.\n     * @returns The next state.\n     */\n    protected MARKUP_DECLARATION_OPEN(cp: number): TokenizerState {\n        if (cp === HYPHEN_MINUS && this.text[this.offset + 1] === \"-\") {\n            this.offset += 1\n            this.column += 1\n\n            this.startToken(\"HTMLComment\")\n            return \"COMMENT_START\"\n        }\n        if (\n            cp === LATIN_CAPITAL_D &&\n            this.text.slice(this.offset + 1, this.offset + 7) === \"OCTYPE\"\n        ) {\n            // It does not support DOCTYPE.\n            // this.offset += 6\n            // this.column += 6\n            // return \"DOCTYPE\"\n\n            // TODO\n            this.startToken(\"HTMLBogusComment\")\n            this.appendTokenValue(cp, \"HTMLBogusComment\")\n            return \"BOGUS_COMMENT\"\n        }\n        if (\n            cp === LEFT_SQUARE_BRACKET &&\n            this.text.slice(this.offset + 1, this.offset + 7) === \"CDATA[\"\n        ) {\n            this.offset += 6\n            this.column += 6\n\n            if (this.namespace === NS.HTML) {\n                this.reportParseError(\"cdata-in-html-content\")\n                this.startToken(\"HTMLBogusComment\").value = \"[CDATA[\"\n                return \"BOGUS_COMMENT\"\n            }\n\n            this.startToken(\"HTMLCDataText\")\n            return \"CDATA_SECTION\"\n        }\n\n        this.reportParseError(\"incorrectly-opened-comment\")\n        this.startToken(\"HTMLBogusComment\")\n        return this.reconsumeAs(\"BOGUS_COMMENT\")\n    }\n\n    /**\n     * https://html.spec.whatwg.org/multipage/parsing.html#comment-start-state\n     * @param cp The current code point.\n     * @returns The next state.\n     */\n    protected COMMENT_START(cp: number): TokenizerState {\n        if (cp === HYPHEN_MINUS) {\n            return \"COMMENT_START_DASH\"\n        }\n        if (cp === GREATER_THAN_SIGN) {\n            this.reportParseError(\"abrupt-closing-of-empty-comment\")\n            return \"DATA\"\n        }\n\n        return this.reconsumeAs(\"COMMENT\")\n    }\n\n    /**\n     * https://html.spec.whatwg.org/multipage/parsing.html#comment-start-dash-state\n     * @param cp The current code point.\n     * @returns The next state.\n     */\n    protected COMMENT_START_DASH(cp: number): TokenizerState {\n        if (cp === HYPHEN_MINUS) {\n            return \"COMMENT_END\"\n        }\n\n        if (cp === GREATER_THAN_SIGN) {\n            this.reportParseError(\"abrupt-closing-of-empty-comment\")\n            return \"DATA\"\n        }\n        if (cp === EOF) {\n            this.reportParseError(\"eof-in-comment\")\n            return \"DATA\"\n        }\n\n        this.appendTokenValue(HYPHEN_MINUS, \"HTMLComment\")\n        return this.reconsumeAs(\"COMMENT\")\n    }\n\n    /**\n     * https://html.spec.whatwg.org/multipage/parsing.html#comment-state\n     * @param cp The current code point.\n     * @returns The next state.\n     */\n    protected COMMENT(cp: number): TokenizerState {\n        while (true) {\n            if (cp === LESS_THAN_SIGN) {\n                this.appendTokenValue(LESS_THAN_SIGN, \"HTMLComment\")\n                return \"COMMENT_LESS_THAN_SIGN\"\n            }\n            if (cp === HYPHEN_MINUS) {\n                return \"COMMENT_END_DASH\"\n            }\n\n            if (cp === NULL) {\n                this.reportParseError(\"unexpected-null-character\")\n                cp = NULL_REPLACEMENT\n            }\n            if (cp === EOF) {\n                this.reportParseError(\"eof-in-comment\")\n                return \"DATA\"\n            }\n\n            this.appendTokenValue(cp, \"HTMLComment\")\n            cp = this.consumeNextCodePoint()\n        }\n    }\n\n    /**\n     * https://html.spec.whatwg.org/multipage/parsing.html#comment-less-than-sign-state\n     * @param cp The current code point.\n     * @returns The next state.\n     */\n    protected COMMENT_LESS_THAN_SIGN(cp: number): TokenizerState {\n        while (true) {\n            if (cp === EXCLAMATION_MARK) {\n                this.appendTokenValue(cp, \"HTMLComment\")\n                return \"COMMENT_LESS_THAN_SIGN_BANG\"\n            }\n            if (cp !== LESS_THAN_SIGN) {\n                return this.reconsumeAs(\"COMMENT\")\n            }\n\n            this.appendTokenValue(cp, \"HTMLComment\")\n            cp = this.consumeNextCodePoint()\n        }\n    }\n\n    /**\n     * https://html.spec.whatwg.org/multipage/parsing.html#comment-less-than-sign-bang-state\n     * @param cp The current code point.\n     * @returns The next state.\n     */\n    protected COMMENT_LESS_THAN_SIGN_BANG(cp: number): TokenizerState {\n        if (cp === HYPHEN_MINUS) {\n            return \"COMMENT_LESS_THAN_SIGN_BANG_DASH\"\n        }\n        return this.reconsumeAs(\"COMMENT\")\n    }\n\n    /**\n     * https://html.spec.whatwg.org/multipage/parsing.html#comment-less-than-sign-bang-dash-state\n     * @param cp The current code point.\n     * @returns The next state.\n     */\n    protected COMMENT_LESS_THAN_SIGN_BANG_DASH(cp: number): TokenizerState {\n        if (cp === HYPHEN_MINUS) {\n            return \"COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH\"\n        }\n        return this.reconsumeAs(\"COMMENT_END_DASH\")\n    }\n\n    /**\n     * https://html.spec.whatwg.org/multipage/parsing.html#comment-less-than-sign-bang-dash-dash-state\n     * @param cp The current code point.\n     * @returns The next state.\n     */\n    protected COMMENT_LESS_THAN_SIGN_BANG_DASH_DASH(\n        cp: number,\n    ): TokenizerState {\n        if (cp !== GREATER_THAN_SIGN && cp !== EOF) {\n            this.reportParseError(\"nested-comment\")\n        }\n        return this.reconsumeAs(\"COMMENT_END\")\n    }\n\n    /**\n     * https://html.spec.whatwg.org/multipage/parsing.html#comment-end-dash-state\n     * @param cp The current code point.\n     * @returns The next state.\n     */\n    protected COMMENT_END_DASH(cp: number): TokenizerState {\n        if (cp === HYPHEN_MINUS) {\n            return \"COMMENT_END\"\n        }\n\n        if (cp === EOF) {\n            this.reportParseError(\"eof-in-comment\")\n            return \"DATA\"\n        }\n\n        this.appendTokenValue(HYPHEN_MINUS, \"HTMLComment\")\n        return this.reconsumeAs(\"COMMENT\")\n    }\n\n    /**\n     * https://html.spec.whatwg.org/multipage/parsing.html#comment-end-state\n     * @param cp The current code point.\n     * @returns The next state.\n     */\n    protected COMMENT_END(cp: number): TokenizerState {\n        while (true) {\n            if (cp === GREATER_THAN_SIGN) {\n                return \"DATA\"\n            }\n            if (cp === EXCLAMATION_MARK) {\n                return \"COMMENT_END_BANG\"\n            }\n\n            if (cp === EOF) {\n                this.reportParseError(\"eof-in-comment\")\n                return \"DATA\"\n            }\n\n            this.appendTokenValue(HYPHEN_MINUS, \"HTMLComment\")\n\n            if (cp !== HYPHEN_MINUS) {\n                this.appendTokenValue(HYPHEN_MINUS, \"HTMLComment\")\n                return this.reconsumeAs(\"COMMENT\")\n            }\n            cp = this.consumeNextCodePoint()\n        }\n    }\n\n    /**\n     * https://html.spec.whatwg.org/multipage/parsing.html#comment-end-bang-state\n     * @param cp The current code point.\n     * @returns The next state.\n     */\n    protected COMMENT_END_BANG(cp: number): TokenizerState {\n        if (cp === HYPHEN_MINUS) {\n            this.appendTokenValue(HYPHEN_MINUS, \"HTMLComment\")\n            this.appendTokenValue(EXCLAMATION_MARK, \"HTMLComment\")\n            return \"COMMENT_END_DASH\"\n        }\n\n        if (cp === GREATER_THAN_SIGN) {\n            this.reportParseError(\"incorrectly-closed-comment\")\n            return \"DATA\"\n        }\n        if (cp === EOF) {\n            this.reportParseError(\"eof-in-comment\")\n            return \"DATA\"\n        }\n\n        this.appendTokenValue(HYPHEN_MINUS, \"HTMLComment\")\n        this.appendTokenValue(EXCLAMATION_MARK, \"HTMLComment\")\n        return this.reconsumeAs(\"COMMENT\")\n    }\n\n    /**\n     * https://html.spec.whatwg.org/multipage/parsing.html#cdata-section-state\n     * @param cp The current code point.\n     * @returns The next state.\n     */\n    protected CDATA_SECTION(cp: number): TokenizerState {\n        while (true) {\n            if (cp === RIGHT_SQUARE_BRACKET) {\n                return \"CDATA_SECTION_BRACKET\"\n            }\n\n            if (cp === EOF) {\n                this.reportParseError(\"eof-in-cdata\")\n                return \"DATA\"\n            }\n\n            this.appendTokenValue(cp, \"HTMLCDataText\")\n            cp = this.consumeNextCodePoint()\n        }\n    }\n\n    /**\n     * https://html.spec.whatwg.org/multipage/parsing.html#cdata-section-bracket-state\n     * @param cp The current code point.\n     * @returns The next state.\n     */\n    protected CDATA_SECTION_BRACKET(cp: number): TokenizerState {\n        if (cp === RIGHT_SQUARE_BRACKET) {\n            return \"CDATA_SECTION_END\"\n        }\n\n        this.appendTokenValue(RIGHT_SQUARE_BRACKET, \"HTMLCDataText\")\n        return this.reconsumeAs(\"CDATA_SECTION\")\n    }\n\n    /**\n     * https://html.spec.whatwg.org/multipage/parsing.html#cdata-section-end-state\n     * @param cp The current code point.\n     * @returns The next state.\n     */\n    protected CDATA_SECTION_END(cp: number): TokenizerState {\n        while (true) {\n            if (cp === GREATER_THAN_SIGN) {\n                return \"DATA\"\n            }\n            if (cp !== RIGHT_SQUARE_BRACKET) {\n                this.appendTokenValue(RIGHT_SQUARE_BRACKET, \"HTMLCDataText\")\n                this.appendTokenValue(RIGHT_SQUARE_BRACKET, \"HTMLCDataText\")\n                return this.reconsumeAs(\"CDATA_SECTION\")\n            }\n\n            this.appendTokenValue(RIGHT_SQUARE_BRACKET, \"HTMLCDataText\")\n            cp = this.consumeNextCodePoint()\n        }\n    }\n\n    /**\n     * https://html.spec.whatwg.org/multipage/parsing.html#character-reference-state\n     * @param cp The current code point.\n     * @returns The next state.\n     */\n    protected CHARACTER_REFERENCE(cp: number): TokenizerState {\n        this.crStartOffset = this.offset - 1\n        this.buffer = [AMPERSAND]\n\n        if (isWhitespace(cp) || cp === LESS_THAN_SIGN || cp === EOF) {\n            return this.reconsumeAs(\"CHARACTER_REFERENCE_END\")\n        }\n        if (cp === NUMBER_SIGN) {\n            this.buffer.push(cp)\n            return \"NUMERIC_CHARACTER_REFERENCE\"\n        }\n        return this.reconsumeAs(\"NAMED_CHARACTER_REFERENCE\")\n    }\n\n    /**\n     * https://html.spec.whatwg.org/multipage/parsing.html#named-character-reference-state\n     * @param cp The current code point.\n     * @returns The next state.\n     */\n    protected NAMED_CHARACTER_REFERENCE(cp: number): TokenizerState {\n        for (const entitySet of entitySets) {\n            const length = entitySet.length\n            const entities = entitySet.entities\n            const text = this.text.slice(this.offset, this.offset + length)\n            const codepoints = entities[text]\n\n            if (codepoints == null) {\n                continue\n            }\n\n            const semi = text.endsWith(\";\")\n            const next = this.text.codePointAt(this.offset + 1)\n\n            this.offset += length - 1\n            this.column += length - 1\n\n            if (\n                this.returnState.startsWith(\"ATTR\") &&\n                !semi &&\n                next != null &&\n                (next === EQUALS_SIGN || isLetter(next) || isDigit(next))\n            ) {\n                for (const cp1 of text) {\n                    this.buffer.push(cp1.codePointAt(0) as number)\n                }\n            } else {\n                if (!semi) {\n                    this.reportParseError(\n                        \"missing-semicolon-after-character-reference\",\n                    )\n                }\n                this.buffer = codepoints\n            }\n\n            return \"CHARACTER_REFERENCE_END\"\n        }\n\n        for (const cp0 of this.buffer) {\n            this.appendTokenValue(cp0, null)\n        }\n        this.appendTokenValue(cp, null)\n\n        return \"AMBIGUOUS_AMPERSAND\"\n    }\n\n    /**\n     * https://html.spec.whatwg.org/multipage/parsing.html#ambiguous-ampersand-state\n     * @param cp The current code point.\n     * @returns The next state.\n     */\n    protected AMBIGUOUS_AMPERSAND(cp: number): TokenizerState {\n        while (isDigit(cp) || isLetter(cp)) {\n            this.appendTokenValue(cp, null)\n            cp = this.consumeNextCodePoint()\n        }\n\n        if (cp === SEMICOLON) {\n            this.reportParseError(\"unknown-named-character-reference\")\n        }\n        return this.reconsumeAs(this.returnState)\n    }\n\n    /**\n     * https://html.spec.whatwg.org/multipage/parsing.html#numeric-character-reference-state\n     * @param cp The current code point.\n     * @returns The next state.\n     */\n    protected NUMERIC_CHARACTER_REFERENCE(cp: number): TokenizerState {\n        this.crCode = 0\n\n        if (cp === LATIN_SMALL_X || cp === LATIN_CAPITAL_X) {\n            this.buffer.push(cp)\n            return \"HEXADEMICAL_CHARACTER_REFERENCE_START\"\n        }\n        return this.reconsumeAs(\"DECIMAL_CHARACTER_REFERENCE_START\")\n    }\n\n    /**\n     * https://html.spec.whatwg.org/multipage/parsing.html#hexademical-character-reference-start-state\n     * @param cp The current code point.\n     * @returns The next state.\n     */\n    protected HEXADEMICAL_CHARACTER_REFERENCE_START(\n        cp: number,\n    ): TokenizerState {\n        if (isHexDigit(cp)) {\n            return this.reconsumeAs(\"HEXADEMICAL_CHARACTER_REFERENCE\")\n        }\n\n        this.reportParseError(\n            \"absence-of-digits-in-numeric-character-reference\",\n        )\n        return this.reconsumeAs(\"CHARACTER_REFERENCE_END\")\n    }\n\n    /**\n     * https://html.spec.whatwg.org/multipage/parsing.html#decimal-character-reference-start-state\n     * @param cp The current code point.\n     * @returns The next state.\n     */\n    protected DECIMAL_CHARACTER_REFERENCE_START(cp: number): TokenizerState {\n        if (isDigit(cp)) {\n            return this.reconsumeAs(\"DECIMAL_CHARACTER_REFERENCE\")\n        }\n\n        this.reportParseError(\n            \"absence-of-digits-in-numeric-character-reference\",\n        )\n        return this.reconsumeAs(\"CHARACTER_REFERENCE_END\")\n    }\n\n    /**\n     * https://html.spec.whatwg.org/multipage/parsing.html#hexademical-character-reference-state\n     * @param cp The current code point.\n     * @returns The next state.\n     */\n    protected HEXADEMICAL_CHARACTER_REFERENCE(cp: number): TokenizerState {\n        while (true) {\n            if (isDigit(cp)) {\n                this.crCode = 16 * this.crCode + (cp - 0x30)\n            } else if (isUpperHexDigit(cp)) {\n                this.crCode = 16 * this.crCode + (cp - 0x37)\n            } else if (isLowerHexDigit(cp)) {\n                this.crCode = 16 * this.crCode + (cp - 0x57)\n            } else {\n                if (cp === SEMICOLON) {\n                    return \"NUMERIC_CHARACTER_REFERENCE_END\"\n                }\n\n                this.reportParseError(\n                    \"missing-semicolon-after-character-reference\",\n                )\n                return this.reconsumeAs(\"NUMERIC_CHARACTER_REFERENCE_END\")\n            }\n\n            cp = this.consumeNextCodePoint()\n        }\n    }\n\n    /**\n     * https://html.spec.whatwg.org/multipage/parsing.html#decimal-character-reference-state\n     * @param cp The current code point.\n     * @returns The next state.\n     */\n    protected DECIMAL_CHARACTER_REFERENCE(cp: number): TokenizerState {\n        while (true) {\n            if (isDigit(cp)) {\n                this.crCode = 10 * this.crCode + (cp - 0x30)\n            } else {\n                if (cp === SEMICOLON) {\n                    return \"NUMERIC_CHARACTER_REFERENCE_END\"\n                }\n\n                this.reportParseError(\n                    \"missing-semicolon-after-character-reference\",\n                )\n                return this.reconsumeAs(\"NUMERIC_CHARACTER_REFERENCE_END\")\n            }\n\n            cp = this.consumeNextCodePoint()\n        }\n    }\n\n    /**\n     * https://html.spec.whatwg.org/multipage/parsing.html#numeric-character-reference-end-state\n     * @param cp The current code point.\n     * @returns The next state.\n     */\n    protected NUMERIC_CHARACTER_REFERENCE_END(_cp: number): TokenizerState {\n        let code = this.crCode\n\n        if (code === 0) {\n            this.reportParseError(\"null-character-reference\")\n            code = NULL_REPLACEMENT\n        } else if (code > 0x10ffff) {\n            this.reportParseError(\"character-reference-outside-unicode-range\")\n            code = NULL_REPLACEMENT\n        } else if (isSurrogate(code)) {\n            this.reportParseError(\"surrogate-character-reference\")\n            code = NULL_REPLACEMENT\n        } else if (isNonCharacter(code)) {\n            this.reportParseError(\"noncharacter-character-reference\")\n        } else if (code === 0x0d || (isControl(code) && !isWhitespace(code))) {\n            this.reportParseError(\"control-character-reference\")\n            code = alternativeCR.get(code) || code\n        }\n\n        this.buffer = [code]\n        return this.reconsumeAs(\"CHARACTER_REFERENCE_END\")\n    }\n\n    /**\n     * https://html.spec.whatwg.org/multipage/parsing.html#character-reference-end-state\n     * @param cp The current code point.\n     * @returns The next state.\n     */\n    protected CHARACTER_REFERENCE_END(_cp: number): TokenizerState {\n        assert(this.currentToken != null)\n\n        // The this.buffer.length is not new length since it includes surrogate pairs.\n        // Calculate new length.\n        const token = this.currentToken\n        const len0 = token.value.length\n        for (const cp1 of this.buffer) {\n            this.appendTokenValue(cp1, null)\n        }\n        const newLength = token.value.length - len0\n\n        // Make gaps in the difference of length.\n        for (let i = this.crStartOffset + newLength; i < this.offset; ++i) {\n            this.gaps.push(i)\n        }\n\n        return this.reconsumeAs(this.returnState)\n    }\n\n    /**\n     * Original state.\n     * Create `{{ `token.\n     * @param cp The current code point.\n     * @returns The next state.\n     */\n    protected V_EXPRESSION_START(cp: number): TokenizerState {\n        if (cp === LEFT_CURLY_BRACKET) {\n            this.startToken(\"VExpressionStart\")\n            this.appendTokenValue(LEFT_CURLY_BRACKET, null)\n            this.appendTokenValue(LEFT_CURLY_BRACKET, null)\n\n            if (!this.parserOptions.vueFeatures?.interpolationAsNonHTML) {\n                return this.returnState\n            }\n\n            const closeIndex = this.text.indexOf(\"}}\", this.offset + 1)\n            if (closeIndex === -1) {\n                this.reportParseError(\"x-missing-interpolation-end\")\n                return this.returnState\n            }\n            this.vExpressionScriptState = {\n                state: this.returnState,\n            }\n            return \"V_EXPRESSION_DATA\"\n        }\n\n        this.appendTokenValue(LEFT_CURLY_BRACKET, null)\n        return this.reconsumeAs(this.returnState)\n    }\n\n    /**\n     * Original state.\n     * Parse in interpolation.\n     * @see https://github.com/vuejs/vue-next/blob/3a6b1207fa39cb35eed5bae0b5fdcdb465926bca/packages/compiler-core/src/parse.ts#L752\n     * @param cp The current code point.\n     * @returns The next state.\n     */\n    protected V_EXPRESSION_DATA(cp: number): TokenizerState {\n        this.clearStartTokenMark()\n        const state = this.vExpressionScriptState!.state\n\n        while (true) {\n            const type = isWhitespace(cp)\n                ? \"HTMLWhitespace\"\n                : state === \"RCDATA\"\n                ? \"HTMLRawText\"\n                : state === \"RAWTEXT\"\n                ? \"HTMLRCDataText\"\n                : \"HTMLText\"\n            if (this.currentToken != null && this.currentToken.type !== type) {\n                this.endToken()\n                return this.reconsumeAs(this.state)\n            }\n            if (this.currentToken == null) {\n                this.startToken(type)\n            }\n\n            if (cp === AMPERSAND && state !== \"RAWTEXT\") {\n                this.returnState = \"V_EXPRESSION_DATA\"\n                return \"CHARACTER_REFERENCE\"\n            }\n            // if (cp === LESS_THAN_SIGN) {\n            //     this.setStartTokenMark()\n            //     return \"TAG_OPEN\"\n            // }\n            if (cp === RIGHT_CURLY_BRACKET) {\n                this.setStartTokenMark()\n                this.returnState = \"V_EXPRESSION_DATA\"\n                return \"V_EXPRESSION_END\"\n            }\n            // Already checked\n            /* istanbul ignore next */\n            if (cp === EOF) {\n                this.reportParseError(\"x-missing-interpolation-end\")\n                return \"DATA\"\n            }\n\n            if (cp === NULL) {\n                this.reportParseError(\"unexpected-null-character\")\n            }\n            this.appendTokenValue(cp, type)\n\n            cp = this.consumeNextCodePoint()\n        }\n    }\n    /**\n     * Create `}} `token.\n     * @param cp The current code point.\n     * @returns The next state.\n     */\n    protected V_EXPRESSION_END(cp: number): TokenizerState {\n        if (cp === RIGHT_CURLY_BRACKET) {\n            this.startToken(\"VExpressionEnd\")\n            this.appendTokenValue(RIGHT_CURLY_BRACKET, null)\n            this.appendTokenValue(RIGHT_CURLY_BRACKET, null)\n            return this.vExpressionScriptState\n                ? this.vExpressionScriptState.state\n                : this.returnState\n        }\n\n        this.appendTokenValue(RIGHT_CURLY_BRACKET, null)\n        return this.reconsumeAs(this.returnState)\n    }\n}\n\n/*eslint-enable no-constant-condition, no-param-reassign */\n", "/**\n * This file is copied from `eslint/lib/util/node-event-generator.js`\n */\nimport EventEmitter from \"events\"\nimport esquery, {ESQueryOptions, Selector} from \"esquery\"\nimport union from \"lodash/union\"\nimport intersection from \"lodash/intersection\"\nimport memoize from \"lodash/memoize\"\nimport {Node} from \"../ast\"\n\ninterface NodeSelector {\n    rawSelector: string\n    isExit: boolean\n    parsedSelector: Selector\n    listenerTypes: string[] | null\n    attributeCount: number\n    identifierCount: number\n}\n\n/**\n* Gets the possible types of a selector\n* @param parsedSelector An object (from esquery) describing the matching behavior of the selector\n* @returns The node types that could possibly trigger this selector, or `null` if all node types could trigger it\n*/\nfunction getPossibleTypes(parsedSelector: Selector): string[] | null {\n    switch (parsedSelector.type) {\n        case \"identifier\":\n            return [parsedSelector.value]\n\n        case \"matches\": {\n            const typesForComponents = parsedSelector.selectors.map(getPossibleTypes)\n\n            if (typesForComponents.every(Boolean)) {\n                return union(...(typesForComponents as string[][]))\n            }\n            return null\n        }\n\n        case \"compound\": {\n            const typesForComponents = parsedSelector.selectors.map(getPossibleTypes).filter(Boolean) as string[][]\n\n            // If all of the components could match any type, then the compound could also match any type.\n            if (!typesForComponents.length) {\n                return null\n            }\n\n            /*\n             * If at least one of the components could only match a particular type, the compound could only match\n             * the intersection of those types.\n             */\n            return intersection(...typesForComponents)\n        }\n\n        case \"child\":\n        case \"descendant\":\n        case \"sibling\":\n        case \"adjacent\":\n            return getPossibleTypes(parsedSelector.right)\n\n        default:\n            return null\n    }\n}\n\n/**\n * Counts the number of class, pseudo-class, and attribute queries in this selector\n * @param parsedSelector An object (from esquery) describing the selector's matching behavior\n * @returns The number of class, pseudo-class, and attribute queries in this selector\n */\nfunction countClassAttributes(parsedSelector: Selector): number {\n    switch (parsedSelector.type) {\n        case \"child\":\n        case \"descendant\":\n        case \"sibling\":\n        case \"adjacent\":\n            return countClassAttributes(parsedSelector.left) + countClassAttributes(parsedSelector.right)\n\n        case \"compound\":\n        case \"not\":\n        case \"matches\":\n            return parsedSelector.selectors.reduce((sum, childSelector) => sum + countClassAttributes(childSelector), 0)\n\n        case \"attribute\":\n        case \"field\":\n        case \"nth-child\":\n        case \"nth-last-child\":\n            return 1\n\n        default:\n            return 0\n    }\n}\n\n/**\n * Counts the number of identifier queries in this selector\n * @param parsedSelector An object (from esquery) describing the selector's matching behavior\n * @returns The number of identifier queries\n */\nfunction countIdentifiers(parsedSelector: Selector): number {\n    switch (parsedSelector.type) {\n        case \"child\":\n        case \"descendant\":\n        case \"sibling\":\n        case \"adjacent\":\n            return countIdentifiers(parsedSelector.left) + countIdentifiers(parsedSelector.right)\n\n        case \"compound\":\n        case \"not\":\n        case \"matches\":\n            return parsedSelector.selectors.reduce((sum, childSelector) => sum + countIdentifiers(childSelector), 0)\n\n        case \"identifier\":\n            return 1\n\n        default:\n            return 0\n    }\n}\n\n/**\n * Compares the specificity of two selector objects, with CSS-like rules.\n * @param selectorA An AST selector descriptor\n * @param selectorB Another AST selector descriptor\n * @returns\n * a value less than 0 if selectorA is less specific than selectorB\n * a value greater than 0 if selectorA is more specific than selectorB\n * a value less than 0 if selectorA and selectorB have the same specificity, and selectorA <= selectorB alphabetically\n * a value greater than 0 if selectorA and selectorB have the same specificity, and selectorA > selectorB alphabetically\n */\nfunction compareSpecificity(selectorA: NodeSelector, selectorB: NodeSelector): number {\n    return selectorA.attributeCount - selectorB.attributeCount ||\n        selectorA.identifierCount - selectorB.identifierCount ||\n        (selectorA.rawSelector <= selectorB.rawSelector ? -1 : 1)\n}\n\n/**\n * Parses a raw selector string, and throws a useful error if parsing fails.\n * @param rawSelector A raw AST selector\n * @returns An object (from esquery) describing the matching behavior of this selector\n * @throws An error if the selector is invalid\n */\nfunction tryParseSelector(rawSelector: string): Selector {\n    try {\n        return esquery.parse(rawSelector.replace(/:exit$/, \"\"))\n    }\n    catch (err) {\n        if (typeof err.offset === \"number\") {\n            throw new Error(`Syntax error in selector \"${rawSelector}\" at position ${err.offset}: ${err.message}`)\n        }\n        throw err\n    }\n}\n\n/**\n * Parses a raw selector string, and returns the parsed selector along with specificity and type information.\n * @param {string} rawSelector A raw AST selector\n * @returns {ASTSelector} A selector descriptor\n */\nconst parseSelector = memoize<(rawSelector: string) => NodeSelector>(rawSelector => {\n    const parsedSelector = tryParseSelector(rawSelector)\n\n    return {\n        rawSelector,\n        isExit: rawSelector.endsWith(\":exit\"),\n        parsedSelector,\n        listenerTypes: getPossibleTypes(parsedSelector),\n        attributeCount: countClassAttributes(parsedSelector),\n        identifierCount: countIdentifiers(parsedSelector),\n    }\n})\n\n//------------------------------------------------------------------------------\n// Public Interface\n//------------------------------------------------------------------------------\n\n/**\n * The event generator for AST nodes.\n * This implements below interface.\n *\n * ```ts\n * interface EventGenerator {\n *     emitter: EventEmitter\n *     enterNode(node: ASTNode): void\n *     leaveNode(node: ASTNode): void\n * }\n * ```\n */\nexport default class NodeEventGenerator {\n    emitter: EventEmitter\n    esqueryOptions: ESQueryOptions\n\n    private currentAncestry: Node[]\n    private enterSelectorsByNodeType: Map<string, NodeSelector[]>\n    private exitSelectorsByNodeType: Map<string, NodeSelector[]>\n    private anyTypeEnterSelectors: NodeSelector[]\n    private anyTypeExitSelectors: NodeSelector[]\n\n    /**\n    * @param emitter - An event emitter which is the destination of events. This emitter must already\n    * have registered listeners for all of the events that it needs to listen for.\n    */\n    constructor(emitter: EventEmitter, esqueryOptions: ESQueryOptions) {\n        this.emitter = emitter\n        this.esqueryOptions = esqueryOptions\n        this.currentAncestry = []\n        this.enterSelectorsByNodeType = new Map()\n        this.exitSelectorsByNodeType = new Map()\n        this.anyTypeEnterSelectors = []\n        this.anyTypeExitSelectors = []\n\n        const eventNames = typeof emitter.eventNames === \"function\"\n\n            // Use the built-in eventNames() function if available (Node 6+)\n            ? emitter.eventNames()\n\n            /*\n             * Otherwise, use the private _events property.\n             * Using a private property isn't ideal here, but this seems to\n             * be the best way to get a list of event names without overriding\n             * addEventListener, which would hurt performance. This property\n             * is widely used and unlikely to be removed in a future version\n             * (see https://github.com/nodejs/node/issues/1817). Also, future\n             * node versions will have eventNames() anyway.\n             */\n            : Object.keys((emitter as any)._events)\n\n        for (const rawSelector of eventNames) {\n            if (typeof rawSelector === \"symbol\") {\n                continue\n            }\n            const selector = parseSelector(rawSelector)\n\n            if (selector.listenerTypes) {\n                for (const nodeType of selector.listenerTypes) {\n                    const typeMap = selector.isExit ? this.exitSelectorsByNodeType : this.enterSelectorsByNodeType\n\n                    let selectors = typeMap.get(nodeType)\n                    if (selectors == null) {\n                        typeMap.set(nodeType, (selectors = []))\n                    }\n                    selectors.push(selector)\n                }\n            }\n            else {\n                (selector.isExit ? this.anyTypeExitSelectors : this.anyTypeEnterSelectors).push(selector)\n            }\n        }\n\n        this.anyTypeEnterSelectors.sort(compareSpecificity)\n        this.anyTypeExitSelectors.sort(compareSpecificity)\n        for (const selectorList of this.enterSelectorsByNodeType.values()) {\n            selectorList.sort(compareSpecificity)\n        }\n        for (const selectorList of this.exitSelectorsByNodeType.values()) {\n            selectorList.sort(compareSpecificity)\n        }\n    }\n\n    /**\n     * Checks a selector against a node, and emits it if it matches\n     * @param node The node to check\n     * @param selector An AST selector descriptor\n     */\n    private applySelector(node: Node, selector: NodeSelector): void {\n        if (esquery.matches(node, selector.parsedSelector, this.currentAncestry,  this.esqueryOptions)) {\n            this.emitter.emit(selector.rawSelector, node)\n        }\n    }\n\n    /**\n     * Applies all appropriate selectors to a node, in specificity order\n     * @param node The node to check\n     * @param isExit `false` if the node is currently being entered, `true` if it's currently being exited\n     */\n    private applySelectors(node: Node, isExit: boolean): void {\n        const selectorsByNodeType = (isExit ? this.exitSelectorsByNodeType : this.enterSelectorsByNodeType).get(node.type) || []\n        const anyTypeSelectors = isExit ? this.anyTypeExitSelectors : this.anyTypeEnterSelectors\n\n        /*\n         * selectorsByNodeType and anyTypeSelectors were already sorted by specificity in the constructor.\n         * Iterate through each of them, applying selectors in the right order.\n         */\n        let selectorsByTypeIndex = 0\n        let anyTypeSelectorsIndex = 0\n\n        while (selectorsByTypeIndex < selectorsByNodeType.length || anyTypeSelectorsIndex < anyTypeSelectors.length) {\n            if (\n                selectorsByTypeIndex >= selectorsByNodeType.length ||\n                (anyTypeSelectorsIndex < anyTypeSelectors.length && compareSpecificity(anyTypeSelectors[anyTypeSelectorsIndex], selectorsByNodeType[selectorsByTypeIndex]) < 0)\n            ) {\n                this.applySelector(node, anyTypeSelectors[anyTypeSelectorsIndex++])\n            }\n            else {\n                this.applySelector(node, selectorsByNodeType[selectorsByTypeIndex++])\n            }\n        }\n    }\n\n    /**\n     * Emits an event of entering AST node.\n     * @param node - A node which was entered.\n     */\n    enterNode(node: Node): void {\n        if (node.parent) {\n            this.currentAncestry.unshift(node.parent)\n        }\n        this.applySelectors(node, false)\n    }\n\n    /**\n     * Emits an event of leaving AST node.\n     * @param node - A node which was left.\n     */\n    leaveNode(node: Node): void {\n        this.applySelectors(node, true)\n        this.currentAncestry.shift()\n    }\n}\n", "/**\n * @fileoverview Define utilify functions for token store.\n * @author Toru Nagashima\n */\nimport sortedIndexBy from \"lodash/sortedIndexBy\"\nimport {HasLocation} from \"../../ast\"\n\n/**\n * Gets `token.range[0]` from the given token.\n *\n * @param token - The token to get.\n * @returns The start location.\n * @private\n */\nfunction getStartLocation(token: { range: number[] }): number {\n    return token.range[0]\n}\n\n/**\n * Binary-searches the index of the first token which is after the given location.\n * If it was not found, this returns `tokens.length`.\n *\n * @param tokens - It searches the token in this list.\n * @param location - The location to search.\n * @returns The found index or `tokens.length`.\n */\nexport function search(tokens: HasLocation[], location: number): number {\n    return sortedIndexBy(\n        tokens as { range: number[] }[],\n        { range: [location] },\n        getStartLocation,\n    )\n}\n\n/**\n * Gets the index of the `startLoc` in `tokens`.\n * `startLoc` can be the value of `node.range[1]`, so this checks about `startLoc - 1` as well.\n *\n * @param tokens - The tokens to find an index.\n * @param indexMap - The map from locations to indices.\n * @param startLoc - The location to get an index.\n * @returns The index.\n */\nexport function getFirstIndex(tokens: HasLocation[], indexMap: { [key: number]: number }, startLoc: number): number {\n    if (startLoc in indexMap) {\n        return indexMap[startLoc]\n    }\n    if ((startLoc - 1) in indexMap) {\n        const index = indexMap[startLoc - 1]\n        const token = (index >= 0 && index < tokens.length) ? tokens[index] : null\n\n        // For the map of \"comment's location -> token's index\", it points the next token of a comment.\n        // In that case, +1 is unnecessary.\n        if (token && token.range[0] >= startLoc) {\n            return index\n        }\n        return index + 1\n    }\n    return 0\n}\n\n/**\n * Gets the index of the `endLoc` in `tokens`.\n * The information of end locations are recorded at `endLoc - 1` in `indexMap`, so this checks about `endLoc - 1` as well.\n *\n * @param tokens - The tokens to find an index.\n * @param indexMap - The map from locations to indices.\n * @param endLoc - The location to get an index.\n * @returns The index.\n */\nexport function getLastIndex(tokens: HasLocation[], indexMap: { [key: number]: number }, endLoc: number): number {\n    if (endLoc in indexMap) {\n        return indexMap[endLoc] - 1\n    }\n    if ((endLoc - 1) in indexMap) {\n        const index = indexMap[endLoc - 1]\n        const token = (index >= 0 && index < tokens.length) ? tokens[index] : null\n\n        // For the map of \"comment's location -> token's index\", it points the next token of a comment.\n        // In that case, -1 is necessary.\n        if (token && token.range[1] > endLoc) {\n            return index - 1\n        }\n        return index\n    }\n    return tokens.length - 1\n}\n", "/**\n * @fileoverview Define the abstract class about cursors which iterate tokens.\n * @author Toru Nagashima\n */\nimport {Token} from \"../../../ast\"\n\n/**\n * The abstract class about cursors which iterate tokens.\n *\n * This class has 2 abstract methods.\n *\n * - `current: Token | Comment | null` ... The current token.\n * - `moveNext(): boolean` ... Moves this cursor to the next token. If the next token didn't exist, it returns `false`.\n *\n * This is similar to ES2015 Iterators.\n * However, Iterators were slow (at 2017-01), so I created this class as similar to C# IEnumerable.\n *\n * There are the following known sub classes.\n *\n * - ForwardTokenCursor .......... The cursor which iterates tokens only.\n * - BackwardTokenCursor ......... The cursor which iterates tokens only in reverse.\n * - ForwardTokenCommentCursor ... The cursor which iterates tokens and comments.\n * - BackwardTokenCommentCursor .. The cursor which iterates tokens and comments in reverse.\n * - DecorativeCursor\n *     - FilterCursor ............ The cursor which ignores the specified tokens.\n *     - SkipCursor .............. The cursor which ignores the first few tokens.\n *     - LimitCursor ............. The cursor which limits the count of tokens.\n *\n */\nexport default abstract class Cursor {\n    current: Token | null\n\n    /**\n     * Initializes this cursor.\n     */\n    constructor() {\n        this.current = null\n    }\n\n    /**\n     * Gets the first token.\n     * This consumes this cursor.\n     * @returns The first token or null.\n     */\n    getOneToken(): Token | null {\n        return this.moveNext() ? this.current : null\n    }\n\n    /**\n     * Gets the first tokens.\n     * This consumes this cursor.\n     * @returns All tokens.\n     */\n    getAllTokens(): Token[] {\n        const tokens: Token[] = []\n\n        while (this.moveNext()) {\n            tokens.push(this.current as Token)\n        }\n\n        return tokens\n    }\n\n    /**\n     * Moves this cursor to the next token.\n     * @returns {boolean} `true` if the next token exists.\n     * @abstract\n     */\n    abstract moveNext(): boolean\n}\n", "/**\n * @fileoverview Define the cursor which iterates tokens and comments in reverse.\n * @author Toru Nagashima\n */\nimport {Token} from \"../../../ast\"\nimport {getLastIndex, search} from \"../utils\"\nimport Cursor from \"./cursor\"\n\n/**\n * The cursor which iterates tokens and comments in reverse.\n */\nexport default class BackwardTokenCommentCursor extends Cursor {\n    private tokens: Token[]\n    private comments: Token[]\n    private tokenIndex: number\n    private commentIndex: number\n    private border: number\n\n    /**\n     * Initializes this cursor.\n     * @param tokens - The array of tokens.\n     * @param comments - The array of comments.\n     * @param indexMap - The map from locations to indices in `tokens`.\n     * @param startLoc - The start location of the iteration range.\n     * @param endLoc - The end location of the iteration range.\n     */\n    constructor(tokens: Token[], comments: Token[], indexMap: { [key: number]: number }, startLoc: number, endLoc: number) {\n        super()\n        this.tokens = tokens\n        this.comments = comments\n        this.tokenIndex = getLastIndex(tokens, indexMap, endLoc)\n        this.commentIndex = search(comments, endLoc) - 1\n        this.border = startLoc\n    }\n\n    /** @inheritdoc */\n    moveNext(): boolean {\n        const token = (this.tokenIndex >= 0) ? this.tokens[this.tokenIndex] : null\n        const comment = (this.commentIndex >= 0) ? this.comments[this.commentIndex] : null\n\n        if (token && (!comment || token.range[1] > comment.range[1])) {\n            this.current = token\n            this.tokenIndex -= 1\n        }\n        else if (comment) {\n            this.current = comment\n            this.commentIndex -= 1\n        }\n        else {\n            this.current = null\n        }\n\n        return this.current != null && (this.border === -1 || this.current.range[0] >= this.border)\n    }\n}\n", "/**\n * @fileoverview Define the cursor which iterates tokens only in reverse.\n * @author Toru Nagashima\n */\nimport {Token} from \"../../../ast\"\nimport {getFirstIndex, getLastIndex} from \"../utils\"\nimport Cursor from \"./cursor\"\n\n/**\n * The cursor which iterates tokens only in reverse.\n */\nexport default class BackwardTokenCursor extends Cursor {\n    private tokens: Token[]\n    private index: number\n    private indexEnd: number\n\n    /**\n     * Initializes this cursor.\n     * @param tokens - The array of tokens.\n     * @param comments - The array of comments.\n     * @param indexMap - The map from locations to indices in `tokens`.\n     * @param startLoc - The start location of the iteration range.\n     * @param endLoc - The end location of the iteration range.\n     */\n    constructor(tokens: Token[], _comments: Token[], indexMap: { [key: number]: number }, startLoc: number, endLoc: number) {\n        super()\n        this.tokens = tokens\n        this.index = getLastIndex(tokens, indexMap, endLoc)\n        this.indexEnd = getFirstIndex(tokens, indexMap, startLoc)\n    }\n\n    /** @inheritdoc */\n    moveNext(): boolean {\n        if (this.index >= this.indexEnd) {\n            this.current = this.tokens[this.index]\n            this.index -= 1\n            return true\n        }\n        return false\n    }\n\n    //\n    // Shorthand for performance.\n    //\n\n    /** @inheritdoc */\n    getOneToken(): Token | null {\n        return (this.index >= this.indexEnd) ? this.tokens[this.index] : null\n    }\n}\n", "/**\n * @fileoverview Define the abstract class about cursors which manipulate another cursor.\n * @author Toru Nagashima\n */\nimport Cursor from \"./cursor\"\n\n//------------------------------------------------------------------------------\n// Exports\n//------------------------------------------------------------------------------\n\n/**\n * The abstract class about cursors which manipulate another cursor.\n */\nexport default class DecorativeCursor extends Cursor {\n    protected cursor: Cursor\n\n    /**\n     * Initializes this cursor.\n     * @param cursor - The cursor to be decorated.\n     */\n    constructor(cursor: Cursor) {\n        super()\n        this.cursor = cursor\n    }\n\n    /** @inheritdoc */\n    moveNext(): boolean {\n        const retv = this.cursor.moveNext()\n\n        this.current = this.cursor.current\n\n        return retv\n    }\n}\n", "/**\n * @fileoverview Define the cursor which ignores specified tokens.\n * @author Toru Nagashima\n */\nimport {Token} from \"../../../ast\"\nimport Cursor from \"./cursor\"\nimport DecorativeCursor from \"./decorative-cursor\"\n\n/**\n * The decorative cursor which ignores specified tokens.\n */\nexport default class FilterCursor extends DecorativeCursor {\n    private predicate: (token: Token) => boolean\n\n    /**\n     * Initializes this cursor.\n     * @param cursor - The cursor to be decorated.\n     * @param predicate - The predicate function to decide tokens this cursor iterates.\n     */\n    constructor(cursor: Cursor, predicate: (token: Token) => boolean) {\n        super(cursor)\n        this.predicate = predicate\n    }\n\n    /** @inheritdoc */\n    moveNext(): boolean {\n        const predicate = this.predicate\n\n        while (super.moveNext()) {\n            if (predicate(this.current as Token)) {\n                return true\n            }\n        }\n        return false\n    }\n}\n", "/**\n * @fileoverview Define the cursor which iterates tokens and comments.\n * @author Toru Nagashima\n */\nimport {Token} from \"../../../ast\"\nimport {getFirstIndex, search} from \"../utils\"\nimport Cursor from \"./cursor\"\n\n/**\n * The cursor which iterates tokens and comments.\n */\nexport default class ForwardTokenCommentCursor extends Cursor {\n    private tokens: Token[]\n    private comments: Token[]\n    private tokenIndex: number\n    private commentIndex: number\n    private border: number\n\n    /**\n     * Initializes this cursor.\n     * @param tokens - The array of tokens.\n     * @param comments - The array of comments.\n     * @param indexMap - The map from locations to indices in `tokens`.\n     * @param startLoc - The start location of the iteration range.\n     * @param endLoc - The end location of the iteration range.\n     */\n    constructor(tokens: Token[], comments: Token[], indexMap: { [key: number]: number }, startLoc: number, endLoc: number) {\n        super()\n        this.tokens = tokens\n        this.comments = comments\n        this.tokenIndex = getFirstIndex(tokens, indexMap, startLoc)\n        this.commentIndex = search(comments, startLoc)\n        this.border = endLoc\n    }\n\n    /** @inheritdoc */\n    moveNext(): boolean {\n        const token = (this.tokenIndex < this.tokens.length) ? this.tokens[this.tokenIndex] : null\n        const comment = (this.commentIndex < this.comments.length) ? this.comments[this.commentIndex] : null\n\n        if (token && (!comment || token.range[0] < comment.range[0])) {\n            this.current = token\n            this.tokenIndex += 1\n        }\n        else if (comment) {\n            this.current = comment\n            this.commentIndex += 1\n        }\n        else {\n            this.current = null\n        }\n\n        return this.current != null && (this.border === -1 || this.current.range[1] <= this.border)\n    }\n}\n", "/**\n * @fileoverview Define the cursor which iterates tokens only.\n * @author Toru Nagashima\n */\nimport {Token} from \"../../../ast\"\nimport {getFirstIndex, getLastIndex} from \"../utils\"\nimport Cursor from \"./cursor\"\n\n/**\n * The cursor which iterates tokens only.\n */\nexport default class ForwardTokenCursor extends Cursor {\n    private tokens: Token[]\n    protected index: number\n    protected indexEnd: number\n\n    /**\n     * Initializes this cursor.\n     * @param tokens - The array of tokens.\n     * @param comments - The array of comments.\n     * @param indexMap - The map from locations to indices in `tokens`.\n     * @param startLoc - The start location of the iteration range.\n     * @param endLoc - The end location of the iteration range.\n     */\n    constructor(tokens: Token[], _comments: Token[], indexMap: { [key: number]: number }, startLoc: number, endLoc: number) {\n        super()\n        this.tokens = tokens\n        this.index = getFirstIndex(tokens, indexMap, startLoc)\n        this.indexEnd = getLastIndex(tokens, indexMap, endLoc)\n    }\n\n    /** @inheritdoc */\n    moveNext(): boolean {\n        if (this.index <= this.indexEnd) {\n            this.current = this.tokens[this.index]\n            this.index += 1\n            return true\n        }\n        return false\n    }\n\n    //\n    // Shorthand for performance.\n    //\n\n    /** @inheritdoc */\n    getOneToken(): Token | null {\n        return (this.index <= this.indexEnd) ? this.tokens[this.index] : null\n    }\n\n    /** @inheritdoc */\n    getAllTokens(): Token[] {\n        return this.tokens.slice(this.index, this.indexEnd + 1)\n    }\n}\n", "/**\n * @fileoverview Define the cursor which limits the number of tokens.\n * @author Toru Nagashima\n */\nimport Cursor from \"./cursor\"\nimport DecorativeCursor from \"./decorative-cursor\"\n\n/**\n * The decorative cursor which limits the number of tokens.\n */\nexport default class LimitCursor extends DecorativeCursor {\n    private count: number\n\n    /**\n     * Initializes this cursor.\n     * @param cursor - The cursor to be decorated.\n     * @param count - The count of tokens this cursor iterates.\n     */\n    constructor(cursor: Cursor, count: number) {\n        super(cursor)\n        this.count = count\n    }\n\n    /** @inheritdoc */\n    moveNext(): boolean {\n        if (this.count > 0) {\n            this.count -= 1\n            return super.moveNext()\n        }\n        return false\n    }\n}\n", "/**\n * @fileoverview Define the cursor which ignores the first few tokens.\n * @author Toru Nagashima\n */\nimport Cursor from \"./cursor\"\nimport DecorativeCursor from \"./decorative-cursor\"\n\n/**\n * The decorative cursor which ignores the first few tokens.\n */\nexport default class SkipCursor extends DecorativeCursor {\n    private count: number\n\n    /**\n     * Initializes this cursor.\n     * @param cursor - The cursor to be decorated.\n     * @param count - The count of tokens this cursor skips.\n     */\n    constructor(cursor: Cursor, count: number) {\n        super(cursor)\n        this.count = count\n    }\n\n    /** @inheritdoc */\n    moveNext(): boolean {\n        while (this.count > 0) {\n            this.count -= 1\n            if (!super.moveNext()) {\n                return false\n            }\n        }\n        return super.moveNext()\n    }\n}\n", "/**\n * @fileoverview Define 2 token factories; forward and backward.\n * @author Toru Nagashima\n */\nimport {Token} from \"../../../ast\"\nimport BackwardTokenCommentCursor from \"./backward-token-comment-cursor\"\nimport BackwardTokenCursor from \"./backward-token-cursor\"\nimport Cursor from \"./cursor\"\nimport FilterCursor from \"./filter-cursor\"\nimport ForwardTokenCommentCursor from \"./forward-token-comment-cursor\"\nimport ForwardTokenCursor from \"./forward-token-cursor\"\nimport LimitCursor from \"./limit-cursor\"\nimport SkipCursor from \"./skip-cursor\"\n\n/**\n * The cursor factory.\n * @private\n */\nexport class CursorFactory {\n    private TokenCursor: typeof BackwardTokenCursor | typeof ForwardTokenCursor\n    private TokenCommentCursor: typeof BackwardTokenCommentCursor | typeof ForwardTokenCommentCursor\n\n    /**\n     * Initializes this cursor.\n     * @param TokenCursor - The class of the cursor which iterates tokens only.\n     * @param TokenCommentCursor - The class of the cursor which iterates the mix of tokens and comments.\n     */\n    constructor(TokenCursor: typeof BackwardTokenCursor | typeof ForwardTokenCursor, TokenCommentCursor: typeof BackwardTokenCommentCursor | typeof ForwardTokenCommentCursor) {\n        this.TokenCursor = TokenCursor\n        this.TokenCommentCursor = TokenCommentCursor\n    }\n\n    /**\n     * Creates a base cursor instance that can be decorated by createCursor.\n     *\n     * @param tokens - The array of tokens.\n     * @param comments - The array of comments.\n     * @param indexMap - The map from locations to indices in `tokens`.\n     * @param startLoc - The start location of the iteration range.\n     * @param endLoc - The end location of the iteration range.\n     * @param includeComments - The flag to iterate comments as well.\n     * @returns The created base cursor.\n     */\n    createBaseCursor(tokens: Token[], comments: Token[], indexMap: { [key: number]: number }, startLoc: number, endLoc: number, includeComments: boolean): Cursor {\n        const TokenCursor = includeComments ? this.TokenCommentCursor : this.TokenCursor\n        return new TokenCursor(tokens, comments, indexMap, startLoc, endLoc)\n    }\n\n    /**\n     * Creates a cursor that iterates tokens with normalized options.\n     *\n     * @param tokens - The array of tokens.\n     * @param comments - The array of comments.\n     * @param indexMap - The map from locations to indices in `tokens`.\n     * @param startLoc - The start location of the iteration range.\n     * @param endLoc - The end location of the iteration range.\n     * @param includeComments - The flag to iterate comments as well.\n     * @param filter - The predicate function to choose tokens.\n     * @param skip - The count of tokens the cursor skips.\n     * @param count - The maximum count of tokens the cursor iterates. Zero is no iteration for backward compatibility.\n     * @returns The created cursor.\n     */\n    createCursor(tokens: Token[], comments: Token[], indexMap: { [key: number]: number }, startLoc: number, endLoc: number, includeComments: boolean, filter: ((token: Token) => boolean) | null, skip: number, count: number): Cursor {\n        let cursor = this.createBaseCursor(tokens, comments, indexMap, startLoc, endLoc, includeComments)\n\n        if (filter) {\n            cursor = new FilterCursor(cursor, filter)\n        }\n        if (skip >= 1) {\n            cursor = new SkipCursor(cursor, skip)\n        }\n        if (count >= 0) {\n            cursor = new LimitCursor(cursor, count)\n        }\n\n        return cursor\n    }\n}\n\nexport const forward = new CursorFactory(ForwardTokenCursor, ForwardTokenCommentCursor)\nexport const backward = new CursorFactory(BackwardTokenCursor, BackwardTokenCommentCursor)\n", "/**\n * @fileoverview Define the cursor which iterates tokens only, with inflated range.\n * @author Toru Nagashima\n */\nimport {Token} from \"../../../ast\"\nimport ForwardTokenCursor from \"./forward-token-cursor\"\n\n/**\n * The cursor which iterates tokens only, with inflated range.\n * This is for the backward compatibility of padding options.\n */\nexport default class PaddedTokenCursor extends ForwardTokenCursor {\n    /**\n     * Initializes this cursor.\n     * @param tokens - The array of tokens.\n     * @param comments - The array of comments.\n     * @param indexMap - The map from locations to indices in `tokens`.\n     * @param startLoc - The start location of the iteration range.\n     * @param endLoc - The end location of the iteration range.\n     * @param beforeCount - The number of tokens this cursor iterates before start.\n     * @param afterCount - The number of tokens this cursor iterates after end.\n     */\n    constructor(tokens: Token[], comments: Token[], indexMap: { [key: number]: number }, startLoc: number, endLoc: number, beforeCount: number, afterCount: number) {\n        super(tokens, comments, indexMap, startLoc, endLoc)\n        this.index = Math.max(0, this.index - beforeCount)\n        this.indexEnd = Math.min(tokens.length - 1, this.indexEnd + afterCount)\n    }\n}\n", "/**\n * @fileoverview Object to handle access and retrieval of tokens.\n * @author Brandon Mills\n */\nimport assert from \"assert\"\nimport {HasLocation, Token} from \"../../ast\"\nimport * as cursors from \"./cursors\"\nimport Cursor from \"./cursors/cursor\"\nimport ForwardTokenCursor from \"./cursors/forward-token-cursor\"\nimport PaddedTokenCursor from \"./cursors/padded-token-cursor\"\nimport {search} from \"./utils\"\n\nexport type SkipOptions = number | ((token: Token) => boolean) | {\n    includeComments?: boolean\n    filter?: (token: Token) => boolean\n    skip?: number\n}\nexport type CountOptions = number | ((token: Token) => boolean) | {\n    includeComments?: boolean\n    filter?: (token: Token) => boolean\n    count?: number\n}\n\n/**\n * Check whether the given token is a comment token or not.\n * @param token The token to check.\n * @returns `true` if the token is a comment token.\n */\nfunction isCommentToken(token: Token): boolean {\n    return token.type === \"Line\" || token.type === \"Block\" || token.type === \"Shebang\"\n}\n\n/**\n * Creates the map from locations to indices in `tokens`.\n *\n * The first/last location of tokens is mapped to the index of the token.\n * The first/last location of comments is mapped to the index of the next token of each comment.\n *\n * @param tokens - The array of tokens.\n * @param comments - The array of comments.\n * @returns The map from locations to indices in `tokens`.\n * @private\n */\nfunction createIndexMap(tokens: Token[], comments: Token[]): { [key: number]: number } {\n    const map = Object.create(null)\n    let tokenIndex = 0\n    let commentIndex = 0\n    let nextStart = 0\n    let range: [number, number] | null = null\n\n    while (tokenIndex < tokens.length || commentIndex < comments.length) {\n        nextStart = (commentIndex < comments.length) ? comments[commentIndex].range[0] : Number.MAX_SAFE_INTEGER\n        while (tokenIndex < tokens.length && (range = tokens[tokenIndex].range)[0] < nextStart) {\n            map[range[0]] = tokenIndex\n            map[range[1] - 1] = tokenIndex\n            tokenIndex += 1\n        }\n\n        nextStart = (tokenIndex < tokens.length) ? tokens[tokenIndex].range[0] : Number.MAX_SAFE_INTEGER\n        while (commentIndex < comments.length && (range = comments[commentIndex].range)[0] < nextStart) {\n            map[range[0]] = tokenIndex\n            map[range[1] - 1] = tokenIndex\n            commentIndex += 1\n        }\n    }\n\n    return map\n}\n\n/**\n * Creates the cursor iterates tokens with options.\n *\n * @param factory - The cursor factory to initialize cursor.\n * @param tokens - The array of tokens.\n * @param comments - The array of comments.\n * @param indexMap - The map from locations to indices in `tokens`.\n * @param startLoc - The start location of the iteration range.\n * @param endLoc - The end location of the iteration range.\n * @param opts - The option object. If this is a number then it's `opts.skip`. If this is a function then it's `opts.filter`.\n * @returns The created cursor.\n * @private\n */\nfunction createCursorWithSkip(factory: cursors.CursorFactory, tokens: Token[], comments: Token[], indexMap: { [key: number]: number }, startLoc: number, endLoc: number, opts?: SkipOptions): Cursor {\n    let includeComments = false\n    let skip = 0\n    let filter: ((token: Token) => boolean) | null = null\n\n    if (typeof opts === \"number\") {\n        skip = opts | 0\n    }\n    else if (typeof opts === \"function\") {\n        filter = opts\n    }\n    else if (opts) {\n        includeComments = Boolean(opts.includeComments)\n        skip = opts.skip || 0\n        filter = opts.filter || null\n    }\n    assert(skip >= 0, \"options.skip should be zero or a positive integer.\")\n    assert(!filter || typeof filter === \"function\", \"options.filter should be a function.\")\n\n    return factory.createCursor(tokens, comments, indexMap, startLoc, endLoc, includeComments, filter, skip, -1)\n}\n\n/**\n * Creates the cursor iterates tokens with options.\n *\n * @param factory - The cursor factory to initialize cursor.\n * @param tokens - The array of tokens.\n * @param comments - The array of comments.\n * @param indexMap - The map from locations to indices in `tokens`.\n * @param startLoc - The start location of the iteration range.\n * @param endLoc - The end location of the iteration range.\n * @param opts - The option object. If this is a number then it's `opts.count`. If this is a function then it's `opts.filter`.\n * @returns The created cursor.\n * @private\n */\nfunction createCursorWithCount(factory: cursors.CursorFactory, tokens: Token[], comments: Token[], indexMap: { [key: number]: number }, startLoc: number, endLoc: number, opts?: CountOptions): Cursor {\n    let includeComments = false\n    let count = 0\n    let countExists = false\n    let filter: ((token: Token) => boolean) | null = null\n\n    if (typeof opts === \"number\") {\n        count = opts | 0\n        countExists = true\n    }\n    else if (typeof opts === \"function\") {\n        filter = opts\n    }\n    else if (opts) {\n        includeComments = Boolean(opts.includeComments)\n        count = opts.count || 0\n        countExists = typeof opts.count === \"number\"\n        filter = opts.filter || null\n    }\n    assert(count >= 0, \"options.count should be zero or a positive integer.\")\n    assert(!filter || typeof filter === \"function\", \"options.filter should be a function.\")\n\n    return factory.createCursor(tokens, comments, indexMap, startLoc, endLoc, includeComments, filter, 0, countExists ? count : -1)\n}\n\n/**\n * Creates the cursor iterates tokens with options.\n *\n * @param tokens - The array of tokens.\n * @param comments - The array of comments.\n * @param indexMap - The map from locations to indices in `tokens`.\n * @param startLoc - The start location of the iteration range.\n * @param endLoc - The end location of the iteration range.\n * @param beforeCount - The number of tokens before the node to retrieve.\n * @param afterCount - The number of tokens after the node to retrieve.\n * @returns The created cursor.\n * @private\n */\nfunction createCursorWithPadding(tokens: Token[], comments: Token[], indexMap: { [key: number]: number }, startLoc: number, endLoc: number, beforeCount?: CountOptions, afterCount?: number): Cursor {\n    if (typeof beforeCount === \"undefined\" && typeof afterCount === \"undefined\") {\n        return new ForwardTokenCursor(tokens, comments, indexMap, startLoc, endLoc)\n    }\n    if (typeof beforeCount === \"number\" || typeof beforeCount === \"undefined\") {\n        return new PaddedTokenCursor(tokens, comments, indexMap, startLoc, endLoc, beforeCount || 0, afterCount || 0)\n    }\n    return createCursorWithCount(cursors.forward, tokens, comments, indexMap, startLoc, endLoc, beforeCount)\n}\n\n/**\n * Gets comment tokens that are adjacent to the current cursor position.\n * @param cursor - A cursor instance.\n * @returns An array of comment tokens adjacent to the current cursor position.\n * @private\n */\nfunction getAdjacentCommentTokensFromCursor(cursor: Cursor): Token[] {\n    const tokens: Token[] = []\n    let currentToken = cursor.getOneToken()\n\n    while (currentToken && isCommentToken(currentToken)) {\n        tokens.push(currentToken)\n        currentToken = cursor.getOneToken()\n    }\n\n    return tokens\n}\n\n//------------------------------------------------------------------------------\n// Exports\n//------------------------------------------------------------------------------\n\n/**\n * The token store.\n *\n * This class provides methods to get tokens by locations as fast as possible.\n * The methods are a part of public API, so we should be careful if it changes this class.\n *\n * People can get tokens in O(1) by the hash map which is mapping from the location of tokens/comments to tokens.\n * Also people can get a mix of tokens and comments in O(log k), the k is the number of comments.\n * Assuming that comments to be much fewer than tokens, this does not make hash map from token's locations to comments to reduce memory cost.\n * This uses binary-searching instead for comments.\n */\nexport default class TokenStore {\n    private _tokens: Token[]\n    private _comments: Token[]\n    private _indexMap: { [key: number]: number }\n\n    /**\n     * Initializes this token store.\n     * @param tokens - The array of tokens.\n     * @param comments - The array of comments.\n     */\n    constructor(tokens: Token[], comments: Token[]) {\n        this._tokens = tokens\n        this._comments = comments\n        this._indexMap = createIndexMap(tokens, comments)\n    }\n\n    //--------------------------------------------------------------------------\n    // Gets single token.\n    //--------------------------------------------------------------------------\n\n    /**\n     * Gets the token starting at the specified index.\n     * @param offset - Index of the start of the token's range.\n     * @param options - The option object.\n     * @returns The token starting at index, or null if no such token.\n     */\n    getTokenByRangeStart(offset: number, options?: { includeComments: boolean }): Token | null {\n        const includeComments = Boolean(options && options.includeComments)\n        const token = cursors.forward.createBaseCursor(\n            this._tokens,\n            this._comments,\n            this._indexMap,\n            offset,\n            -1,\n            includeComments\n        ).getOneToken()\n\n        if (token && token.range[0] === offset) {\n            return token\n        }\n        return null\n    }\n\n    /**\n     * Gets the first token of the given node.\n     * @param node - The AST node.\n     * @param options - The option object.\n     * @returns An object representing the token.\n     */\n    getFirstToken(node: HasLocation, options?: SkipOptions): Token | null {\n        return createCursorWithSkip(\n            cursors.forward,\n            this._tokens,\n            this._comments,\n            this._indexMap,\n            node.range[0],\n            node.range[1],\n            options\n        ).getOneToken()\n    }\n\n    /**\n     * Gets the last token of the given node.\n     * @param node - The AST node.\n     * @param options - The option object.\n     * @returns An object representing the token.\n     */\n    getLastToken(node: HasLocation, options?: SkipOptions): Token | null {\n        return createCursorWithSkip(\n            cursors.backward,\n            this._tokens,\n            this._comments,\n            this._indexMap,\n            node.range[0],\n            node.range[1],\n            options\n        ).getOneToken()\n    }\n\n    /**\n     * Gets the token that precedes a given node or token.\n     * @param node - The AST node or token.\n     * @param options - The option object.\n     * @returns An object representing the token.\n     */\n    getTokenBefore(node: HasLocation, options?: SkipOptions): Token | null {\n        return createCursorWithSkip(\n            cursors.backward,\n            this._tokens,\n            this._comments,\n            this._indexMap,\n            -1,\n            node.range[0],\n            options\n        ).getOneToken()\n    }\n\n    /**\n     * Gets the token that follows a given node or token.\n     * @param node - The AST node or token.\n     * @param options - The option object.\n     * @returns An object representing the token.\n     */\n    getTokenAfter(node: HasLocation, options?: SkipOptions): Token | null {\n        return createCursorWithSkip(\n            cursors.forward,\n            this._tokens,\n            this._comments,\n            this._indexMap,\n            node.range[1],\n            -1,\n            options\n        ).getOneToken()\n    }\n\n    /**\n     * Gets the first token between two non-overlapping nodes.\n     * @param left - Node before the desired token range.\n     * @param right - Node after the desired token range.\n     * @param options - The option object.\n     * @returns An object representing the token.\n     */\n    getFirstTokenBetween(left: HasLocation, right: HasLocation, options?: SkipOptions): Token | null {\n        return createCursorWithSkip(\n            cursors.forward,\n            this._tokens,\n            this._comments,\n            this._indexMap,\n            left.range[1],\n            right.range[0],\n            options\n        ).getOneToken()\n    }\n\n    /**\n     * Gets the last token between two non-overlapping nodes.\n     * @param left Node before the desired token range.\n     * @param right Node after the desired token range.\n     * @param options - The option object.\n     * @returns An object representing the token.\n     */\n    getLastTokenBetween(left: HasLocation, right: HasLocation, options?: SkipOptions): Token | null {\n        return createCursorWithSkip(\n            cursors.backward,\n            this._tokens,\n            this._comments,\n            this._indexMap,\n            left.range[1],\n            right.range[0],\n            options\n        ).getOneToken()\n    }\n\n    /**\n     * Gets the token that precedes a given node or token in the token stream.\n     * This is defined for backward compatibility. Use `includeComments` option instead.\n     * TODO: We have a plan to remove this in a future major version.\n     * @param node The AST node or token.\n     * @param skip A number of tokens to skip.\n     * @returns An object representing the token.\n     * @deprecated\n     */\n    getTokenOrCommentBefore(node: HasLocation, skip?: number): Token | null {\n        return this.getTokenBefore(node, {includeComments: true, skip})\n    }\n\n    /**\n     * Gets the token that follows a given node or token in the token stream.\n     * This is defined for backward compatibility. Use `includeComments` option instead.\n     * TODO: We have a plan to remove this in a future major version.\n     * @param node The AST node or token.\n     * @param skip A number of tokens to skip.\n     * @returns An object representing the token.\n     * @deprecated\n     */\n    getTokenOrCommentAfter(node: HasLocation, skip?: number): Token | null {\n        return this.getTokenAfter(node, {includeComments: true, skip})\n    }\n\n    //--------------------------------------------------------------------------\n    // Gets multiple tokens.\n    //--------------------------------------------------------------------------\n\n    /**\n     * Gets the first `count` tokens of the given node.\n     * @param node - The AST node.\n     * @param [options=0] - The option object. If this is a number then it's `options.count`. If this is a function then it's `options.filter`.\n     * @param [options.includeComments=false] - The flag to iterate comments as well.\n     * @param [options.filter=null] - The predicate function to choose tokens.\n     * @param [options.count=0] - The maximum count of tokens the cursor iterates.\n     * @returns Tokens.\n     */\n    getFirstTokens(node: HasLocation, options?: CountOptions): Token[] {\n        return createCursorWithCount(\n            cursors.forward,\n            this._tokens,\n            this._comments,\n            this._indexMap,\n            node.range[0],\n            node.range[1],\n            options\n        ).getAllTokens()\n    }\n\n    /**\n     * Gets the last `count` tokens of the given node.\n     * @param node - The AST node.\n     * @param [options=0] - The option object. Same options as getFirstTokens()\n     * @returns Tokens.\n     */\n    getLastTokens(node: HasLocation, options?: CountOptions) {\n        return createCursorWithCount(\n            cursors.backward,\n            this._tokens,\n            this._comments,\n            this._indexMap,\n            node.range[0],\n            node.range[1],\n            options\n        ).getAllTokens().reverse()\n    }\n\n    /**\n     * Gets the `count` tokens that precedes a given node or token.\n     * @param node - The AST node or token.\n     * @param [options=0] - The option object. Same options as getFirstTokens()\n     * @returns Tokens.\n     */\n    getTokensBefore(node: HasLocation, options?: CountOptions): Token[] {\n        return createCursorWithCount(\n            cursors.backward,\n            this._tokens,\n            this._comments,\n            this._indexMap,\n            -1,\n            node.range[0],\n            options\n        ).getAllTokens().reverse()\n    }\n\n    /**\n     * Gets the `count` tokens that follows a given node or token.\n     * @param node - The AST node or token.\n     * @param [options=0] - The option object. Same options as getFirstTokens()\n     * @returns Tokens.\n     */\n    getTokensAfter(node: HasLocation, options?: CountOptions): Token[] {\n        return createCursorWithCount(\n            cursors.forward,\n            this._tokens,\n            this._comments,\n            this._indexMap,\n            node.range[1],\n            -1,\n            options\n        ).getAllTokens()\n    }\n\n    /**\n     * Gets the first `count` tokens between two non-overlapping nodes.\n     * @param left - Node before the desired token range.\n     * @param right - Node after the desired token range.\n     * @param [options=0] - The option object. Same options as getFirstTokens()\n     * @returns Tokens between left and right.\n     */\n    getFirstTokensBetween(left: HasLocation, right: HasLocation, options?: CountOptions): Token[] {\n        return createCursorWithCount(\n            cursors.forward,\n            this._tokens,\n            this._comments,\n            this._indexMap,\n            left.range[1],\n            right.range[0],\n            options\n        ).getAllTokens()\n    }\n\n    /**\n     * Gets the last `count` tokens between two non-overlapping nodes.\n     * @param left Node before the desired token range.\n     * @param right Node after the desired token range.\n     * @param [options=0] - The option object. Same options as getFirstTokens()\n     * @returns Tokens between left and right.\n     */\n    getLastTokensBetween(left: HasLocation, right: HasLocation, options?: CountOptions): Token[] {\n        return createCursorWithCount(\n            cursors.backward,\n            this._tokens,\n            this._comments,\n            this._indexMap,\n            left.range[1],\n            right.range[0],\n            options\n        ).getAllTokens().reverse()\n    }\n\n    /**\n     * Gets all tokens that are related to the given node.\n     * @param node - The AST node.\n     * @param beforeCount - The number of tokens before the node to retrieve.\n     * @param afterCount - The number of tokens after the node to retrieve.\n     * @returns Array of objects representing tokens.\n     */\n    getTokens(node: HasLocation, beforeCount?: CountOptions, afterCount?: number): Token[] {\n        return createCursorWithPadding(\n            this._tokens,\n            this._comments,\n            this._indexMap,\n            node.range[0],\n            node.range[1],\n            beforeCount,\n            afterCount\n        ).getAllTokens()\n    }\n\n    /**\n     * Gets all of the tokens between two non-overlapping nodes.\n     * @param left Node before the desired token range.\n     * @param right Node after the desired token range.\n     * @param padding Number of extra tokens on either side of center.\n     * @returns Tokens between left and right.\n     */\n    getTokensBetween(left: HasLocation, right: HasLocation, padding?: CountOptions): Token[] {\n        return createCursorWithPadding(\n            this._tokens,\n            this._comments,\n            this._indexMap,\n            left.range[1],\n            right.range[0],\n            padding,\n            typeof padding === \"number\" ? padding : undefined\n        ).getAllTokens()\n    }\n\n    //--------------------------------------------------------------------------\n    // Others.\n    //--------------------------------------------------------------------------\n\n    /**\n     * Checks whether any comments exist or not between the given 2 nodes.\n     *\n     * @param left - The node to check.\n     * @param right - The node to check.\n     * @returns `true` if one or more comments exist.\n     */\n    commentsExistBetween(left: HasLocation, right: HasLocation): boolean {\n        const index = search(this._comments, left.range[1])\n\n        return (\n            index < this._comments.length &&\n            this._comments[index].range[1] <= right.range[0]\n        )\n    }\n\n    /**\n     * Gets all comment tokens directly before the given node or token.\n     * @param nodeOrToken The AST node or token to check for adjacent comment tokens.\n     * @returns An array of comments in occurrence order.\n     */\n    getCommentsBefore(nodeOrToken: HasLocation): Token[] {\n        const cursor = createCursorWithCount(\n            cursors.backward,\n            this._tokens,\n            this._comments,\n            this._indexMap,\n            -1,\n            nodeOrToken.range[0],\n            {includeComments: true}\n        )\n\n        return getAdjacentCommentTokensFromCursor(cursor).reverse()\n    }\n\n    /**\n     * Gets all comment tokens directly after the given node or token.\n     * @param nodeOrToken The AST node or token to check for adjacent comment tokens.\n     * @returns An array of comments in occurrence order.\n     */\n    getCommentsAfter(nodeOrToken: HasLocation): Token[] {\n        const cursor = createCursorWithCount(\n            cursors.forward,\n            this._tokens,\n            this._comments,\n            this._indexMap,\n            nodeOrToken.range[1],\n            -1,\n            {includeComments: true}\n        )\n\n        return getAdjacentCommentTokensFromCursor(cursor)\n    }\n\n    /**\n     * Gets all comment tokens inside the given node.\n     * @param node The AST node to get the comments for.\n     * @returns An array of comments in occurrence order.\n     */\n    getCommentsInside(node: HasLocation): Token[] {\n        return this.getTokens(node, {\n            includeComments: true,\n            filter: isCommentToken,\n        })\n    }\n}\n", "import type { Rule, SourceCode } from \"eslint\"\nimport type { ScopeManager, Scope } from \"eslint-scope\"\nimport type {\n    ESLintExtendedProgram,\n    Node,\n    OffsetRange,\n    VDocumentFragment,\n    VElement,\n    VExpressionContainer,\n    VText,\n} from \"../../ast\"\nimport { getFallbackKeys, ParseError } from \"../../ast\"\nimport { getEslintScope } from \"../../common/eslint-scope\"\nimport { getEcmaVersionIfUseEspree } from \"../../common/espree\"\nimport { fixErrorLocation, fixLocations } from \"../../common/fix-locations\"\nimport type { LocationCalculatorForHtml } from \"../../common/location-calculator\"\nimport type { ParserOptions } from \"../../common/parser-options\"\nimport { DEFAULT_ECMA_VERSION } from \"../../script-setup/parser-options\"\n\nexport interface ESLintCustomBlockParser {\n    parse(code: string, options: any): any\n    parseForESLint?(code: string, options: any): any\n}\n\nexport type CustomBlockContext = {\n    getSourceCode(): SourceCode\n    parserServices: any\n    getAncestors(): any[]\n    getDeclaredVariables(node: any): any[]\n    getScope(): any\n    markVariableAsUsed(name: string): boolean\n\n    // Same as the original context.\n    id: string\n    options: any[]\n    settings: { [name: string]: any }\n    parserPath: string\n    parserOptions: any\n    getFilename(): string\n    report(descriptor: Rule.ReportDescriptor): void\n}\n\n/**\n * Checks whether the given node is VElement.\n */\nfunction isVElement(\n    node: VElement | VExpressionContainer | VText,\n): node is VElement {\n    return node.type === \"VElement\"\n}\n\n/**\n * Get the all custom blocks from given document\n * @param document\n */\nexport function getCustomBlocks(\n    document: VDocumentFragment | null,\n): VElement[] {\n    return document\n        ? document.children\n              .filter(isVElement)\n              .filter(\n                  (block) =>\n                      block.name !== \"script\" &&\n                      block.name !== \"template\" &&\n                      block.name !== \"style\",\n              )\n        : []\n}\n\n/**\n * Parse the source code of the given custom block element.\n * @param node The custom block element to parse.\n * @param parser The custom parser.\n * @param globalLocationCalculator The location calculator for fixLocations.\n * @param parserOptions The parser options.\n * @returns The result of parsing.\n */\nexport function parseCustomBlockElement(\n    node: VElement,\n    parser: ESLintCustomBlockParser,\n    globalLocationCalculator: LocationCalculatorForHtml,\n    parserOptions: ParserOptions,\n): ESLintExtendedProgram & { error?: ParseError | Error } {\n    const text = node.children[0]\n    const { code, range, loc } =\n        text != null && text.type === \"VText\"\n            ? {\n                  code: text.value,\n                  range: text.range,\n                  loc: text.loc,\n              }\n            : {\n                  code: \"\",\n                  range: [\n                      node.startTag.range[1],\n                      node.endTag!.range[0],\n                  ] as OffsetRange,\n                  loc: {\n                      start: node.startTag.loc.end,\n                      end: node.endTag!.loc.start,\n                  },\n              }\n    const locationCalculator = globalLocationCalculator.getSubCalculatorAfter(\n        range[0],\n    )\n    try {\n        return parseCustomBlockFragment(\n            code,\n            parser,\n            locationCalculator,\n            parserOptions,\n        )\n    } catch (e) {\n        return {\n            error: e,\n            ast: {\n                type: \"Program\",\n                sourceType: \"module\",\n                loc: {\n                    start: {\n                        ...loc.start,\n                    },\n                    end: {\n                        ...loc.end,\n                    },\n                },\n                range: [...range],\n                body: [],\n                tokens: [],\n                comments: [],\n            },\n        }\n    }\n}\n\n/**\n * Parse the given source code.\n *\n * @param code The source code to parse.\n * @param parser The custom parser.\n * @param locationCalculator The location calculator for fixLocations.\n * @param parserOptions The parser options.\n * @returns The result of parsing.\n */\nfunction parseCustomBlockFragment(\n    code: string,\n    parser: ESLintCustomBlockParser,\n    locationCalculator: LocationCalculatorForHtml,\n    parserOptions: ParserOptions,\n): ESLintExtendedProgram {\n    try {\n        const result = parseBlock(code, parser, {\n            ecmaVersion: DEFAULT_ECMA_VERSION,\n            loc: true,\n            range: true,\n            raw: true,\n            tokens: true,\n            comment: true,\n            eslintVisitorKeys: true,\n            eslintScopeManager: true,\n            ...parserOptions,\n        })\n        fixLocations(result, locationCalculator)\n        return result\n    } catch (err) {\n        const perr = ParseError.normalize(err)\n        if (perr) {\n            fixErrorLocation(perr, locationCalculator)\n            throw perr\n        }\n        throw err\n    }\n}\n\nfunction parseBlock(\n    code: string,\n    parser: ESLintCustomBlockParser,\n    parserOptions: any,\n): any {\n    const result: any =\n        typeof parser.parseForESLint === \"function\"\n            ? parser.parseForESLint(code, parserOptions)\n            : parser.parse(code, parserOptions)\n\n    if (result.ast != null) {\n        return result\n    }\n    return { ast: result }\n}\n\n/**\n * Create shared context.\n *\n * @param text The source code of SFC.\n * @param customBlock The custom block node.\n * @param parsedResult The parse result data\n * @param parserOptions The parser options.\n */\nexport function createCustomBlockSharedContext({\n    text,\n    customBlock,\n    parsedResult,\n    globalLocationCalculator,\n    parserOptions,\n}: {\n    text: string\n    customBlock: VElement\n    parsedResult: ESLintExtendedProgram & { error?: ParseError | Error }\n    globalLocationCalculator: LocationCalculatorForHtml\n    parserOptions: any\n}) {\n    let sourceCode: SourceCode\n    let scopeManager: ScopeManager\n    let currentNode: any\n    return {\n        serCurrentNode(node: any) {\n            currentNode = node\n        },\n        context: {\n            getAncestors: () => getAncestors(currentNode),\n\n            getDeclaredVariables: (...args: any[]) =>\n                // @ts-expect-error\n                getScopeManager().getDeclaredVariables(...args),\n            getScope: () => getScope(getScopeManager(), currentNode),\n            markVariableAsUsed: (name: string) =>\n                markVariableAsUsed(\n                    getScopeManager(),\n                    currentNode,\n                    parserOptions,\n                    name,\n                ),\n            parserServices: {\n                customBlock,\n                parseCustomBlockElement(\n                    parser: ESLintCustomBlockParser,\n                    options: any,\n                ) {\n                    return parseCustomBlockElement(\n                        customBlock,\n                        parser,\n                        globalLocationCalculator,\n                        { ...parserOptions, ...options },\n                    )\n                },\n                ...(parsedResult.services || {}),\n                ...(parsedResult.error\n                    ? { parseError: parsedResult.error }\n                    : {}),\n            },\n            getSourceCode,\n        },\n    }\n\n    function getSourceCode() {\n        return (\n            sourceCode ||\n            // eslint-disable-next-line @mysticatea/ts/no-require-imports\n            (sourceCode = new (require(\"eslint\").SourceCode)({\n                text,\n                ast: parsedResult.ast,\n                parserServices: parsedResult.services,\n                scopeManager: getScopeManager(),\n                visitorKeys: parsedResult.visitorKeys,\n            }))\n        )\n    }\n\n    function getScopeManager() {\n        if (parsedResult.scopeManager || scopeManager) {\n            return parsedResult.scopeManager || scopeManager\n        }\n\n        const ecmaVersion = getEcmaVersionIfUseEspree(parserOptions) || 2022\n        const ecmaFeatures = parserOptions.ecmaFeatures || {}\n        const sourceType = parserOptions.sourceType || \"script\"\n        scopeManager = getEslintScope().analyze(parsedResult.ast, {\n            ignoreEval: true,\n            nodejsScope: false,\n            impliedStrict: ecmaFeatures.impliedStrict,\n            ecmaVersion,\n            sourceType,\n            fallback: getFallbackKeys,\n        })\n        return scopeManager\n    }\n}\n\n/* The following source code is copied from `eslint/lib/linter/linter.js` */\n\n/**\n * Gets all the ancestors of a given node\n * @param {ASTNode} node The node\n * @returns {ASTNode[]} All the ancestor nodes in the AST, not including the provided node, starting\n * from the root node and going inwards to the parent node.\n */\nfunction getAncestors(node: Node) {\n    const ancestorsStartingAtParent = []\n\n    for (let ancestor = node.parent; ancestor; ancestor = ancestor.parent) {\n        ancestorsStartingAtParent.push(ancestor)\n    }\n\n    return ancestorsStartingAtParent.reverse()\n}\n\n/**\n * Gets the scope for the current node\n * @param {ScopeManager} scopeManager The scope manager for this AST\n * @param {ASTNode} currentNode The node to get the scope of\n * @returns {eslint-scope.Scope} The scope information for this node\n */\nfunction getScope(scopeManager: ScopeManager, currentNode: Node) {\n    // On Program node, get the outermost scope to avoid return Node.js special function scope or ES modules scope.\n    const inner = currentNode.type !== \"Program\"\n\n    for (\n        let node: Node | null = currentNode;\n        node;\n        node = node.parent || null\n    ) {\n        const scope = scopeManager.acquire(node as any, inner)\n\n        if (scope) {\n            if (scope.type === \"function-expression-name\") {\n                return scope.childScopes[0]\n            }\n            return scope\n        }\n    }\n\n    return scopeManager.scopes[0]\n}\n\n/**\n * Marks a variable as used in the current scope\n * @param {ScopeManager} scopeManager The scope manager for this AST. The scope may be mutated by this function.\n * @param {ASTNode} currentNode The node currently being traversed\n * @param {Object} parserOptions The options used to parse this text\n * @param {string} name The name of the variable that should be marked as used.\n * @returns {boolean} True if the variable was found and marked as used, false if not.\n */\nfunction markVariableAsUsed(\n    scopeManager: ScopeManager,\n    currentNode: Node,\n    parserOptions: any,\n    name: string,\n) {\n    const hasGlobalReturn =\n        parserOptions.ecmaFeatures && parserOptions.ecmaFeatures.globalReturn\n    const specialScope =\n        hasGlobalReturn || parserOptions.sourceType === \"module\"\n    const currentScope = getScope(scopeManager, currentNode)\n\n    // Special Node.js scope means we need to start one level deeper\n    const initialScope =\n        currentScope.type === \"global\" && specialScope\n            ? currentScope.childScopes[0]\n            : currentScope\n\n    for (let scope: Scope | null = initialScope; scope; scope = scope.upper) {\n        const variable = scope.variables.find(\n            (scopeVar) => scopeVar.name === name,\n        )\n\n        if (variable) {\n            // @ts-expect-error\n            variable.eslintUsed = true\n            return true\n        }\n    }\n\n    return false\n}\n", "/**\n * @author Toru Nagashima <https://github.com/mysticatea>\n * @copyright 2017 Toru Nagashima. All rights reserved.\n * See LICENSE file in root directory for full license.\n */\nimport type { Rule } from \"eslint\"\nimport EventEmitter from \"events\"\nimport NodeEventGenerator from \"./external/node-event-generator\"\nimport TokenStore from \"./external/token-store\"\nimport type {\n    ESLintProgram,\n    VElement,\n    VDocumentFragment,\n    VAttribute,\n} from \"./ast\"\nimport { getFallbackKeys, KEYS, traverseNodes } from \"./ast/traverse\"\nimport type { LocationCalculatorForHtml } from \"./common/location-calculator\"\nimport type {\n    CustomBlockContext,\n    ESLintCustomBlockParser,\n} from \"./sfc/custom-block\"\nimport {\n    createCustomBlockSharedContext,\n    getCustomBlocks,\n    parseCustomBlockElement,\n} from \"./sfc/custom-block\"\nimport type { ParserOptions } from \"./common/parser-options\"\nimport { isSFCFile } from \"./common/parser-options\"\nimport { getLang } from \"./common/ast-utils\"\n\n//------------------------------------------------------------------------------\n// Helpers\n//------------------------------------------------------------------------------\n\ntype CustomBlockVisitorFactory = (context: CustomBlockContext) =>\n    | {\n          [key: string]: (...args: any) => void\n      }\n    | null\n    | undefined\n\n//------------------------------------------------------------------------------\n// Exports\n//------------------------------------------------------------------------------\n\nexport interface ParserServices {\n    /**\n     * Define handlers to traverse the template body.\n     * @param templateBodyVisitor The template body handlers.\n     * @param scriptVisitor The script handlers. This is optional.\n     * @param options The options. This is optional.\n     */\n    defineTemplateBodyVisitor(\n        templateBodyVisitor: { [key: string]: (...args: any) => void },\n        scriptVisitor?: { [key: string]: (...args: any) => void },\n        options?: { templateBodyTriggerSelector: \"Program\" | \"Program:exit\" },\n    ): object\n\n    /**\n     * Define handlers to traverse the document.\n     * @param documentVisitor The document handlers.\n     * @param options The options. This is optional.\n     */\n    defineDocumentVisitor(\n        documentVisitor: { [key: string]: (...args: any) => void },\n        options?: { triggerSelector: \"Program\" | \"Program:exit\" },\n    ): object\n\n    /**\n     * Define handlers to traverse custom blocks.\n     * @param context The rule context.\n     * @param parser The custom parser.\n     * @param rule The custom block rule definition\n     * @param scriptVisitor The script handlers. This is optional.\n     */\n    defineCustomBlocksVisitor(\n        context: Rule.RuleContext,\n        parser: ESLintCustomBlockParser,\n        rule: {\n            target:\n                | string\n                | string[]\n                | ((lang: string | null, customBlock: VElement) => boolean)\n            create: CustomBlockVisitorFactory\n        },\n        scriptVisitor: { [key: string]: (...args: any) => void },\n    ): { [key: string]: (...args: any) => void }\n\n    /**\n     * Get the token store of the template body.\n     * @returns The token store of template body.\n     */\n    getTemplateBodyTokenStore(): TokenStore\n\n    /**\n     * Get the root document fragment.\n     * @returns The root document fragment.\n     */\n    getDocumentFragment(): VDocumentFragment | null\n}\n\n/**\n * Define the parser service\n * @param rootAST\n */\nexport function define(\n    sourceText: string,\n    rootAST: ESLintProgram,\n    document: VDocumentFragment | null,\n    globalLocationCalculator: LocationCalculatorForHtml | null,\n    { parserOptions }: { parserOptions: ParserOptions },\n): ParserServices {\n    const templateBodyEmitters = new Map<string, EventEmitter>()\n    const stores = new WeakMap<object, TokenStore>()\n\n    const documentEmitters = new Map<string, EventEmitter>()\n\n    const customBlocksEmitters = new Map<\n        | ESLintCustomBlockParser[\"parseForESLint\"]\n        | ESLintCustomBlockParser[\"parse\"],\n        {\n            context: Rule.RuleContext\n            test: (lang: string | null, customBlock: VElement) => boolean\n            create: CustomBlockVisitorFactory\n        }[]\n    >()\n\n    const isSFC = isSFCFile(parserOptions)\n\n    return {\n        /**\n         * Define handlers to traverse the template body.\n         * @param templateBodyVisitor The template body handlers.\n         * @param scriptVisitor The script handlers. This is optional.\n         */\n        defineTemplateBodyVisitor(\n            templateBodyVisitor: { [key: string]: (...args: any) => void },\n            scriptVisitor?: { [key: string]: (...args: any) => void },\n            options?: {\n                templateBodyTriggerSelector: \"Program\" | \"Program:exit\"\n            },\n        ): object {\n            if (scriptVisitor == null) {\n                scriptVisitor = {} //eslint-disable-line no-param-reassign\n            }\n            if (rootAST.templateBody == null) {\n                return scriptVisitor\n            }\n            const templateBodyTriggerSelector =\n                options?.templateBodyTriggerSelector ?? \"Program:exit\"\n\n            let emitter = templateBodyEmitters.get(templateBodyTriggerSelector)\n\n            // If this is the first time, initialize the intermediate event emitter.\n            if (emitter == null) {\n                emitter = new EventEmitter()\n                emitter.setMaxListeners(0)\n                templateBodyEmitters.set(templateBodyTriggerSelector, emitter)\n\n                const programExitHandler =\n                    scriptVisitor[templateBodyTriggerSelector]\n                scriptVisitor[templateBodyTriggerSelector] = (node) => {\n                    try {\n                        if (typeof programExitHandler === \"function\") {\n                            programExitHandler(node)\n                        }\n\n                        // Traverse template body.\n                        const generator = new NodeEventGenerator(emitter!, {\n                            visitorKeys: KEYS,\n                            fallback: getFallbackKeys,\n                        })\n                        traverseNodes(\n                            rootAST.templateBody as VElement,\n                            generator,\n                        )\n                    } finally {\n                        // eslint-disable-next-line @mysticatea/ts/ban-ts-ignore\n                        // @ts-ignore\n                        scriptVisitor[templateBodyTriggerSelector] =\n                            programExitHandler\n                        templateBodyEmitters.delete(templateBodyTriggerSelector)\n                    }\n                }\n            }\n\n            // Register handlers into the intermediate event emitter.\n            for (const selector of Object.keys(templateBodyVisitor)) {\n                emitter.on(selector, templateBodyVisitor[selector])\n            }\n\n            return scriptVisitor\n        },\n\n        /**\n         * Define handlers to traverse the document.\n         * @param documentVisitor The document handlers.\n         * @param options The options. This is optional.\n         */\n        defineDocumentVisitor(\n            documentVisitor: { [key: string]: (...args: any) => void },\n            options?: { triggerSelector: \"Program\" | \"Program:exit\" },\n        ): object {\n            const scriptVisitor: { [key: string]: (...args: any) => void } = {}\n            if (!document) {\n                return scriptVisitor\n            }\n\n            const documentTriggerSelector =\n                options?.triggerSelector ?? \"Program:exit\"\n\n            let emitter = documentEmitters.get(documentTriggerSelector)\n\n            // If this is the first time, initialize the intermediate event emitter.\n            if (emitter == null) {\n                emitter = new EventEmitter()\n                emitter.setMaxListeners(0)\n                documentEmitters.set(documentTriggerSelector, emitter)\n\n                const programExitHandler =\n                    scriptVisitor[documentTriggerSelector]\n                scriptVisitor[documentTriggerSelector] = (node) => {\n                    try {\n                        if (typeof programExitHandler === \"function\") {\n                            programExitHandler(node)\n                        }\n\n                        // Traverse document.\n                        const generator = new NodeEventGenerator(emitter!, {\n                            visitorKeys: KEYS,\n                            fallback: getFallbackKeys,\n                        })\n                        traverseNodes(document, generator)\n                    } finally {\n                        // eslint-disable-next-line @mysticatea/ts/ban-ts-ignore\n                        // @ts-ignore\n                        scriptVisitor[documentTriggerSelector] =\n                            programExitHandler\n                        documentEmitters.delete(documentTriggerSelector)\n                    }\n                }\n            }\n\n            // Register handlers into the intermediate event emitter.\n            for (const selector of Object.keys(documentVisitor)) {\n                emitter.on(selector, documentVisitor[selector])\n            }\n\n            return scriptVisitor\n        },\n\n        /**\n         * Define handlers to traverse custom blocks.\n         * @param context The rule context.\n         * @param parser The custom parser.\n         * @param rule The custom block rule definition\n         * @param scriptVisitor The script handlers. This is optional.\n         */\n        defineCustomBlocksVisitor(\n            context: Rule.RuleContext,\n            parser: ESLintCustomBlockParser,\n            rule: {\n                target:\n                    | string\n                    | string[]\n                    | ((lang: string | null, customBlock: VElement) => boolean)\n                create: CustomBlockVisitorFactory\n            },\n            scriptVisitor: { [key: string]: (...args: any) => void },\n        ): { [key: string]: (...args: any) => void } {\n            if (scriptVisitor == null) {\n                scriptVisitor = {} //eslint-disable-line no-param-reassign\n            }\n            if (!isSFC) {\n                return scriptVisitor\n            }\n            parserOptions = { ...parserOptions } //eslint-disable-line no-param-reassign\n            const customBlocks = getCustomBlocks(document).filter(\n                (block) =>\n                    block.endTag &&\n                    !block.startTag.attributes.some(\n                        (attr): attr is VAttribute =>\n                            !attr.directive && attr.key.name === \"src\",\n                    ),\n            )\n            if (!customBlocks.length || globalLocationCalculator == null) {\n                return {}\n            }\n            const key = parser.parseForESLint ?? parser.parse\n            let factories = customBlocksEmitters.get(key)\n\n            // If this is the first time, initialize the intermediate event emitter.\n            if (factories == null) {\n                factories = []\n                customBlocksEmitters.set(key, factories)\n                const visitorFactories = factories\n\n                const programExitHandler = scriptVisitor[\"Program:exit\"]\n                scriptVisitor[\"Program:exit\"] = (node) => {\n                    try {\n                        if (typeof programExitHandler === \"function\") {\n                            programExitHandler(node)\n                        }\n                        for (const customBlock of customBlocks) {\n                            const lang = getLang(customBlock)\n\n                            const activeVisitorFactories =\n                                visitorFactories.filter((f) =>\n                                    f.test(lang, customBlock),\n                                )\n                            if (!activeVisitorFactories.length) {\n                                continue\n                            }\n\n                            const parsedResult = parseCustomBlockElement(\n                                customBlock,\n                                parser,\n                                globalLocationCalculator,\n                                parserOptions,\n                            )\n\n                            const {\n                                serCurrentNode,\n                                context: customBlockContext,\n                            } = createCustomBlockSharedContext({\n                                text: sourceText,\n                                customBlock,\n                                parsedResult,\n                                globalLocationCalculator,\n                                parserOptions,\n                            })\n\n                            const emitter = new EventEmitter()\n                            emitter.setMaxListeners(0)\n\n                            for (const factory of activeVisitorFactories) {\n                                const ctx = {\n                                    ...customBlockContext,\n                                }\n                                // eslint-disable-next-line @mysticatea/ts/ban-ts-ignore\n                                // @ts-ignore -- custom context\n                                ctx.__proto__ = factory.context\n\n                                const visitor = factory.create(\n                                    ctx as CustomBlockContext,\n                                )\n                                // Register handlers into the intermediate event emitter.\n                                for (const selector of Object.keys(\n                                    visitor || {},\n                                )) {\n                                    emitter.on(selector, visitor![selector])\n                                }\n                            }\n\n                            // Traverse custom block.\n                            const generator = new NodeEventGenerator(emitter, {\n                                visitorKeys: parsedResult.visitorKeys,\n                                fallback: getFallbackKeys,\n                            })\n                            traverseNodes(parsedResult.ast, {\n                                visitorKeys: parsedResult.visitorKeys,\n                                enterNode(n) {\n                                    serCurrentNode(n)\n                                    generator.enterNode(n)\n                                },\n                                leaveNode(n) {\n                                    serCurrentNode(n)\n                                    generator.leaveNode(n)\n                                },\n                            })\n                        }\n                    } finally {\n                        // eslint-disable-next-line @mysticatea/ts/ban-ts-ignore\n                        // @ts-ignore\n                        scriptVisitor[\"Program:exit\"] = programExitHandler\n                        customBlocksEmitters.delete(key)\n                    }\n                }\n            }\n\n            const target = rule.target\n            const test =\n                typeof target === \"function\"\n                    ? target\n                    : Array.isArray(target)\n                    ? (lang: string | null) =>\n                          Boolean(lang && target.includes(lang))\n                    : (lang: string | null) => target === lang\n            factories.push({\n                context,\n                test,\n                create: rule.create,\n            })\n\n            return scriptVisitor\n        },\n\n        /**\n         * Get the token store of the template body.\n         * @returns The token store of template body.\n         */\n        getTemplateBodyTokenStore(): TokenStore {\n            const key = document || stores\n            let store = stores.get(key)\n\n            if (!store) {\n                store =\n                    document != null\n                        ? new TokenStore(document.tokens, document.comments)\n                        : new TokenStore([], [])\n                stores.set(key, store)\n            }\n\n            return store\n        },\n\n        /**\n         * Get the root document fragment.\n         * @returns The root document fragment.\n         */\n        getDocumentFragment(): VDocumentFragment | null {\n            return document\n        },\n    }\n}\n", "/**\n * @author Yosuke Ota <https://github.com/ota-meshi>\n * See LICENSE file in root directory for full license.\n */\nimport type { ScopeManager, Scope } from \"eslint-scope\"\nimport type {\n    ESLintBlockStatement,\n    ESLintExportSpecifier,\n    ESLintExtendedProgram,\n    ESLintIdentifier,\n    ESLintModuleDeclaration,\n    ESLintNode,\n    ESLintProgram,\n    ESLintStatement,\n    Token,\n    VElement,\n} from \"../ast\"\nimport { ParseError, traverseNodes } from \"../ast\"\nimport {\n    fixErrorLocation,\n    fixLocation,\n    fixLocations,\n    fixNodeLocations,\n} from \"../common/fix-locations\"\nimport type { LinesAndColumns } from \"../common/lines-and-columns\"\nimport type { LocationCalculator } from \"../common/location-calculator\"\nimport type { ParserOptions } from \"../common/parser-options\"\nimport { parseScript as parseScriptBase, parseScriptFragment } from \"../script\"\nimport { getScriptSetupParserOptions } from \"./parser-options\"\n\ntype RemapBlock = {\n    range: [number, number]\n    offset: number\n}\n\n/**\n * `parseScriptSetupElements` rewrites the source code so that it can parse\n * the combination of `<script>` and `<script setup>`, and parses it source code with JavaScript parser.\n * This class holds the information to restore the AST and token locations parsed in the rewritten source code.\n */\nclass CodeBlocks {\n    public code: string\n    // The location information for remapping.\n    public remapBlocks: RemapBlock[] = []\n    // The list of extra punctuation locations added to split the statement.\n    public splitPunctuators: number[] = []\n\n    public constructor() {\n        this.code = \"\"\n    }\n    public get length() {\n        return this.code.length\n    }\n    public append(codeLet: string, originalOffset: number) {\n        const rangeStart = this.code.length\n        this.code += codeLet.trimRight()\n        this.remapBlocks.push({\n            range: [rangeStart, this.code.length],\n            offset: originalOffset - rangeStart,\n        })\n    }\n    public appendSplitPunctuators(punctuator: string) {\n        this.splitPunctuators.push(this.code.length, this.code.length + 1)\n        this.code += `\\n${punctuator}\\n`\n    }\n    public appendCodeBlocks(codeBlocks: CodeBlocks) {\n        const start = this.code.length\n        this.code += codeBlocks.code\n        this.remapBlocks.push(\n            ...codeBlocks.remapBlocks.map(\n                (b): RemapBlock => ({\n                    range: [b.range[0] + start, b.range[1] + start],\n                    offset: b.offset - start,\n                }),\n            ),\n        )\n        this.splitPunctuators.push(\n            ...codeBlocks.splitPunctuators.map((s) => s + start),\n        )\n    }\n}\n\ntype RestoreASTCallback = (node: ESLintStatement) => {\n    statement: ESLintStatement | ESLintModuleDeclaration\n    tokens: Token[]\n} | null\n/**\n * Some named exports need to be replaced with a different syntax to successfully parse\n * the combination of `<script>` and `<script setup>`.\n * e.g. `export {a,b}` -> `({a,b});`, `export let a` -> `let a`\n * This class holds the callbacks to restore the rewritten syntax AST back to the original `export` AST.\n */\nclass RestoreASTCallbacks {\n    private callbacks: {\n        range: [number, number]\n        callback: RestoreASTCallback\n    }[] = []\n    public addCallback(\n        originalOffsetStart: number,\n        range: [number, number],\n        callback: RestoreASTCallback,\n    ) {\n        this.callbacks.push({\n            range: [\n                originalOffsetStart + range[0],\n                originalOffsetStart + range[1],\n            ],\n            callback,\n        })\n    }\n    public restore(\n        program: ESLintProgram,\n        scriptSetupStatements: ESLintStatement[],\n        linesAndColumns: LinesAndColumns,\n    ) {\n        if (this.callbacks.length === 0) {\n            return\n        }\n        const callbacks = new Set(this.callbacks)\n        for (const statement of scriptSetupStatements) {\n            for (const cb of callbacks) {\n                if (\n                    cb.range[0] <= statement.range[0] &&\n                    statement.range[1] <= cb.range[1]\n                ) {\n                    const restored = cb.callback(statement)\n                    if (restored) {\n                        const removeIndex = program.body.indexOf(statement)\n                        if (removeIndex >= 0) {\n                            program.body.splice(removeIndex, 1)\n                            program.body.push(restored.statement)\n                            program.tokens!.push(...restored.tokens)\n                            restored.statement.parent = program\n                            callbacks.delete(cb)\n                            break\n                        }\n                    }\n                }\n            }\n        }\n        if (callbacks.size) {\n            const [cb] = callbacks\n            const loc = linesAndColumns.getLocFromIndex(cb.range[0])\n            throw new ParseError(\n                \"Could not parse <script setup>. Failed to restore ExportNamedDeclaration.\",\n                undefined,\n                cb.range[0],\n                loc.line,\n                loc.column,\n            )\n        }\n    }\n}\n\ntype ScriptSetupCodeBlocks = {\n    codeBlocks: CodeBlocks\n    // The location of the code of the statements in `<script setup>`.\n    scriptSetupBlockRange: [number, number]\n    // Used to restore ExportNamedDeclaration.\n    restoreASTCallbacks: RestoreASTCallbacks\n}\ntype ScriptSetupModuleCodeBlocks =\n    | ScriptSetupCodeBlocks\n    | {\n          codeBlocks: CodeBlocks\n          scriptSetupBlockRange?: undefined\n          restoreASTCallbacks?: undefined\n      }\n\nfunction parseScript(\n    code: string,\n    parserOptions: ParserOptions,\n    locationCalculator: LocationCalculator,\n) {\n    try {\n        return parseScriptBase(code, parserOptions)\n    } catch (err) {\n        const perr = ParseError.normalize(err)\n        if (perr) {\n            // console.log(code)\n            fixErrorLocation(perr, locationCalculator)\n            throw perr\n        }\n        throw err\n    }\n}\n\n/**\n * Parse the source code of the given `<script setup>` and `<script>` elements.\n * @param scriptSetupElement The `<script setup>` element to parse.\n * @param nodes The `<script>` elements to parse.\n * @param code The source code of SFC.\n * @param linesAndColumns The lines and columns location calculator.\n * @param parserOptions The parser options.\n * @returns The result of parsing.\n */\nexport function parseScriptSetupElements(\n    scriptSetupElement: VElement,\n    scriptElement: VElement,\n    code: string,\n    linesAndColumns: LinesAndColumns,\n    originalParserOptions: ParserOptions,\n): ESLintExtendedProgram {\n    const parserOptions: ParserOptions = getScriptSetupParserOptions(\n        originalParserOptions,\n    )\n    const scriptSetupModuleCodeBlocks = getScriptSetupModuleCodeBlocks(\n        scriptSetupElement,\n        scriptElement,\n        code,\n        linesAndColumns,\n        parserOptions,\n    )\n    if (!scriptSetupModuleCodeBlocks) {\n        return parseScriptFragment(\n            \"\",\n            simpleOffsetLocationCalculator(\n                scriptSetupElement.startTag.range[1],\n                linesAndColumns,\n            ),\n            parserOptions,\n        )\n    }\n\n    const locationCalculator: LocationCalculator = {\n        getFixOffset(offset, kind) {\n            const test: (block: RemapBlock) => boolean =\n                kind === \"start\"\n                    ? (block) => offset < block.range[1]\n                    : (block) => offset <= block.range[1]\n\n            for (const block of scriptSetupModuleCodeBlocks.codeBlocks\n                .remapBlocks) {\n                if (test(block)) {\n                    return block.offset\n                }\n            }\n            return offset\n        },\n        getLocFromIndex: linesAndColumns.getLocFromIndex.bind(linesAndColumns),\n    }\n\n    const result = parseScript(\n        scriptSetupModuleCodeBlocks.codeBlocks.code,\n        parserOptions,\n        locationCalculator,\n    )\n\n    /* Remap ASTs */\n    const scriptSetupStatements = remapAST(result, scriptSetupModuleCodeBlocks)\n\n    /* Remap locations */\n    remapLocationAndTokens(\n        result,\n        scriptSetupModuleCodeBlocks,\n        locationCalculator,\n    )\n\n    if (scriptSetupModuleCodeBlocks.restoreASTCallbacks) {\n        scriptSetupModuleCodeBlocks.restoreASTCallbacks.restore(\n            result.ast,\n            scriptSetupStatements,\n            linesAndColumns,\n        )\n    }\n\n    // Adjust AST and tokens\n    if (result.ast.tokens != null) {\n        for (const node of [scriptSetupElement, scriptElement]) {\n            const startTag = node.startTag\n            const endTag = node.endTag\n\n            result.ast.tokens.unshift({\n                type: \"Punctuator\",\n                range: startTag.range,\n                loc: startTag.loc,\n                value: \"<script>\",\n            })\n            if (endTag != null) {\n                result.ast.tokens.push({\n                    type: \"Punctuator\",\n                    range: endTag.range,\n                    loc: endTag.loc,\n                    value: \"</script>\",\n                })\n            }\n        }\n        result.ast.tokens.sort((a, b) => a.range[0] - b.range[0])\n    }\n    result.ast.body.sort((a, b) => a.range[0] - b.range[0])\n\n    const programEndOffset = result.ast.body.reduce(\n        (end, node) => Math.max(end, node.range[1]),\n        0,\n    )\n    result.ast.range[1] = programEndOffset\n    result.ast.loc.end = locationCalculator.getLocFromIndex(programEndOffset)\n    if (result.ast.end != null) {\n        result.ast.end = [scriptSetupElement, scriptElement].reduce(\n            (end, node) => {\n                const textNode = node.children[0]\n                return Math.max(\n                    end,\n                    textNode != null && textNode.type === \"VText\"\n                        ? textNode.range[1]\n                        : node.endTag?.range[1] ?? node.range[1],\n                )\n            },\n            0,\n        )\n    }\n\n    return result\n}\n\n/**\n * Parses the scripts of the given `<script>` elements and returns\n * the reconstructed source code as a parseable script.\n * It also returns information for remapping the location.\n *\n * For examples, the script is reconstructed as follows.\n *\n * Example 1:\n *\n * ```vue\n * <script>\n * export let count = 42\n * </script>\n * <script setup>\n * import MyComponent from './MyComponent.vue'\n * let count = 42\n * </script>\n * ```\n *\n * \u2193\n *\n * ```js\n * export let count = 42\n * ;\n * import MyComponent from './MyComponent.vue';\n * {\n * let count = 42\n * }\n * ```\n *\n * Example 2:\n *\n * ```vue\n * <script>\n * export let count = 42\n * </script>\n * <script setup>\n * import MyComponent1 from './MyComponent1.vue'\n * let count = 42\n * import MyComponent2 from './MyComponent2.vue'\n * let a\n * </script>\n * ```\n *\n * \u2193\n *\n * ```js\n * export let count = 42\n * ;\n * import MyComponent1 from './MyComponent1.vue';\n * import MyComponent2 from './MyComponent2.vue';\n * {\n * let count = 42;\n * let a\n * }\n * ```\n *\n * Example 3:\n *\n * ```vue\n * <script>\n * export let count = 42\n * export let count2 = 42\n * </script>\n * <script setup>\n * import MyComponent1 from './MyComponent1.vue'\n * let count = 42\n * export {count as ns}\n * export let count2 = 42\n * count2++\n * </script>\n * ```\n *\n * \u2193\n *\n * ```js\n * export let count = 42\n * export let count2 = 42\n * ;\n * import MyComponent1 from './MyComponent1.vue';\n * {\n * let count = 42;\n * let a\n * ;\n * ({count})\n * ;\n * let count2 = 42\n * ;\n * count2++\n * ;\n * }\n * ```\n */\nfunction getScriptSetupModuleCodeBlocks(\n    scriptSetupElement: VElement,\n    scriptElement: VElement,\n    sfcCode: string,\n    linesAndColumns: LinesAndColumns,\n    parserOptions: ParserOptions,\n): ScriptSetupModuleCodeBlocks | null {\n    const scriptSetupCodeBlocks = getScriptSetupCodeBlocks(\n        scriptSetupElement,\n        sfcCode,\n        linesAndColumns,\n        parserOptions,\n    )\n\n    const textNode = scriptElement.children[0]\n    if (textNode == null || textNode.type !== \"VText\") {\n        return scriptSetupCodeBlocks\n    }\n\n    const [scriptStartOffset, scriptEndOffset] = textNode.range\n    const codeBlocks = new CodeBlocks()\n    codeBlocks.append(\n        sfcCode.slice(scriptStartOffset, scriptEndOffset),\n        scriptStartOffset,\n    )\n    if (scriptSetupCodeBlocks == null) {\n        return { codeBlocks }\n    }\n\n    codeBlocks.appendSplitPunctuators(\";\")\n    const scriptSetupOffset = codeBlocks.length\n    codeBlocks.appendCodeBlocks(scriptSetupCodeBlocks.codeBlocks)\n    return {\n        codeBlocks,\n        scriptSetupBlockRange: [\n            scriptSetupCodeBlocks.scriptSetupBlockRange[0] + scriptSetupOffset,\n            scriptSetupCodeBlocks.scriptSetupBlockRange[1] + scriptSetupOffset,\n        ],\n        restoreASTCallbacks: scriptSetupCodeBlocks.restoreASTCallbacks,\n    }\n}\n\n/**\n * Parses the script in the given `<script setup>` and returns the source code with\n * the import blocks and other statements reconstructed.\n * It also returns information for remapping the location.\n */\nfunction getScriptSetupCodeBlocks(\n    node: VElement,\n    sfcCode: string,\n    linesAndColumns: LinesAndColumns,\n    parserOptions: ParserOptions,\n): ScriptSetupCodeBlocks | null {\n    const textNode = node.children[0]\n    if (textNode == null || textNode.type !== \"VText\") {\n        return null\n    }\n\n    const [scriptSetupStartOffset, scriptSetupEndOffset] = textNode.range\n    const scriptCode = sfcCode.slice(\n        scriptSetupStartOffset,\n        scriptSetupEndOffset,\n    )\n\n    const offsetLocationCalculator = simpleOffsetLocationCalculator(\n        scriptSetupStartOffset,\n        linesAndColumns,\n    )\n\n    const result = parseScript(\n        scriptCode,\n        parserOptions,\n        offsetLocationCalculator,\n    )\n\n    const { ast } = result\n\n    // Holds the `import` and re-`export` statements.\n    // All import and re-`export` statements are hoisted to the top.\n    const importCodeBlocks = new CodeBlocks()\n    // Holds statements other than `import`, re-`export` and `export default` statements.\n    // This is moved to a block statement to avoid conflicts with variables of the same name in `<script>`.\n    const statementCodeBlocks = new CodeBlocks()\n    // Holds `export default` statements.\n    // All `export default` statements are move to the bottom.\n    const exportDefaultCodeBlocks = new CodeBlocks()\n    // It holds the information to restore the transformation source code of the export statements held in `statementCodeBlocks`.\n    const restoreASTCallbacks = new RestoreASTCallbacks()\n\n    let astOffset = 0\n\n    /**\n     * Append the given range of code to the given codeBlocks.\n     */\n    function processAppend(codeBlocks: CodeBlocks, start: number, end: number) {\n        if (start < end) {\n            codeBlocks.append(\n                scriptCode.slice(start, end),\n                scriptSetupStartOffset + start,\n            )\n            astOffset = end\n        }\n    }\n\n    /**\n     * Append the partial statements up to the start position to `statementCodeBlocks`.\n     */\n    function processStatementCodeBlock(start: number) {\n        if (astOffset < start) {\n            processAppend(statementCodeBlocks, astOffset, start)\n            statementCodeBlocks.appendSplitPunctuators(\";\")\n        }\n    }\n\n    /**\n     * Append the given range of import or export statement to the given codeBlocks.\n     */\n    function processModuleCodeBlock(\n        codeBlocks: CodeBlocks,\n        start: number,\n        end: number,\n    ) {\n        processAppend(codeBlocks, start, end)\n        codeBlocks.appendSplitPunctuators(\";\")\n    }\n\n    for (const body of ast.body) {\n        if (\n            body.type === \"ImportDeclaration\" ||\n            body.type === \"ExportAllDeclaration\" ||\n            (body.type === \"ExportNamedDeclaration\" && body.source != null)\n        ) {\n            const [start, end] = getNodeFullRange(body)\n            processStatementCodeBlock(start)\n            processModuleCodeBlock(importCodeBlocks, start, end)\n        } else if (body.type === \"ExportDefaultDeclaration\") {\n            const [start, end] = getNodeFullRange(body)\n            processStatementCodeBlock(start)\n            processModuleCodeBlock(exportDefaultCodeBlocks, start, end)\n        } else if (body.type === \"ExportNamedDeclaration\") {\n            // Transform ExportNamedDeclaration\n            // The transformed statement ASTs are restored by RestoreASTCallbacks.\n            // e.g.\n            // - `export let v = 42` -> `let v = 42`\n            // - `export {foo, bar as Bar}` -> `({foo, bar})`\n\n            const [start, end] = getNodeFullRange(body)\n            processStatementCodeBlock(start)\n\n            const tokens = ast.tokens!\n            const exportTokenIndex = tokens.findIndex(\n                (t) => t.range[0] === body.range[0],\n            )\n            const exportToken = tokens[exportTokenIndex]\n            if (exportToken && exportToken.value === \"export\") {\n                processAppend(\n                    statementCodeBlocks,\n                    astOffset,\n                    exportToken.range[0],\n                ) // Maybe decorator\n                if (body.declaration) {\n                    processModuleCodeBlock(\n                        statementCodeBlocks,\n                        exportToken.range[1],\n                        end,\n                    )\n\n                    restoreASTCallbacks.addCallback(\n                        scriptSetupStartOffset,\n                        [start, end],\n                        (statement) => {\n                            if (statement.type !== body.declaration!.type) {\n                                return null\n                            }\n                            fixNodeLocations(\n                                body,\n                                result.visitorKeys,\n                                offsetLocationCalculator,\n                            )\n                            fixLocation(exportToken, offsetLocationCalculator)\n                            body.declaration = statement\n                            statement.parent = body\n                            return {\n                                statement: body,\n                                tokens: [exportToken],\n                            }\n                        },\n                    )\n                } else {\n                    statementCodeBlocks.appendSplitPunctuators(\"(\")\n                    const restoreTokens: Token[] = [exportToken]\n                    let startOffset = exportToken.range[1]\n                    for (const spec of body.specifiers) {\n                        if (spec.local.range[0] < spec.exported.range[0]) {\n                            // {a as b}\n                            const localTokenIndex = tokens.findIndex(\n                                (t) => t.range[0] === spec.local.range[0],\n                                exportTokenIndex,\n                            )\n                            checkToken(tokens[localTokenIndex], spec.local.name)\n                            const asToken = tokens[localTokenIndex + 1]\n                            checkToken(asToken, \"as\")\n                            restoreTokens.push(asToken)\n                            const exportedToken = tokens[localTokenIndex + 2]\n                            checkToken(exportedToken, spec.exported.name)\n                            restoreTokens.push(exportedToken)\n                            processAppend(\n                                statementCodeBlocks,\n                                startOffset,\n                                asToken.range[0],\n                            )\n                            processAppend(\n                                statementCodeBlocks,\n                                asToken.range[1],\n                                exportedToken.range[0],\n                            )\n                            startOffset = exportedToken.range[1]\n                        }\n                    }\n                    processAppend(statementCodeBlocks, startOffset, end)\n                    statementCodeBlocks.appendSplitPunctuators(\")\")\n                    statementCodeBlocks.appendSplitPunctuators(\";\")\n\n                    restoreASTCallbacks.addCallback(\n                        scriptSetupStartOffset,\n                        [start, end],\n                        (statement) => {\n                            if (\n                                statement.type !== \"ExpressionStatement\" ||\n                                statement.expression.type !== \"ObjectExpression\"\n                            ) {\n                                return null\n                            }\n                            // preprocess and check\n                            const locals: ESLintIdentifier[] = []\n                            for (const prop of statement.expression\n                                .properties) {\n                                if (\n                                    prop.type !== \"Property\" ||\n                                    prop.value.type !== \"Identifier\"\n                                ) {\n                                    return null\n                                }\n                                locals.push(prop.value)\n                            }\n                            if (body.specifiers.length !== locals.length) {\n                                return null\n                            }\n                            const map = new Map<\n                                ESLintExportSpecifier,\n                                ESLintIdentifier\n                            >()\n                            for (\n                                let index = 0;\n                                index < body.specifiers.length;\n                                index++\n                            ) {\n                                const spec = body.specifiers[index]\n                                const local = locals[index]\n                                if (spec.local.name !== local.name) {\n                                    return null\n                                }\n                                map.set(spec, local)\n                            }\n\n                            // restore\n                            fixNodeLocations(\n                                body,\n                                result.visitorKeys,\n                                offsetLocationCalculator,\n                            )\n                            for (const token of restoreTokens) {\n                                fixLocation(token, offsetLocationCalculator)\n                            }\n                            for (const [spec, local] of map) {\n                                spec.local = local\n                                local.parent = spec\n                            }\n                            return {\n                                statement: body,\n                                tokens: restoreTokens,\n                            }\n                        },\n                    )\n                }\n            } else {\n                processModuleCodeBlock(statementCodeBlocks, start, end)\n            }\n        }\n    }\n    processStatementCodeBlock(scriptSetupEndOffset)\n\n    // Creates a code block that combines import, statement block, and export default.\n    const codeBlocks = new CodeBlocks()\n\n    codeBlocks.appendCodeBlocks(importCodeBlocks)\n    const scriptSetupBlockRangeStart = codeBlocks.length\n    codeBlocks.appendSplitPunctuators(\"{\")\n    codeBlocks.appendCodeBlocks(statementCodeBlocks)\n    codeBlocks.appendSplitPunctuators(\"}\")\n    const scriptSetupBlockRangeEnd = codeBlocks.length\n    codeBlocks.appendCodeBlocks(exportDefaultCodeBlocks)\n    return {\n        codeBlocks,\n        scriptSetupBlockRange: [\n            scriptSetupBlockRangeStart,\n            scriptSetupBlockRangeEnd,\n        ],\n        restoreASTCallbacks,\n    }\n\n    function getNodeFullRange(n: ESLintNode) {\n        let start = n.range[0]\n        let end = n.range[1]\n        traverseNodes(n, {\n            visitorKeys: result.visitorKeys,\n            enterNode(c) {\n                start = Math.min(start, c.range[0])\n                end = Math.max(end, c.range[1])\n            },\n            leaveNode() {\n                // Do nothing.\n            },\n        })\n        return [start, end] as const\n    }\n\n    function checkToken(token: Token, value: string) {\n        if (token.value === value) {\n            return\n        }\n\n        const perr = new ParseError(\n            `Could not parse <script setup>. Expected \"${value}\", but it was \"${token.value}\".`,\n            undefined,\n            token.range[0],\n            token.loc.start.line,\n            token.loc.start.column,\n        )\n        fixErrorLocation(perr, offsetLocationCalculator)\n        throw perr\n    }\n}\n\nfunction remapAST(\n    result: ESLintExtendedProgram,\n    { scriptSetupBlockRange, codeBlocks }: ScriptSetupModuleCodeBlocks,\n): ESLintStatement[] {\n    if (!scriptSetupBlockRange) {\n        return []\n    }\n\n    let scriptSetupBlock: ESLintBlockStatement | null = null\n    const scriptSetupStatements: ESLintStatement[] = []\n    for (let index = result.ast.body.length - 1; index >= 0; index--) {\n        const body = result.ast.body[index]\n\n        if (body.type === \"BlockStatement\") {\n            if (\n                scriptSetupBlockRange[0] <= body.range[0] &&\n                body.range[1] <= scriptSetupBlockRange[1]\n            ) {\n                if (scriptSetupBlock) {\n                    throw new Error(\n                        `Unexpected state error: An unexpected block statement was found. ${JSON.stringify(\n                            body.loc,\n                        )}`,\n                    )\n                }\n                scriptSetupBlock = body\n                scriptSetupStatements.push(\n                    ...body.body.filter(\n                        (b) => !isSplitPunctuatorsEmptyStatement(b),\n                    ),\n                )\n                result.ast.body.splice(index, 1, ...scriptSetupStatements)\n            }\n        } else if (body.type === \"EmptyStatement\") {\n            if (isSplitPunctuatorsEmptyStatement(body)) {\n                // remove\n                result.ast.body.splice(index, 1)\n            }\n        }\n    }\n\n    if (result.scopeManager && scriptSetupBlock) {\n        const blockScope = result.scopeManager.acquire(\n            scriptSetupBlock as never,\n            true,\n        )!\n        remapScope(result.scopeManager, blockScope)\n    }\n\n    return scriptSetupStatements\n\n    function isSplitPunctuatorsEmptyStatement(body: ESLintStatement) {\n        return (\n            body.type === \"EmptyStatement\" &&\n            codeBlocks.splitPunctuators.includes(body.range[1] - 1)\n        )\n    }\n\n    function remapScope(scopeManager: ScopeManager, blockScope: Scope) {\n        const moduleScope = blockScope.upper!\n\n        // Restore references\n        for (const reference of blockScope.references) {\n            reference.from = moduleScope\n            moduleScope.references.push(reference)\n        }\n        // Restore variables\n        for (const variable of blockScope.variables) {\n            variable.scope = moduleScope\n            const alreadyVariable = moduleScope.variables.find(\n                (v) => v.name === variable.name,\n            )\n            if (alreadyVariable) {\n                alreadyVariable.defs.push(...variable.defs)\n                alreadyVariable.identifiers.push(...variable.identifiers)\n                alreadyVariable.references.push(...variable.references)\n                for (const reference of variable.references) {\n                    reference.resolved = alreadyVariable\n                }\n            } else {\n                moduleScope.variables.push(variable)\n                moduleScope.set.set(variable.name, variable)\n            }\n        }\n        // Remove scope\n        const upper = blockScope.upper\n        if (upper) {\n            const index = upper.childScopes.indexOf(blockScope)\n            if (index >= 0) {\n                upper.childScopes.splice(index, 1)\n            }\n        }\n        const index = scopeManager.scopes.indexOf(blockScope)\n        if (index >= 0) {\n            scopeManager.scopes.splice(index, 1)\n        }\n    }\n}\n\nfunction remapLocationAndTokens(\n    result: ESLintExtendedProgram,\n    { codeBlocks }: ScriptSetupModuleCodeBlocks,\n    locationCalculator: LocationCalculator,\n) {\n    const tokens = result.ast.tokens || []\n\n    const endMap = new Map<number, number>()\n    const buffer: number[] = []\n    for (let index = tokens.length - 1; index >= 0; index--) {\n        const token = tokens[index]\n\n        if (\n            token.range[0] + 1 === token.range[1] &&\n            codeBlocks.splitPunctuators.includes(token.range[0])\n        ) {\n            // remove\n            tokens.splice(index, 1)\n            buffer.push(token.range[1])\n            continue\n        } else {\n            for (const end of buffer) {\n                endMap.set(end, token.range[1])\n            }\n            buffer.length = 0\n        }\n    }\n\n    traverseNodes(result.ast, {\n        visitorKeys: result.visitorKeys,\n        enterNode(node) {\n            const rangeEnd = endMap.get(node.range[1])\n            if (rangeEnd != null) {\n                node.range[1] = rangeEnd\n            }\n            if (node.end) {\n                const end = endMap.get(node.end)\n                if (end != null) {\n                    node.end = rangeEnd\n                }\n            }\n        },\n        leaveNode() {\n            // Do nothing.\n        },\n    })\n\n    fixLocations(result, locationCalculator)\n}\n\nfunction simpleOffsetLocationCalculator(\n    offset: number,\n    linesAndColumns: LinesAndColumns,\n): LocationCalculator {\n    return {\n        getFixOffset() {\n            return offset\n        },\n        getLocFromIndex: linesAndColumns.getLocFromIndex.bind(linesAndColumns),\n    }\n}\n", "import type {\n    OffsetRange,\n    Token,\n    VDocumentFragment,\n    VElement,\n    VExpressionContainer,\n    VStyleElement,\n    VText,\n} from \"../ast\"\nimport { ParseError } from \"../ast\"\nimport { getLang, getOwnerDocument } from \"../common/ast-utils\"\nimport { debug } from \"../common/debug\"\nimport { insertError } from \"../common/error-utils\"\nimport type { LocationCalculatorForHtml } from \"../common/location-calculator\"\nimport type { ParserOptions } from \"../common/parser-options\"\nimport {\n    createSimpleToken,\n    insertComments,\n    replaceAndSplitTokens,\n} from \"../common/token-utils\"\nimport { parseExpression } from \"../script\"\nimport { DEFAULT_ECMA_VERSION } from \"../script-setup/parser-options\"\nimport { resolveReferences } from \"../template\"\n\ntype CSSParseOption = { inlineComment?: boolean }\n\n/**\n * Parse the source code of the given `<style>` elements.\n * @param elements The `<style>` elements to parse.\n * @param globalLocationCalculator The location calculator for fixLocations.\n * @param parserOptions The parser options.\n * @returns The result of parsing.\n */\nexport function parseStyleElements(\n    elements: VElement[],\n    globalLocationCalculator: LocationCalculatorForHtml,\n    originalParserOptions: ParserOptions,\n): void {\n    const parserOptions: ParserOptions = {\n        ...originalParserOptions,\n        ecmaVersion: originalParserOptions.ecmaVersion || DEFAULT_ECMA_VERSION,\n    }\n\n    for (const style of elements) {\n        ;(style as VStyleElement).style = true\n        parseStyleElement(\n            style as VStyleElement,\n            globalLocationCalculator,\n            parserOptions,\n            {\n                inlineComment: (getLang(style) || \"css\") !== \"css\",\n            },\n        )\n    }\n}\n\nfunction parseStyleElement(\n    style: VStyleElement,\n    globalLocationCalculator: LocationCalculatorForHtml,\n    parserOptions: ParserOptions,\n    cssOptions: CSSParseOption,\n) {\n    if (style.children.length !== 1) {\n        return\n    }\n    const textNode = style.children[0]\n    if (textNode.type !== \"VText\") {\n        return\n    }\n    const code = textNode.value\n    // short circuit\n    if (!/v-bind(?:\\(|\\/)/u.test(code)) {\n        return\n    }\n\n    const locationCalculator = globalLocationCalculator.getSubCalculatorAfter(\n        textNode.range[0],\n    )\n    const document = getOwnerDocument(style)\n    parseStyle(\n        document,\n        style,\n        code,\n        locationCalculator,\n        parserOptions,\n        cssOptions,\n    )\n}\n\nfunction parseStyle(\n    document: VDocumentFragment | null,\n    style: VStyleElement,\n    code: string,\n    locationCalculator: LocationCalculatorForHtml,\n    parserOptions: ParserOptions,\n    cssOptions: CSSParseOption,\n) {\n    let textStart = 0\n    for (const {\n        range,\n        expr,\n        exprOffset,\n        quote,\n        openingParenOffset,\n        comments,\n    } of iterateVBind(code, cssOptions)) {\n        insertComments(\n            document,\n            comments.map((c) =>\n                createSimpleToken(\n                    c.type,\n                    locationCalculator.getOffsetWithGap(c.range[0]),\n                    locationCalculator.getOffsetWithGap(c.range[1]),\n                    c.value,\n                    locationCalculator,\n                ),\n            ),\n        )\n\n        const container: VExpressionContainer = {\n            type: \"VExpressionContainer\",\n            range: [\n                locationCalculator.getOffsetWithGap(range[0]),\n                locationCalculator.getOffsetWithGap(range[1]),\n            ],\n            loc: {\n                start: locationCalculator.getLocation(range[0]),\n                end: locationCalculator.getLocation(range[1]),\n            },\n            parent: style,\n            expression: null,\n            references: [],\n        }\n\n        const openingParenStart =\n            locationCalculator.getOffsetWithGap(openingParenOffset)\n        const beforeTokens: Token[] = [\n            createSimpleToken(\n                \"HTMLRawText\",\n                container.range[0],\n                container.range[0] + 6 /* v-bind */,\n                \"v-bind\",\n                locationCalculator,\n            ),\n            createSimpleToken(\n                \"Punctuator\",\n                openingParenStart,\n                openingParenStart + 1,\n                \"(\",\n                locationCalculator,\n            ),\n        ]\n        const afterTokens: Token[] = [\n            createSimpleToken(\n                \"Punctuator\",\n                container.range[1] - 1,\n                container.range[1],\n                \")\",\n                locationCalculator,\n            ),\n        ]\n        if (quote) {\n            const openStart = locationCalculator.getOffsetWithGap(\n                exprOffset - 1,\n            )\n            beforeTokens.push(\n                createSimpleToken(\n                    \"Punctuator\",\n                    openStart,\n                    openStart + 1,\n                    quote,\n                    locationCalculator,\n                ),\n            )\n            const closeStart = locationCalculator.getOffsetWithGap(\n                exprOffset + expr.length,\n            )\n            afterTokens.unshift(\n                createSimpleToken(\n                    \"Punctuator\",\n                    closeStart,\n                    closeStart + 1,\n                    quote,\n                    locationCalculator,\n                ),\n            )\n        }\n        const beforeLast = beforeTokens[beforeTokens.length - 1]\n        replaceAndSplitTokens(\n            document,\n            {\n                range: [container.range[0], beforeLast.range[1]],\n                loc: { start: container.loc.start, end: beforeLast.loc.end },\n            },\n            beforeTokens,\n        )\n        const afterFirst = afterTokens[0]\n        replaceAndSplitTokens(\n            document,\n            {\n                range: [afterFirst.range[0], container.range[1]],\n                loc: { start: afterFirst.loc.start, end: container.loc.end },\n            },\n            afterTokens,\n        )\n\n        const lastChild = style.children[style.children.length - 1]\n        style.children.push(container)\n        if (lastChild.type === \"VText\") {\n            const newTextNode: VText = {\n                type: \"VText\",\n                range: [container.range[1], lastChild.range[1]],\n                loc: {\n                    start: { ...container.loc.end },\n                    end: { ...lastChild.loc.end },\n                },\n                parent: style,\n                value: code.slice(range[1]),\n            }\n            style.children.push(newTextNode)\n\n            lastChild.range[1] = container.range[0]\n            lastChild.loc.end = { ...container.loc.start }\n            lastChild.value = code.slice(textStart, range[0])\n            textStart = range[1]\n        }\n        try {\n            const ret = parseExpression(\n                expr,\n                locationCalculator.getSubCalculatorShift(exprOffset),\n                parserOptions,\n                { allowEmpty: false, allowFilters: false },\n            )\n            if (ret.expression) {\n                ret.expression.parent = container\n                container.expression = ret.expression\n                container.references = ret.references\n            }\n            replaceAndSplitTokens(\n                document,\n                {\n                    range: [beforeLast.range[1], afterFirst.range[0]],\n                    loc: {\n                        start: beforeLast.loc.end,\n                        end: afterFirst.loc.start,\n                    },\n                },\n                ret.tokens,\n            )\n            insertComments(document, ret.comments)\n\n            for (const variable of ret.variables) {\n                style.variables.push(variable)\n            }\n            resolveReferences(container)\n        } catch (err) {\n            debug(\"[style] Parse error: %s\", err)\n\n            if (ParseError.isParseError(err)) {\n                insertError(document, err)\n            } else {\n                throw err\n            }\n        }\n    }\n}\n\nfunction isQuote(c: string): c is '\"' | \"'\" {\n    return c === '\"' || c === \"'\"\n}\n\nfunction isCommentStart(c: string): c is \"/*\" | \"//\" {\n    return c === \"/*\" || c === \"//\"\n}\n\nconst COMMENT = {\n    \"/*\": {\n        type: \"Block\" as const,\n        closing: \"*/\" as const,\n    },\n    \"//\": {\n        type: \"Line\" as const,\n        closing: \"\\n\" as const,\n    },\n}\n\ntype VBindLocations = {\n    range: OffsetRange\n    expr: string\n    exprOffset: number\n    quote: '\"' | \"'\" | null\n    openingParenOffset: number\n    comments: {\n        type: string\n        range: OffsetRange\n        value: string\n    }[]\n}\n\n/**\n * Iterate the `v-bind()` information.\n */\nfunction* iterateVBind(\n    code: string,\n    cssOptions: CSSParseOption,\n): IterableIterator<VBindLocations> {\n    const re = cssOptions.inlineComment\n        ? /\"|'|\\/[*/]|\\bv-bind/gu\n        : /\"|'|\\/\\*|\\bv-bind/gu\n    let match\n    while ((match = re.exec(code))) {\n        const startToken = match[0]\n        if (isQuote(startToken)) {\n            // skip string\n            re.lastIndex = skipString(code, startToken, re.lastIndex)\n        } else if (isCommentStart(startToken)) {\n            // skip comment\n            re.lastIndex = skipComment(\n                code,\n                COMMENT[startToken].closing,\n                re.lastIndex,\n            )\n        } else {\n            // v-bind\n            const openingParen = findVBindOpeningParen(\n                code,\n                re.lastIndex,\n                cssOptions,\n            )\n            if (!openingParen) {\n                continue\n            }\n            const start = match.index\n            const arg = parseVBindArg(\n                code,\n                openingParen.openingParenOffset + 1,\n                cssOptions,\n            )\n            if (!arg) {\n                continue\n            }\n            yield {\n                range: [start, arg.end],\n                expr: arg.expr,\n                exprOffset: arg.exprOffset,\n                quote: arg.quote,\n                openingParenOffset: openingParen.openingParenOffset,\n                comments: [...openingParen.comments, ...arg.comments],\n            }\n            re.lastIndex = arg.end\n        }\n    }\n}\n\nfunction findVBindOpeningParen(\n    code: string,\n    nextIndex: number,\n    cssOptions: CSSParseOption,\n): {\n    openingParenOffset: number\n    comments: {\n        type: string\n        range: OffsetRange\n        value: string\n    }[]\n} | null {\n    const re = cssOptions.inlineComment ? /\\/[*/]|[\\s\\S]/gu : /\\/\\*|[\\s\\S]/gu\n    re.lastIndex = nextIndex\n    let match\n    const comments: {\n        type: string\n        range: OffsetRange\n        value: string\n    }[] = []\n    while ((match = re.exec(code))) {\n        const token = match[0]\n        if (token === \"(\") {\n            return {\n                openingParenOffset: match.index,\n                comments,\n            }\n        } else if (isCommentStart(token)) {\n            // Comment between `v-bind` and opening paren.\n            const comment = COMMENT[token]\n            const start = match.index\n            const end = (re.lastIndex = skipComment(\n                code,\n                comment.closing,\n                re.lastIndex,\n            ))\n            comments.push({\n                type: comment.type,\n                range: [start, end],\n                value: code.slice(\n                    start + token.length,\n                    end - comment.closing.length,\n                ),\n            })\n            continue\n        }\n        // There were no opening parens.\n        return null\n    }\n    return null\n}\n\nfunction parseVBindArg(\n    code: string,\n    nextIndex: number,\n    cssOptions: CSSParseOption,\n): {\n    expr: string\n    exprOffset: number\n    quote: '\"' | \"'\" | null\n    end: number\n    comments: {\n        type: string\n        range: OffsetRange\n        value: string\n    }[]\n} | null {\n    const re = cssOptions.inlineComment ? /\"|'|\\/[*/]|\\)/gu : /\"|'|\\/\\*|\\)/gu\n    const startTokenIndex = (re.lastIndex = skipSpaces(code, nextIndex))\n    let match\n    const stringRanges: OffsetRange[] = []\n    const comments: {\n        type: string\n        range: OffsetRange\n        value: string\n    }[] = []\n    while ((match = re.exec(code))) {\n        const token = match[0]\n        if (isQuote(token)) {\n            const start = match.index\n            const end = (re.lastIndex = skipString(code, token, re.lastIndex))\n            stringRanges.push([start, end])\n        } else if (isCommentStart(token)) {\n            const comment = COMMENT[token]\n            const start = match.index\n            const end = (re.lastIndex = skipComment(\n                code,\n                comment.closing,\n                re.lastIndex,\n            ))\n            comments.push({\n                type: comment.type,\n                range: [start, end],\n                value: code.slice(\n                    start + token.length,\n                    end - comment.closing.length,\n                ),\n            })\n        } else {\n            // closing paren\n            if (stringRanges.length === 1) {\n                // for v-bind( 'expr' ), and v-bind( /**/ 'expr' /**/ )\n                const range = stringRanges[0]\n                const exprRange: OffsetRange = [range[0] + 1, range[1] - 1]\n                return {\n                    expr: code.slice(...exprRange),\n                    exprOffset: exprRange[0],\n                    quote: code[range[0]] as '\"' | \"'\",\n                    end: re.lastIndex,\n                    comments,\n                }\n            }\n\n            return {\n                expr: code.slice(startTokenIndex, match.index).trim(),\n                exprOffset: startTokenIndex,\n                quote: null,\n                end: re.lastIndex,\n                comments: [],\n            }\n        }\n    }\n    return null\n}\n\nfunction skipString(code: string, quote: '\"' | \"'\", nextIndex: number): number {\n    for (let index = nextIndex; index < code.length; index++) {\n        const c = code[index]\n        if (c === \"\\\\\") {\n            index++ // escaping\n            continue\n        }\n        if (c === quote) {\n            return index + 1\n        }\n    }\n    return code.length\n}\n\nfunction skipComment(\n    code: string,\n    closing: \"*/\" | \"\\n\",\n    nextIndex: number,\n): number {\n    const index = code.indexOf(closing, nextIndex)\n    if (index >= nextIndex) {\n        return index + closing.length\n    }\n    return code.length\n}\n\nfunction skipSpaces(code: string, nextIndex: number): number {\n    for (let index = nextIndex; index < code.length; index++) {\n        const c = code[index]\n        if (c.trim()) {\n            return index\n        }\n    }\n    return code.length\n}\n", "/**\n * @author Toru Nagashima <https://github.com/mysticatea>\n * @copyright 2017 Toru Nagashima. All rights reserved.\n * See LICENSE file in root directory for full license.\n */\nimport * as path from \"path\"\nimport * as AST from \"./ast\"\nimport { LocationCalculatorForHtml } from \"./common/location-calculator\"\nimport { HTMLParser, HTMLTokenizer } from \"./html\"\nimport { parseScript, parseScriptElement } from \"./script\"\nimport * as services from \"./parser-services\"\nimport type { ParserOptions } from \"./common/parser-options\"\nimport { getScriptParser } from \"./common/parser-options\"\nimport { parseScriptSetupElements } from \"./script-setup\"\nimport { LinesAndColumns } from \"./common/lines-and-columns\"\nimport type { VElement } from \"./ast\"\nimport { DEFAULT_ECMA_VERSION } from \"./script-setup/parser-options\"\nimport {\n    getLang,\n    isScriptElement,\n    isScriptSetupElement,\n    isStyleElement,\n    isTemplateElement,\n} from \"./common/ast-utils\"\nimport { parseStyleElements } from \"./style\"\n\nconst STARTS_WITH_LT = /^\\s*</u\n\n/**\n * Check whether the code is a Vue.js component.\n * @param code The source code to check.\n * @param options The parser options.\n * @returns `true` if the source code is a Vue.js component.\n */\nfunction isVueFile(code: string, options: ParserOptions): boolean {\n    const filePath = options.filePath || \"unknown.js\"\n    return path.extname(filePath) === \".vue\" || STARTS_WITH_LT.test(code)\n}\n\n/**\n * Parse the given source code.\n * @param code The source code to parse.\n * @param parserOptions The parser options.\n * @returns The parsing result.\n */\nexport function parseForESLint(\n    code: string,\n    parserOptions: any,\n): AST.ESLintExtendedProgram {\n    const options: ParserOptions = Object.assign(\n        {\n            comment: true,\n            loc: true,\n            range: true,\n            tokens: true,\n        },\n        parserOptions || {},\n    )\n\n    let result: AST.ESLintExtendedProgram\n    let document: AST.VDocumentFragment | null\n    let locationCalculator: LocationCalculatorForHtml | null\n    if (!isVueFile(code, options)) {\n        result = parseScript(code, {\n            ...options,\n            ecmaVersion: options.ecmaVersion || DEFAULT_ECMA_VERSION,\n            parser: getScriptParser(options.parser, null, \"script\"),\n        })\n        document = null\n        locationCalculator = null\n    } else {\n        const optionsForTemplate = {\n            ...options,\n            ecmaVersion: options.ecmaVersion || DEFAULT_ECMA_VERSION,\n        }\n        const skipParsingScript = options.parser === false\n        const tokenizer = new HTMLTokenizer(code, optionsForTemplate)\n        const rootAST = new HTMLParser(tokenizer, optionsForTemplate).parse()\n\n        locationCalculator = new LocationCalculatorForHtml(\n            tokenizer.gaps,\n            tokenizer.lineTerminators,\n        )\n        const scripts = rootAST.children.filter(isScriptElement)\n        const template = rootAST.children.find(isTemplateElement)\n        const templateLang = getLang(template) || \"html\"\n        const concreteInfo: AST.HasConcreteInfo = {\n            tokens: rootAST.tokens,\n            comments: rootAST.comments,\n            errors: rootAST.errors,\n        }\n        const templateBody =\n            template != null && templateLang === \"html\"\n                ? Object.assign(template, concreteInfo)\n                : undefined\n\n        const scriptParser = getScriptParser(options.parser, rootAST, \"script\")\n        let scriptSetup: VElement | undefined\n        if (skipParsingScript || !scripts.length) {\n            result = parseScript(\"\", {\n                ...options,\n                ecmaVersion: options.ecmaVersion || DEFAULT_ECMA_VERSION,\n            })\n        } else if (\n            scripts.length === 2 &&\n            (scriptSetup = scripts.find(isScriptSetupElement))\n        ) {\n            result = parseScriptSetupElements(\n                scriptSetup,\n                scripts.find((e) => e !== scriptSetup)!,\n                code,\n                new LinesAndColumns(tokenizer.lineTerminators),\n                {\n                    ...options,\n                    parser: scriptParser,\n                },\n            )\n        } else {\n            result = parseScriptElement(scripts[0], locationCalculator, {\n                ...options,\n                parser: scriptParser,\n            })\n        }\n\n        if (options.vueFeatures?.styleCSSVariableInjection ?? true) {\n            const styles = rootAST.children.filter(isStyleElement)\n            parseStyleElements(styles, locationCalculator, {\n                ...options,\n                parser: getScriptParser(options.parser, rootAST, \"template\"),\n            })\n        }\n\n        result.ast.templateBody = templateBody\n        document = rootAST\n    }\n\n    result.services = Object.assign(\n        result.services || {},\n        services.define(code, result.ast, document, locationCalculator, {\n            parserOptions: options,\n        }),\n    )\n\n    return result\n}\n\n/**\n * Parse the given source code.\n * @param code The source code to parse.\n * @param options The parser options.\n * @returns The parsing result.\n */\nexport function parse(code: string, options: any): AST.ESLintProgram {\n    return parseForESLint(code, options).ast\n}\n\nexport { AST }\n", "/**\n * @fileoverview require id attr for specific element\n * @author Linker\n */\n \"use strict\";\n\n //------------------------------------------------------------------------------\n // Requirements\n //------------------------------------------------------------------------------\n import vifConditionRepeatedTrim from './rules/vif-condition-repeated-trim'\n import parser from 'vue-eslint-parser'\n\n //------------------------------------------------------------------------------\n // Plugin Definition\n //------------------------------------------------------------------------------\nexport default {\n  configs: {\n    recommended: {\n      parser,\n      parserOptions: {\n        ecmaVersion: 2020,\n        sourceType: 'module'\n      },\n      env: {\n        browser: true,\n        es6: true\n      },\n      plugins: ['@int-component/vue-require-id-attr'],\n      rules: {\n        \"@int-component/vue-quality-optimize/vif-condition-repeated-trim\": [2]\n      }\n    }\n  },\n  rules: {\n    'vif-condition-repeated-trim': vifConditionRepeatedTrim\n  }\n}\n ", "import { Rule } from 'eslint'\nimport utils from 'eslint-plugin-vue/lib/utils'\nimport { Node, SourceLocation } from \"estree\"\n\nconst countMap = new Map()\nconst conditionExpressCount = (express: string) => {\n  countMap.set(express, (countMap.get(express) || 0) + 1)\n}\n\nconst vifConditionRepeatedTrim = (context: Rule.RuleContext) => {\n  const visitorNamePattern = 'VExpressionContainer[parent.type=VAttribute&&parent.type&&parent.directive&&parent.key.type=VDirectiveKey&&parent.key.name.type=VIdentifier&&parent.key.name.name=if]'\n  return utils.defineTemplateBodyVisitor(context, {\n    [visitorNamePattern]: (node: Node) => {\n      context.report({\n        node,\n        loc: node.loc as SourceLocation,\n        message: \"repeated vif condition should collect to computed option\",\n        fix(fixer) {\n          return fixer.replaceText(node, '')\n        }\n      })\n    }\n  })\n}\n\nconst theRule: Rule.RuleModule = {\n  meta: {\n    type: 'suggestion',\n    docs: {\n      description: 'auto trim repeated condition and collect it to computed option',\n      suggestion: true\n    },\n    fixable: 'code',\n    schema: [\n      {\n        type: 'array'\n      }\n    ]\n  },\n  create: vifConditionRepeatedTrim\n}\n\nexport default theRule\n"],
  "mappings": "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",
  "names": []
}
